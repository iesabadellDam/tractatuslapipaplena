---
layout: post
title: "apt-get"
date: 2013-12-27 19:39
comments: true
categories: 
---
Gestor de programario de distribuciones Debian

>\# apt-get update    (Actualiza la lista de paquetes)

>\# apt-get upgrade   (Actualiza todos los paquetes instalados)

>\# apt-get upgrade paquete     (Solo actualiza “paquete”)

>\# apt-get dist-upgrade    (Actualiza la distribución) 

>\# apt-get install paquete (Instala paquetes con resolución de depencias)

>\# pat-get install paquete -y (instalar paquete sin pedir confirmación)

>\# apt-get install --reinstall  paquete      (Reinstala un paquete)

>\# apt-get autoremove  (Borra paquetes huérfanos)

>\# apt-get remove paquete        (Elimina un paquete)

>\# apt-get remove --purge paquete  (Desinstala con archivos de configuración)

>\# apt-get remove $(deborphan)  (Elimina huerfanos. lanzar varias veces)

>\# apt-get clean        (Elimina caché)

>\# apt-get autoclean  (lo mismo de versiones antiguas de paquetes)

>\# apt-get -f install   (sin especificar paquete, para reparar la aplicación) 

>\# apt-get -s install paquete        (simula la instalación)

>\# apt-get --compile source paquete  (baja las fuentes, compila y crear un .deb)

>\# apt-get check          (Verifica dependencias rotas)

>\# apt-get build-dep paquete (instalar las dependencias necesarias para poder compilar un paquete fuente)

>\# apt-get install network-manager=0.9.1.90-0ubuntu3 (version concreta)

>\# apt-get hold network-manager (Mantener una version concreta)

>\# apt-get source paquete (buscar un paquete fuente para ser compilado)

>\# apt-rdepends paquete (muestra todas las dependencias)

>\# apt-rdepends -b paquete (muestra las dependencias directas)

>\# apt-rdepends -f paquete  (muestra version y estado del paquete)

>\# apt-cache search paquete       (Busca en la cache paquete)

>\# apt-cache show paquete         (Muestra la descripción completa del paquete)

>\# apt-cache showpkg paquete   (Muestra su relación con otros paquetes)

>\# apt-cache depends paquete    (Muestra las dependencias del paquete)

>\# apt-cache rdepend paquete     (Muestra dependencias inversas del paquete)

>\# apt-cache policy paquete       (repositorio de donde se ha bajado un paquete)

>\# apt-get --yes install paquete (Responder “si” a preguntas de la instalación)

>\# aptitude search ~ilinux-image (Lista los kernels instalados)

>\# aptitude search ~i -F %p (Lista los paquetes instalados)

>\# apt-setup                              (Crea un sources.list optimizado)

>\# add-apt-repository ppa:repositorio   (añadir un repositorio ppa)

>\# ppa-purge ppa:repositorio   (suprimirlo. Precisa el script ppa-purge))

/etc/apt/sources.list               (Fichero de repositorios.)

/var/cache/apt/archives          (Caché de los paquetes .deb instalados)

/var/log/apt/term.log (Archivo de logs de la aplicación)

1.-

Para resolver problemas con  /var/lib/apt/lists/*  lanzar:

>\# rm /var/lib/apt/lists/* -vf 

Y luego: 

>\# apt-get update

2.-

>\# apt-get -o "Acquire::Check-Valid-Until=false" update   (Saltarse el validador  que verifica la fecha de caducidad del archivo “Release” de debian [Error ” Release file expired, ignoring file”])

3.-

Añadir repositorios de distintas ramas en debian.

Incluir en el sources.list los repositorios de las distintas ramas:

>\# nano sources.list

	## Debian Testing

	deb http://ftp.de.debian.org/debian/ testing main contrib non-free

	deb-src http://ftp.de.debian.org/debian/ testing main contrib non-free

	## seguridad Debian Testing

	deb http://security.debian.org/ testing/updates main contrib non-free

	deb-src http://security.debian.org/ testing/updates main contrib non-free

	## Debian Unstable

	deb http://ftp.us.debian.org/debian unstable main non-free contrib

	## Debian experimental

	deb http://ftp.fr.debian.org/debian experimental main non-free contrib

Editar o crear el fichero:

>\# nano /etc/apt/apt.conf

Con el siguiente contenido:

	APT::Default-Release “testing”;

	APT::Cache-Limit 55000000;

	Apt::Get::Purge;

	APT::Clean-Installed;

	APT::Get::Fix-Broken;

	APT::Get::Fix-Missing;

	APT::Get::Show-Upgraded “true”;

Con el que establecemos las siguientes caracteristicas: Definir Debian Testing como rama principal,Limitar la cache utilizada en el proceso de actualización,Borrar archivos de configuración de los paquetes desinstalados y Arreglar el sistema en caso de detectar dependencias rotas.

Editar el archivo preferences:

>\# nano /etc/apt/preferences

Con el contenido:

	Package: *

	Pin: release a=testing

	Pin-Priority: 900

	Package: *

	Pin: release a=unstable

	Pin-Priority: 600

	Package: *

	Pin: release a=experimental

	Pin-Priority: 50

Que tiene por significado que si el paquete existe en la rama testing se enstalará este, en caso contrario, si existe en unstable se instalará el unstable y sólo si no existe en las otras dos, se instalará de la versión experimental.

También podemos especificarlo en el comando:

>\# apt-get install libreoffice/unstable (Firefox se instalará de la rma unstable, pero las dependencias, se buscarán en primer lugar en la rama testing)

>\# apt-get -t unstable install firefox (Tanto firefox como las dependencias se instalarás de la rama unstable)

4.-

Instalación de aplicaciones sin conexión a internet. Ha de instalarse en dos equipos: el que tiene conexión y en el que no la tiene. Esta aplicación tiene muchas limitaciones ya que no instala dependencias por lo que puede usarse en pocos casos.

En el equipo sin conexión:

>\# apt-offline set apt.sig --update --upgrade --install-packages PAQUETE (genera el archivo apt.sig que ha de trasladarse al equipo que tiene conexión)

En el equipo conexión:

>\# apt-offline get apt.sig --threads 5 --bundle offline.zip (Crea el archivo offline.zip que se traslada al equipo sin conexión)

Otra vez en el equipo sin conexión:

>\# apt-offline install offline.zip

>\# apt-get install PAQUETE (Instalación del paquete)

