---
layout: post
title: "tuberias"
date: 2014-01-29 18:34
comments: true
categories: 
---
1.-

comando1 | comando2  (el resultado de comando1 se utiliza para comando2)

>$ dmesg                            (montón de datos) 

>$ dmesg | grep 'error'       (solo los que den "error")  

2.-

comando1 & comando2 (los comando se ejecutan simultáneamente, pero  comando1 se ejecuta en segundo plano (background))

>$ sudo firestarter & ifconfig

[1] 16572                   (pid de firestarter en baskground)

eth0      Link encap:Ethernet  Hwa....  (ejecución de ifconfig)

Matar el proceso de forma clásica (# kill -9 16572)

3.-

comando & exit  (Lanzado como usuario normal, ejecuta el comando o abre la aplicación y cierra la terminal [gedit & exit])

4.-

gksu comando & exit (Lo mismo pero como root [gksu synaptic & exit] Se cierra la terminal pero se abre una ventana pidiendo la contraseña)

5.-

comando1 && comando2  (si comando1 funciona  se ejecuta comando2)

Probar la diferencia con los ejemplos anterior y posterior substituyendo los caracteres.

6.-

comando1 || comando2  (comando2 se ejecuta solamente si comando1 falla)

>$ sudo filestarmer || ifconfig

filestarmer: command not found    (error por tanto ...)

eth0      Link encap:Ethe ....           (... se ejecuta ifconfig)

>$ ls || ifconfig                                  (solo ejecutará ls)

7.-

comando1; comando2 (comando2 se ejecuta despues de comando1)

>$ ls; ifconfig; filestarmer; who

8.-

Redireccionamiento de errores:

>$ cat archivo_inexistente

cat: archivo_inexistente: El fichero o el directorio no existe

El error direccionado a un archivo [error]:

>$ cat archivo_inexistente 2> error

>$

También pueden usarse dos signos > [2>> error] para añadir el error a continuación sin borrar el contenido del fichero “error”. Para mandar los errores al pozo sin fondo:

>$ cat archivo_inexistente 2>/dev/null

O varios direccionamientos:

>$ find / -name archivo > encontrado 2> errores &

>$ find / -name archivo >& encontrado-errores.txt (Otra forma de redirigir a dos archivos [encontrado y errores.txt])

Indicando que la salida del comando find (las rutas en donde encontró el “archivo ”) se almacene en el archivo “encontrado” y que si existe errores en la ejecución del comando (no tiene permisos para entrar a buscar en algún 

directorio) el error se almacene en el archivo “errores”. Adicionalmente enviamos el comando a background para poder hacer uso de la terminal mientras se realiza el proceso.  

