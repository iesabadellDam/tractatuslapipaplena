fail2ban
Cortafuegos. Habilitar los servicios en los que se quiera que actue el cortafuegos [ssh, apache2, ftp....] editando /etc/fail2ban/jail.conf y substituyendo el “false” por “true”. Algunos parámetros de este archivo son:
ignoreip  (lista de IPs separadas por un espacio en blanco que no serán bloqueadas)
bantime (tiempo en segundos que un host permanecerá bloqueado)
maxretry (número máximo de intentos de login fallidos antes de ser bloqueado)
filter (filtro usado según el archivo /etc/fail2ban/filter.d)
logpath (archivo que utiliza para revisar los intentos de login)
Un ejemplo muestra de configuración para el servicio ssh:
	[ssh]
	enabled  = true
	port     = ssh
	filter   = sshd
	logpath  = /var/log/auth.log
	maxretry = 3
>\# tail -f /var/log/fail2ban.log | grep Ban    (monitorizar las ip baneadas)
>\# awk '($(NF-1) = /Ban/){print $NF}' /var/log/fail2ban.log | sort | uniq -c | sort (Solo muestra las Ips.)
>\# awk '($(NF-1) = /Ban/){print $NF,"("$NF")"}' /var/log/fail2ban.log | sort | logresolve | uniq -c | sort  (Mostrando el nombre del host)
1.-
Bloquear errores w00tw00t.at.ISC.SANS en los logs de apache. En realidad estas peticiones no acaban en ningún ataque concreto. Estan producidos por el escaner de puertos Dfind que al generar sus peticiones coloca "w00tw00t.at.ISC.SANS.DFind".
Crear el archivo:
>\# nano /etc/fail2ban/filter.d/apache-w00tw00t.conf
Pegar el siguiente contenido:
	[Definition]
	failregex = ^.*\[client <HOST>\].*w00tw00t\.at\.ISC\.SANS\.*.*
	ignoreregex =
Añadir la jaula:
>\# nano /etc/fail2ban/jail.conf
Y pegar:
	[apache-w00tw00t]
	enabled = true
	filter = apache-w00tw00t
	action = iptables-allports[name=w00tw00t]
	logpath = /var/log/apache*/error.*.log
	maxretry = 1
	bantime = -1
Nota.- el bantime = -1 indica bloquear permanentemente. 
