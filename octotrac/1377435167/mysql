mysql
Gestor de bases de datos [BDs]. Todas las sentencias han de terminar con un punto y coma [;] menos la sentencia "USE" 
>$ mysqldump -u root -p proveedores > fichero.sql (Crear un backup de la BD "proveedores".) 
>$ mysql proveedores < fichero.sql (Restaurar la BD "proveedores" de un archivo) 
>$ mysqlimport -u root -p clientes fichero.sql (Otra forma de restaurar una BD si esta ya existe) 
>$ mysqldump -u root -p --all-databases > fichero.sql (Backup de todas las BDs) 
>$ mysqldump -u root -p --databases clientes proveedores > fichero.sql (Backup de dos BDs) 
>$ mysqldump -u root -p proveedores --ignore-table=antiguos > fichero.sql (Backup ignorando una BDs) 
>$ mysql -u root -p1234 (Acceder a la BD con el usuario "root" y contraseña "1234"[nótese que la contraseña está junto a la "p") 
>$ mysql -u root -p (Pedirá contraseña para acceder a la BD con el usuario "root") 
>$ mysql -u root -p datos (Entrar en mysql y directamente en la BD "datos" [notese que la BDs está separada de la "p" por un espacio, sinó se tomaría como la contraseña]) 
Una vez en el prompt de mysql: 
mysql> show databases; (Mostrar las BDs existentes) 
mysql> create database datos; (Crear la BD "datos") 
mysql> USE datos (Entrar en la BD "datos". Sin punto y coma final) 
mysql> show tables; (Mostrar las tablas de la BD en la que se ha entrado) 
mysql> DESCRIBE una_tabla (Mostrar los campos de una tabla concreta) 
mysql> exit (Salir de mysql. Tambien con "quid" o Ctrl+d) 
mysql> select version(), current_date; (Mostrar versión de mysql y fecha) 
Modelo de creación de una tabla dentro de una BD mysql: 
    mysql> CREATE TABLE usuarios( 
    -> nombre VARCHAR(20), apellido VARCHAR(20), 
    -> profesión VARCHAR(20), sexo CHAR(1), nacimiento DATE, 
    -> antiguedad DATE); 
VARCHAR(20) (Que los valores que se almacenarán son de longitud variable de hasta 20 caracteres) 
CHAR(1) (Que el valor será fijo y solo tendrá un caracter) 
DATE (En formato YYYY-MM-DD) 
Para entrar datos en la tabla anterior, podemos crear un archivo de texto "usuarios.txt" que contenga un registro por línea con valores separados por tabuladores, cuidando que el orden de las columnas sea el mismo que utilizamos en la sentencia CREATE TABLE. Para valores que no conozcamos podemos usar valores nulos usando \N. Ejemplo: 
>$ nano usuarios.txt 
Juan	Borras	contable	m	1964-05-12	1988-03-27 
Maria	Gil	administrativo	f	1983-10-03	2004-08-05 
Antonio Gomez	portero		m	\N		2006-11-01 
Para cargarlo en la BD: 
mysql> LOAD DATA LOCAL INFILE "usuarios.txt" INTO TABLE datos; 
LOAD DATA (Permite especificar cuál es el separador de columnas y el separador de registros. Por defecto el tabulador es el separador de columnas (campos) y el salto de línea es el separador de registros) 
Para añadir un nuevo registro a la BD anterior: 
mysql> INSERT INTO usuarios 
    -> VALUES('Jose','Robles','administrativo','m',NULL,'2012-12-01'); 
Valores y fechas entre comillas simples y valores desconocidos NULL y no \N como entrando un archivo. 
mysql> SELECT * FROM usuarios; (Ver toda la tabla para comprobar si se ha añadido el último registro) 
Para modificar un registro puede realizarse borrando toda la tabla de datos y entrando nuevamente el archivo usuarios.txt si este está actualizado: 
mysql> DELETE FROM usuarios; 
mysql> LOAD DATA LOCAL INFILE "usuarios.txt" INTO TABLE usuarios; 
O modificando solo el registro: 
mysql> UPDATE usuarios SET nacimiento="1959-04-12" 
WHERE apellido="Gomez"; 
mysql> SELECT * FROM usuarios WHERE apellido="Gomez"; (Verificar si se ha realizado la modificación) 
mysql> SELECT * FROM usuarios WHERE nacimiento >= "1990-1-1"; (filtrar los que han nacido antes de la fecha indicada) 
mysql> SELECT * FROM usuarios WHERE profesion="administrativo" AND sexo="f"; (filtrar los administrativos de sexo femenino) 
mysql> SELECT * FROM usuarios WHERE profesion="portero" OR profesion="contable"; (filtrar porteros y contables) 
mysql> SELECT * FROM usuarios WHERE (profesion="portero" AND sexo="f") 
    -> OR (nombre = "juan" AND sexo = "m"); (Filtrar distintas opciones encerradas entre parentesis) 
mysql> SELECT apellido, nacimiento FROM usuarios; 
mysql> SELECT antiguedad FROM usuarios; (Filtrar la columna "antiguedad") 
mysql> SELECT nombre, nacimiento FROM usuarios ORDER BY nacimiento; (Ordenar por fecha nacimiento) 
mysql> drop table usuarios; (Eliminar una tabla)
mysql> drop table if exists usuarios; (Eliminar tabla si existe)
