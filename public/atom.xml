<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TRACTATUS ELEMENTALIS]]></title>
  <link href="https://tractatuslapipaplena.herokuapp.com/atom.xml" rel="self"/>
  <link href="https://tractatuslapipaplena.herokuapp.com/"/>
  <updated>2014-01-28T16:43:03+01:00</updated>
  <id>https://tractatuslapipaplena.herokuapp.com/</id>
  <author>
    <name><![CDATA[templix]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ifne]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/ifne/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/ifne</id>
    <content type="html"><![CDATA[<p>[moreutils]. Se ejecuta si la entrada estandar no está vacia.</p>

<blockquote><p>$ find . -name archivo | ifne echo &#8220;Existe&#8221; (Si &#8220;archivo&#8221; existe se ejecutará el echo. Si no existe, no)</p>

<p>$ find . -name archivo | ifne -n echo &#8220;No existe&#8221; (Si &#8220;archivo&#8221; no existe se ejecutará el echo. Si existe, no)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ifdata]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/ifdata/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/ifdata</id>
    <content type="html"><![CDATA[<p>[moreutils]. Muestra información de la red.</p>

<blockquote><p>$ ifdata -p eth0 (Muestra la ip local, la mascara de red, la dirección broadcast y los MTU de la red)</p>

<p>$ ifdata -pa -pn eth0 (Muestra la ip local i la mascara de red)</p>

<p>$ ifdata -pe eth5 (Muestra &#8220;yes&#8221; o &#8220;no&#8221; sobre si existe o no la red especificada)</p></blockquote>

<p>Otras opciones:</p>

<p>-pb (La dirección broadcast)</p>

<p>-ph (Muestra la MAC)</p>

<p>-pf (Muestra las caracteristicas de la red)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ifconfig]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/ifconfig/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/ifconfig</id>
    <content type="html"><![CDATA[<p>[net-tools]. Define direcciones ip y dispositivos de red</p>

<blockquote><p># ifconfig  (ver los datos de conexión)</p>

<p># ifconfig eth0 up 192.168.1.2 (Levanta la placa de red eth0 y le da la ip)</p>

<p># ifconfig eth0 down (Cierra la red eth0)</p>

<p># ifconfig eth0 promisc (Poner la placa en modo promiscuo)</p>

<p># ifconfig wlan0 up (si se trata de redes inalámbricas)</p>

<p># ifconfig eth0 hw ether 00:01:02:03:04:05  (cambiar la dirección MAC)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[identify]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/identify/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/identify</id>
    <content type="html"><![CDATA[<p>[imagemagick]. Ver las propiedades de una imagen</p>

<blockquote><p>$ identify imagen.gif</p>

<p>$ identify -verbose imagen.jpg   (Con mucha más información)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/html/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/html</id>
    <content type="html"><![CDATA[<p>Lenguaje de marcado predominante en la elaboración de páginas web.</p>

<p>Las etiquetas básicas de HTML de obligada presencia en todo documento son:</p>

<pre><code>&lt;!DOCTYPE&gt; (define el tipo de documento HTML) 

&lt;html&gt; (Inicio del documento) 

&lt;head&gt;  (Cabecera del documento.  Metadatos que no se muestran en el navegador pero de especial relevancia para indexadores) 

En el interior de la etiqueta &lt;head&gt; podemos encontrar: 

&lt;title&gt;  (Título que aparece en la barra del navegador) 

&lt;meta&gt;  (Metainformación del codumentos: autor, fecha realización, codificación ...) 

&lt;LINK&gt;  (Otros metadatos: referencias a documentos anteriores, glosarios...) 

&lt;body&gt; (Cuerpo del documento que se muestra en el navegador) 

Dentro de la etiqueta &lt;body&gt; podemos encontrar: 

&lt;a&gt;  (Ancla. Crea un enlace a otro documento o parte del mismo) 

&lt;h1&gt;, &lt;h2&gt;,… &lt;h6&gt;  (Establece la medida de los títulos de cabecera. De h1, más grande a h6 más pequeño) 

&lt;div&gt; (División estructural de la página) 

&lt;p&gt;  (Párrafo) 

&lt;br&gt;  (Salto de linea) 

&lt;table&gt; (Inicio de una tabla. La fias se defines con &lt;tr&gt; i las celdas dentro de las filas con &lt;td&gt;) 

&lt;ul&gt; Lista desordenada.Los ítems se definen con &lt;li&gt;) 

&lt;ol&gt; (Lista ordenada. Los ítems se definen con &lt;li&gt;) 

&lt;dl&gt; (Lista de definición. Pueden ser &lt;dt&gt; [termino a definir] y &lt;dd&gt; Definición del termino) 
</code></pre>

<p>Excepto algunas pocas etiquetas, la mayoría requieren ser cerradas con la misma etiqueta precedida de una barra: <html>&#8230;.</html></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hosts]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/hosts/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/hosts</id>
    <content type="html"><![CDATA[<p>(/etc/hosts). Contiene la resolución de &#8220;Hosts&#8221; definidos localmente. La estructura es: IP, nombre del host y alias.</p>

<p>192.168.1.10 mi_servidor.com servidor</p>

<p>127.0.0.1 localhost mipc</p>

<p>1.-</p>

<p>Configurar bloqueo de páginas web:</p>

<pre><code># nano /etc/hosts
</code></pre>

<p>Y debajo de:</p>

<p>127.0.0.1 localhost</p>

<p>127.0.1.1 tux</p>

<p>Añadimos, después de la ip local, las que se quieran bloquear separadas por un espacio:</p>

<p>127.0.0.1 localhost</p>

<p>127.0.1.1 tux</p>

<p>127.0.0.1 www.porn.net www.google.es</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[host.conf]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/host-dot-conf/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/host-dot-conf</id>
    <content type="html"><![CDATA[<p>(/etc/host.conf). Archivo que contiene el orden de cómo serán ejecutadas las resoluciones que requiera el &#8220;Host&#8221;. Algunos parámetros:</p>

<p><strong>order hosts,bind,nis</strong> (que cualquier tipo de resolución primero consulte el archivo /etc/hosts , en segundo lugar a BIND y si aún no se ha logrado la resolución, intentar con NIS)</p>

<pre><code>BIND (Llamada al servidor de nombres)

NIS ("Network Information Server" es un sistema de resolución desarrollado por Sun Microsystem's , su implementación generalmente esta limitada a intranets y utiliza una metodología diferente a la usada por BIND
</code></pre>

<p><strong>multi on</strong> (Que devuelva más de un resultado si existen alias ya que un host puede tener varias direcciones IP y la dirección IP puede coincidir con varios nombres de host. Por defecto es off [sólo se muestra el primero] )</p>

<p><strong>spoofalert on</strong> (Intentar encontrar el nombre de host de una dirección IP. Si la aplicación no devuelve el resultado correcto, puede significar que una máquina intenta hacerse pasar por lo que no es.)</p>

<p><strong>nospoof on</strong> (rechaza los resultados que no pasan la prueba de robo de identidad)</p>

<p><strong>reorder on</strong> (intenta reordenar las direcciones de host para que las direcciones locales [misma subred] se listen en primer lugar)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[honeyproxy]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/honeyproxy/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/honeyproxy</id>
    <content type="html"><![CDATA[<p>[python-pip]. Analiza el tráfico web. Instalación:</p>

<blockquote><p># pip install pyOpenSSL pyasn1 Twisted Autobahn</p>

<p>$ git clone &#8211;recursive git://github.com/mhils/HoneyProxy.git</p>

<p>$ cd HoneyProxy</p>

<p># python honeyproxy.py &#8211;no-gui -a 192.168.1.15 (Arrancar el servicio)</p></blockquote>

<pre><code>HoneyProxy has been started!

Configuration Details (normal users: ignore):

GUI: http://honey:zhw78b35ioynhg8vr4jcfmn5f326d4e4@localhost:8081/app/

Proxy Address: 192.168.1.15:8080

WebSocket Port: 8082

Auth user: honey

Auth key: zhw78b35ioynhg8vr4jcfmn5f326d4e4
</code></pre>

<p>Una vez instalado y arrancado el servicio, configurar el navegador para su uso en Editar/Preferencias/Avanzado/Red/Configurar la conexión, clicar en &#8220;Configuración manual del proxy&#8221; y en servidor intermediario de HTTP porner la ip de la máquina local o remota puesta al arrancar la aplicación [192.168.1.15 en este caso] y el puerto 8080. Los informes, colocando en la barra de navegación la dirección que muestra al arrancar el servicio, en este caso: http://honey:zhw78b35ioynhg8vr4jcfmn5f326d4e4@localhost:8081/app/ (usuario: honey y key: zhw78b35ioynhg8vr4jcfmn5f326d4e4). Por defecto los informes se guardan en ./dump/sites. Para parar el servicio, matar el proceso:</p>

<pre><code>$ ps aux | grep honeyproxy

$ kill -9 PID
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hg]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/hg/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/hg</id>
    <content type="html"><![CDATA[<p>[mercurial]</p>

<p>Mercurial es un potente programa de control de versiones para nuestros proyectos. Previamente crear en la carpeta personal, el archivo:</p>

<blockquote><p>$ nano .hgrc</p></blockquote>

<p>Con el siguiente contenido:</p>

<pre><code>[ui]

username = Juanito Perez juanitoperez@gmail.com
</code></pre>

<blockquote><p>$ hg init repositorio . (crea un repositorio en el directorio actual o en el que se especifique)</p>

<p>$ hg add  (añade los ficheros existentes en el directorio a nuestro proyecto)</p>

<p>$ hg clone http://servidor.com/hg (clona un repositorio a la carpeta actual)</p>

<p>$ hg clone ssh://usuario@servidor.com/carpeta repositorio (clona &#8220;carpeta&#8221; usando ssh en el directorio &#8220;repositorio&#8221; del directorio actual)</p>

<p>$ hg status (muestra el estado de los ficheros del proyecto)</p>

<p>$ hg commit (realizamos un commit al proyecto)</p>

<p>$ hg push (enviamos los cambios al repositorio remoto)</p>

<p>$ hg pull (recuperamos cambios del repositorio)</p>

<p>$ hg update (Recargar los archivos despues de un pull)</p>

<p>$ hg update -C (Mezclar cambios [merge])</p>

<p>$ hg log (vemos todos los cambios realizados en el proyecto)</p>

<p>$ hg log -r 5 (Muestra la 5ª revisión)</p>

<p>$ hg log -r 2:5 (Muestra de las 2ª a la 5ª revisión)</p>

<p>$ hg log -p -r 6 (Muestra todas las modificaciónes del archivo de la 6ª revisión)</p>

<p>$ hg tip -v (Muestra los datos de la última revisión)</p>

<p>$ hg help comando (vemos la ayuda integrada del hg para el comando)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hexdump]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/hexdump/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/hexdump</id>
    <content type="html"><![CDATA[<p>[exedit]. Editor de archivos binarios.</p>

<blockquote><p>$ hexdump -C archivo_binario</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gzip]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/gzip/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/gzip</id>
    <content type="html"><![CDATA[<p>(gz). Comprime un fichero (ni empaqueta ni comprime directorios)</p>

<blockquote><p>$ gzip -r fichero (Comprimir)</p>

<p>$ gzip -9 archivo (Con compresión máxima)</p>

<p>$ gzip -d fichero.gz (Descomprimir)</p>

<p>$ gzip -c fichero.gz (Ver contenido)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gs]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/gs/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/gs</id>
    <content type="html"><![CDATA[<p>[GhostScript]. Unir archivos pdf y ps.</p>

<blockquote><p>$ gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=1+2.pdf 1.pdf 2.pdf</p>

<p>$ gs -q -sPAPERSIZE=a4 -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=1+2.pdf 1.pdf 2.pdf  (Especificando medida de página)</p>

<p>$ gs -q -dNOPAUSE -dBATCH -sDEVICE=pswrite -sOutputFile=1+2.ps 1.ps 2.ps</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grive]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/grive/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/grive</id>
    <content type="html"><![CDATA[<p>[gdrive]. Permite sincronizar cualquier carpeta local con el servicio de almacenamiento online de Google. En Ubuntu: add-apt-repository ppa:nilarimogard/webupd8</p>

<blockquote><p>$ mkdir grive (crear una carpeta para sincronizar archivos)</p>

<p>$ cd grive (Entrar en la carpeta)</p>

<p>$ grive -a (Mostrará una URL que debe copipastearse al navegador, preferiblemente chromium, y este nos mostrará un código que ha de copipastearse a la consola, tras lo cual empieza el sincronización)</p></blockquote>

<p>A partir de este momento siempre que entremos en la carpeta gdrive podremos sincronizarla con el almacenamiento de Google lanzando:</p>

<blockquote><p>$ grive</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[graphviz]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/graphviz/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/graphviz</id>
    <content type="html"><![CDATA[<p>(meta paquete). Genera gráficos a partir de archivos de texto. Ver pactree. Generar un archivo con pactree:</p>

<blockquote><p>$ pactree -g htop > htop</p>

<p>$ dotty htop (muestra el gráfico)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[go2]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/go2/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/go2</id>
    <content type="html"><![CDATA[<p>Buscador de directorios. En Ubuntu es necesario hacer el “&#8211;setup”.</p>

<blockquote><p>$ go2 images (Mostrará una lista de todos los directorios “images” del directorio personal precedidos de una letra [a, b, c&#8230;] al pulsarla, entraremos directamente en el directorio especificado)</p>

<p>$ go2 -r carpeta (Busca desde el directorio raiz)</p>

<p>$ go2 -l carpeta (Hace la búsqueda pero sólo muestra el resultado saliendo al acabar dicha búsqueda)</p>

<p>$ /usr/lib/go2/go2.sh &#8211;setup (configura nuestro .bashrc para poder llamar al comando con go2 simplemente)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gnome-screensaver-command]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/gnome-screensaver-command/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/gnome-screensaver-command</id>
    <content type="html"><![CDATA[<p>Herramienta de control del salvapantallas</p>

<blockquote><p>$ gnome-screensaver-command -l (Bloqueo inmediato)</p></blockquote>

<p>Opciones</p>

<pre><code>--exit (Salir de salvapantalla)  

-q (Consulta el estado de la pantalla)

-t (Tiempo para que entre en acción)

-a (Activarlo)

-d (Desactivarlo)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gnome]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/gnome/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/gnome</id>
    <content type="html"><![CDATA[<p>Entorno de escritorio</p>

<blockquote><p># rm -rf .gnome .gnome2 .gconf .gconfd .metacity (Resetear la configuración)</p>

<p>$ gnome-open archivo.odt   (abrir un archivo con la aplicación asociada a ella por defecto)</p>

<p>$ gnome-open http://web.com   (lo mismo con una dirección web)</p></blockquote>

<p>Ajustes</p>

<p>1.-</p>

<p>Suprimir rastro de los documentos e imagenes abiertas (lugares -> Documentos recientes):</p>

<blockquote><p>$ rm .recently-used.xbel</p>

<p>$ mkdir .recently-user.xbel</p></blockquote>

<p>También:</p>

<blockquote><p>$ nano .gtkrc-2.0</p></blockquote>

<p>Si no está se crea. Añadir la linea:</p>

<p>gtk-recent-files-max-age=0</p>

<p>2.-</p>

<p>Acciones sobre gnome y paneles</p>

<blockquote><p># killall gnome-panel (Matar el proceso)</p>

<p># dpkg &#8211;purge &#8211;force-all gnome-panel gnome-panel-data (Desinstalar)</p>

<p># apt-get install gnome-panel gnome-panel-data (instalar el panel)</p>

<p># apt-get install &#8211;einstall gnome-panel gnome-panel-data (reinstalarlo)</p>

<p># /etc/init.d/gdm restart (reiniciar gnome)</p>

<p># gnome-panel &amp; (lanzar la aplicación)</p>

<p># pkg-reconfigure xserver-xorg (reconfigurar la seccion gráfica)</p>

<p># apt-get remove gnome-desktop (desinstalar las X)</p>

<p># apt-get install gnome-desktop (instalar las X)</p>

<p># pgrep -lf gnome-panel | awk &#8216;{if ($2==&#8221;gnome-panel&#8221;) print $1}&#8217; | xargs kill -9 (reiniciar los paneles)</p></blockquote>

<p>3.-</p>

<p>Carpetas por defecto que aparecen en el directorio /home</p>

<blockquote><p>$ cat .config/user-dirs.dirs | grep ^XDG</p></blockquote>

<p>XDG_DESKTOP_DIR=&#8221;$HOME/Escriptori&#8221;</p>

<p>XDG_DOWNLOAD_DIR=&#8221;$HOME/Baixades&#8221;</p>

<p>XDG_TEMPLATES_DIR=&#8221;$HOME/&#8221;</p>

<p>XDG_PUBLICSHARE_DIR=&#8221;$HOME/Públic&#8221;</p>

<p>XDG_DOCUMENTS_DIR=&#8221;$HOME/Documents&#8221;</p>

<p>XDG_MUSIC_DIR=&#8221;$HOME/Música&#8221;</p>

<p>XDG_PICTURES_DIR=&#8221;$HOME/Imatges&#8221;</p>

<p>XDG_VIDEOS_DIR=&#8221;$HOME/Vídeos&#8221;</p>

<p>Para modificarlas editar el archivo:  nano .config/user-dirs.dirs y, si por ejemplo, tenemos las imágenes en /media/sda5/imatges con su entrada en /etc/fstab  Auto, dejamos la entrada correspondiente:</p>

<p>XDG_PICTURES_DIR=&#8221;/media/sda5/imatges&#8221;</p>

<p>Atajos escritorio</p>

<pre><code>Ctrl+o (Abre la carpeta personal o la del documento abierto)

Ctrl+Alt+tecla de cursor (Cambia el espacio de trabajo) 

Ctrl+Alt+backspace (Reiniciar entorno gráfico si está activado)

F1 (Muestra la Ayuda)

F11 (Pantalla completa)

Alt+Inicio (Abre la carpeta personal)

Alt+ImprPant (Realiza una captura de la ventana actual)

Alt+F1 (Abre el menú aplicaciones)

Alt+F2 (Abre el cuadro lanzar aplicaciones) 

Alt+F4 (Cierra la ventana activa)

Alt+F7 (Mueve ventana con las teclas de cursor. Para finalizar pulsar tecla) 

Alt+F8 (Cambia tamaño de ventana con teclas de cursor. finalizar pulsar tecla) 

Alt+F9 (Minimiza) 

Alt+F10 (Maximiza)

Alt+Ctrl+Shift+teclas de cursor (Mueve la ventana activa a otra área de trabajo)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gmount]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/gmount/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/gmount</id>
    <content type="html"><![CDATA[<p>[google-docs-fs fuse]. Equivalente a mount pero para google docs. Ver tambien google gdrive.</p>

<blockquote><p>$ gmount google_docs juan@gmail.com -d (sincronizar la carpeta google_docs con la cuenta y mostrando la salida. Pedirá contraseña)</p>

<p>$ gumount google_docs (Desmontar la carpeta)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[glances]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/glances/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/glances</id>
    <content type="html"><![CDATA[<p>Monitorizar la actividad del sistema en local y modo cliente-servidor.</p>

<blockquote><p>$ glances (Monitoreo local)</p></blockquote>

<p>Modo cliente-servidor:</p>

<blockquote><p>$ glances -s (En el servidor)</p>

<p>$ glances -t 3 -c 192.168.1.10 (En el cliente y actualizando el registro cada 3 segundos [por defecto cada segundo])</p></blockquote>

<p>Teclas de control:</p>

<pre><code>h (Oculta / muestra la ayuda) 

a (Muestra los procesos de forma autormatica) 

c (Los muestra por consumo de CPU) 

d (habilitar/deshabilitar estadísticas I/O en disco) 

f (habilita/deshabilita las estadísticas del sistema de archivos)

l (Oculta / muestra logs) 

m (Muestra los procesos por consumo de  memoria) 

n (Oculta / muestra el estado de los interfaces de red) 

p (Muestra los procesos por orden alfabético)

w (Elimina los WARNING finalizados del archivo log) 

1 (intercambia entre las estadisticas globales de CPU y las estadisticas particulares por cada CORE)

q (Salir) 
</code></pre>

<p>Código de los colores:</p>

<pre><code>verde (correcto) 

azul (cuidado) 

magenta (Alerta) 

rojo (crítico)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/git/"/>
    <updated>2014-01-28T16:42:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/git</id>
    <content type="html"><![CDATA[<p>[git-core]. Manual completo en español: <a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/es/book.html#_hosting_git_gratuito">http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/es/book.html#_hosting_git_gratuito</a></p>

<p>Software de control de versiones. Una vez registrados en Github [<a href="http://github.com">http://github.com</a>], crear un nuevo repositorio con el nombre escogido y github nos facilitará los datos de acceso [Al estilo: https://github.com/templix/tractatus.git].</p>

<p>Crear el repositorio local de un proyecto alojado en github:</p>

<pre><code>$ mkdir tractatus (Crear el directorio local)

$ cd tractatus (Entrar en él)

$ git init (Inicializar git)

$ git config --global user.name "nombre_usuario" (Entrar datos del usuario) 

$ git config --global user.mail mail@direccion.com   (Entrar mail)

$ mv /home/usuario/tractatus.txt . (Mover el archivo al repositorio)

$ git add tractatus.txt (Añadir el fichero a git)

$ git commit -a -m 'Inicio del proyecto' (Realizar el primer commit [comentario con los cambios en el proyecto])

$ git remote add origin https://github.com/templix/tractatus.git (Decirle a nuestra copia local el repositorio remoto donde se alojará)

$ git push origin master (Enviar los cambios al servidor remoto)
</code></pre>

<p>Otros comandos:</p>

<blockquote><p>$ git clone git@github.com:templix/tractatus.git (Clonar un repositorio por portocopo git)</p>

<p>$ git clone https://github.com/templix/tractatus.git (Clonar un repositorio por protocolo https)</p>

<p>$ git clone ssh://usuario@host.com/home/templix/repositorio repositorio (Clonar por ssh un directorio remoto en local)</p>

<p>$ git config -l (Comprobar los datos del usuario)</p>

<p>$ git config remote.origin.url (Ver cual es el repositorio remoto)</p>

<p>$ git log (Ver historial de commits)</p>

<p>$ git status (Comprobar si se han efectuado cambios)</p>

<p>$ git config &#8211;global credential.helper cache (guarda la contraseña en caché durante 15 min)</p>

<p>$ git config &#8211;global credential.helper &#8216;cache &#8211;timeout=3600&#8217; (guarda la contraseña durante una hora)</p>

<p>$ git rm archivo (Eliminar archivo)</p>

<p>$ git fetch origin (este comando junto con el siguiente elimina todos los cambios locales y pone la versión del servidor)</p>

<p>$ git reset &#8211;hard origin/master</p>

<p>$ git diff &#8211;color-words archivo1 archivo2  (Mostrar las diferencias en color)</p>

<p>$ git instaweb &#8211;httpd=webrick (Abre el proyecto con navegador en localhost:1234)</p>

<p>$ git instaweb &#8211;httpd=webrick &#8211;stop (Cierra la visualización del proyecto con el navegador)</p>

<p>$ git config &#8211;help (Mostrar ayuda de un comando)</p></blockquote>

<p>1.-</p>

<p>Indicar a git archivos o directorios que quedemos excluir del control de versiones.</p>

<blockquote><p>$ touch .gitignore (Crear el fichero en el directorio raiz del proyecto)</p></blockquote>

<p>Con el contenido que queremos excluir [Algunos ejemplos]:</p>

<pre><code>*~

tmp/*

*.so

*.zip

Thumbs.db
</code></pre>

<p>Si el archivo .gitignore lo colocamos en el directorio $HOME afectará a todos los proyectos de git. Para ello lanzar:</p>

<blockquote><p>$ git config &#8211;global core.excludesfile ~/.gitignore</p></blockquote>

<p>2.-</p>

<p>Descartar modificaciones.</p>

<p>Si una vez realizadas modificaciones en un archivo, antes de lanzar el commit, queremos verlas y descartarlas:</p>

<blockquote><p>$ git status</p>

<p>$ git diff</p>

<p>$ git checkout &#8211; archivo</p></blockquote>
]]></content>
  </entry>
  
</feed>
