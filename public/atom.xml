<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TRACTATUS ELEMENTALIS]]></title>
  <link href="https://tractatuslapipaplena.herokuapp.com/atom.xml" rel="self"/>
  <link href="https://tractatuslapipaplena.herokuapp.com/"/>
  <updated>2014-01-28T16:08:09+01:00</updated>
  <id>https://tractatuslapipaplena.herokuapp.com/</id>
  <author>
    <name><![CDATA[templix]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[figlet]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/figlet/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/figlet</id>
    <content type="html"><![CDATA[<p>Baners</p>

<blockquote><p>$ figlet texto (forma básica)</p>

<p>$ showfigfonts    (visualizar las tipografias del comando)</p>

<p>$ figlet -f banner texto  (especificando tipografía)</p></blockquote>

<p>Opciones</p>

<pre><code>-c (centra el texto de salida) 

-l (alinea el texto a la izquierda) 

-r (alinea el texto a la derecha) 

-w (establece un tamaño máximo)

-t (Con la anchura máxima que permite la terminal)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fgrep]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/fgrep/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/fgrep</id>
    <content type="html"><![CDATA[<p>(fast grep). Busca cadenas de texto fijas. Ignora el significado especial de los metacaracteres.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[festival]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/festival/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/festival</id>
    <content type="html"><![CDATA[<p>[festival festvox-ellpc11k]. Sintetizador de voz.</p>

<blockquote><p>$ echo “Linux es genial” | festival &#8211;tts &#8211;language spanish</p>

<p>$ festival &#8211;tts &#8211;language spanish archivo.txt</p></blockquote>

<p>Nota.- Si al lanzar la aplicación nos muestra una salida: “Linux: can&#8217;t open /dev/dsp”, crear el fichero .festivalrc en nuestra $HOME pegando el siguiente contenido:</p>

<pre><code>(Parameter.set 'Audio_Command "aplay -q -c 1 -t raw -f s16 -r $SR $FILE")

(Parameter.set 'Audio_Method 'Audio_Command) 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fbgs]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/fbgs/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/fbgs</id>
    <content type="html"><![CDATA[<p>Visualizar pdf usando framebuffer [sin X]</p>

<blockquote><p>$ fbgs -c archivo.pdf  (visualizarlo en color)</p></blockquote>

<p>Opciones:</p>

<pre><code>-l  (Ampliación a 100 dpi (75 dpi por defecto)

-xl (a 12 dpi)

-xxl (a 150 dpi)

-p contraseña (Si el pdf requiera contraseña)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[faillog]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/faillog/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/faillog</id>
    <content type="html"><![CDATA[<p>(/var/log/faillog). Almacena todos los intentos &#8220;login&#8221; fallidos realizados a una maquina.</p>

<blockquote><p>$ faillog</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[extundelete]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/extundelete/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/extundelete</id>
    <content type="html"><![CDATA[<p>[e2fsprogs, e2fslibs, e2fslibs-dev, g++, build-essential]. Recuperación de archivos o directorios borrados. La partición sobre la que se actua ha de estar desmontada. Descargar la aplicación de <a href="http://extundelete.sourceforge.net/">http://extundelete.sourceforge.net/</a> e instalarla con el clasico ./configure, make, sudo make install.</p>

<blockquote><p># extundelete  /dev/sda11 &#8211;restore-directory /datos/dir_borrado (recuperar el directorio dir_borrado de la partición /dev/sda11. Lo guardará en el directorio RECOVERED_FILES)</p>

<p># extundelete  /dev/sda11 &#8211;restore-file /datos/imagenes/foto.png -o fotos/ (recuperar un archivo y guardarlo en el directorio fotos)</p>

<p># extundelete /dev/sda11 &#8211;restore-all (recuperar toda una partición)</p>

<p># extundelete /dev/sda11 &#8211;restore-files files (recuperar de la partición /dev/sda11 los archivos enumerados en &#8220;files&#8221; a razón de uno por linea)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[expresiones-regulares]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/expresiones-regulares/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/expresiones-regulares</id>
    <content type="html"><![CDATA[<p>[regex o patrones]. Buscar cadenas de texto que coinciden con un patrón. Los comandos más usuales que las emplean son grep, find, sed y awk y cada uno con sus pecualiaridades. Para ilustrar dichas expresiones se usa un archivo de texto al que llamo file.</p>

<blockquote><p>$ cat file</p></blockquote>

<pre><code># /etc/fstab: static file system information.

UUID=de1d7793-c3d2-4e03-b79d-1a76905619e6 /               ext4    errors=remount-ro 0       1

UUID=ccc71238-d89d-435b-a4e2-c2d836f800bb none            swap    sw              0       0

/dev/sr0        /media/cdrom0   udf,iso9660 user,noauto     0       0

/dev/sda5       /media/datos    ext4    defaults        0       0

/dev/sda7       /media/fotos    ext3    defaults        0       0

servidor:/home/templix /media/servidor  nfs4 defaults   0       0

### Otras cosas

7592 esto es un número....

la letra z es la última

aminora

mediaplayer es un reproductor

tres cincos hace 555

salta la rana

aRmARIO
</code></pre>

<p>Nota.- Los siguientes ejemplos se basarán en el comando grep. En algunos casos, al corresponder a expresiones regulares extendidas, se usará con el argumento -E. Las expresiones regulares han de ir siempre encerradas con comillas simples.</p>

<pre><code>Literales (Sólo encajan con ellos mismos)

    $ grep 'media' file (mostrara las lineas que contengan "media" incluso "mediaplayer")

    $ grep '\&lt;media\&gt;' file (Sólo mostrará las que contengan exactamente "media")

. [punto] (Cualquier caracter)

    $ grep 'me.ia' file (Misma salida que el anterior)

    $ grep '\&lt;m...a\&gt;' file (Mostrar las de cinco letras que empiecen por "m" y terminen en "a")

    $ grep 'm...a\&gt;' file (Mostrar las lineas que contengan una palabra de cinco letras que empiece por "m" y termine con "a" sin nada a continuación)

[] [Corchetes] (Cualquier caracter de los encerrados entre corchetes)

    $ grep '[wz]' file (Mostras las que contengan "w" o "z")

    $ grep 'sda[0-9]' file (Mostrar las lineas con palabras que empiecen por sda seguidas de un número del 0 al 9)

    $ grep '[0-9]-' file (Buscar lineas que tengan un número seguido de un -)

| [Tuberia] (Especificar varias opciones)

    $ grep -E 'e(xt|rvi)(3|dor)' file (Mostrar las que contengan ext3 y ervidor [servidor])

    $ grep -E 'datos|servidor' file (Mostrar las que tengan las palabras "datos" y "servidor")

- [Guión] (Siempre que no siga a un corchete, especifica un rango)

    $ grep '[0-2]$' file (Lineas que contengan los números 0,1 y 2)

^ [Circunflejo] (Si va precedido de un corchete significa "todo lo que no sea lo que sigue". En los demás casos significa "que la linea empiece por lo que sigue)

    $ grep '^UUID' file (Mostrar las que empiecen por UUID)

    $ grep ':[^/]' file (Las que tengan ":" y no vayan seguidos de una "/")

    $ grep -e '^UUID' -e '^\/' file (Mostrar las que empiecen por UUID y por / . La barra de escape [\] convierte al siguiente caracter en literal)

$ [Dolar] (Indica que el carácter precedente aparece al final de la linea)

    $ grep '0$' file (Muestra las que terminen en 0)

    grep '\.$' file (Muestra las lineas que terminan con un punto)

+ [Signo más] (Una o más veces).

    $ grep -E '\-[0-9]+' file (Buscar las lineas con varios números precedidos por un guión [que ha de escaparse con una barra])

* (Asterisco) (Ninguna o más veces)

    $ grep -E '(fot).*' file (Mostrar las que tengan "fot" y puedan estar o no seguidas de otros caracteres)

? (Interrogante) (Un caracter impreciso)

    $ grep -E 'ext4?' file (indica que el caracter anterior [el 4] puede ser distinto de 4 o puede no existir, o sea que mostrará lineas que contengan ext4, ext3, ext...)

{n,m} [Llaves] (Que el caracter anterior a la llave se muestre las veces que indica entre el número n y el m. Si omitimos m significa como mínimo n veces.

    $ grep '5\{2,5\}.*' file (Que se muestre las lineas que tengan un 5 entre dos y cinco veces. Las llaves se escapan)

    $ grep '5\{3\}.*' file (Muestra las lineas en las que el 5 sale tres veces)

    $ grep '5\{3,\}.*' file (Muestra las lineas en las que el 5 sale como mínimo tres veces)

b (Que lo precedente sea el final de una palabra. Siempre ha de escaparse.)

    $ grep 's\b' file (Muestra las lineas que contienen alguna palabra acabada en "s")
</code></pre>

<p>Otros ejemplos:</p>

<p>Buscar las lineas que no empiecen por #:</p>

<pre><code>$ grep -v '^#' file
</code></pre>

<p>Mostrar lineas que empiecen por # y las que terminen en 0:</p>

<pre><code>$ grep -E '^#|0$' file
</code></pre>

<p>Buscar lineas que tengan : seguidos de una barra que ha de escaparse:</p>

<pre><code>$ grep ':\/' file
</code></pre>

<p>Buscar las lineas que tengan una &#8220;o&#8221; seguida de al menos 3 dígitos:</p>

<pre><code>$ grep 'o[0-9]\{3\}' file
</code></pre>

<p>Buscar lineas que tengan algún dígito:</p>

<pre><code>$ grep '[[:digit:]]' file
</code></pre>

<p>Buscar lineas que empiecen por un caracter alfabético:</p>

<pre><code>$ grep '^[[:alpha:]]' file
</code></pre>

<p>Buscar lineas que tengan &#8220;ext&#8221; usando parentesis:</p>

<pre><code>$ grep '\(ext\)' file
</code></pre>

<p>Buscar lineas que que tengan un número entre 2 y 9 al menos una vez y esten precedidos de espacio, tabulación o salto de linea:</p>

<pre><code>$grep -E '\s[2-9]+' file
</code></pre>

<p>Mostrar lineas con entre 3 y 6 letras mayúsculas:</p>

<pre><code>$ grep '[A-Z]\{3,6\}' file
</code></pre>

<p>Algunos casos comentados:</p>

<p>1.-</p>

<blockquote><p>$ touch nada.8.sh.5</p></blockquote>

<pre><code>$ ls | grep '.*.[6-8].*.[1-6]'
</code></pre>

<p>Nota.- Cuando se usen con el comando grep han de ir siempre encerradas con comillas simples.</p>

<pre><code>.* (Cero o más caracteres. El punto inicial es imprescindible)

.[6-8] (Seguidos de un punto y un número que contenga entre el 6 y el 8)

.* (seguido un punto y cero o más caracteres)

.[1-6] (y terminado con un punto seguido de un número que contenga del 1 al 6)
</code></pre>

<p>Nota.- Los corchetes NO indican UN número de un dígito sinó un número que contenga el margen especificado [6,7,8 para el primer corchete y 1,2,3,4,5,6 para el segundo, por tanto también listaría el archivo nada.0357.sh.389 pero no nada.0352.sh.389 porque el número 0352 no contiene ninguno del margen especificado.</p>

<p>Nótese la diferencia en la expresión regular usando el comando mv [sin comillas simples y sin el punto delante del primer asterisco]:</p>

<pre><code>$ mv *.[6-8].*.[1-6] prueba
</code></pre>

<p>2.-</p>

<p>Buscar en el directorio scripts, todos los que sean de bash:</p>

<pre><code>$ grep -i '^#.*bash' scripts/*

    ^#.*bash (Que el primer caracter de la primera linea sea # y que despues de cero o más caracteres aparezca la palabra bash)

    $ grep -i '$.*bash' scripts

    '$.*bash' (En todos los ficheros del directorio, que al final de la primera linea y despues de cero o más caracteres apararezca la palabra bash)
</code></pre>

<p>3.-</p>

<p>Ver los correos electrónicos completos de una lista en la que los hay incompletos:</p>

<blockquote><p>$ cat lista</p></blockquote>

<pre><code>juangomez@gmail.com

clarafuentes@

@yahoo.es

ant.rodri-perez@hotmail.nadadenada

pedro@blog.empresa.travel
</code></pre>

<hr />

<pre><code>$ grep -E '^[a-zA-Z._-]+@[a-zA-Z0-9.]+\.[a-z]+$' lista

    ^[a-zA-Z._-]+ (Que empiece con una palabra que pueda contener mayúsculas, minúsculas, puntos, guiones o guiones bajos)

    @ (Seguida de una @ literal)

    [a-zA-Z0-9.]+ (A continuación varios caracteres que pueden ser mayúsculas, minúsculas, puntos o números)

    \. (Después un punto literal)

    [a-z]+$ (Para terminar, uno o varios caracteres en minúscula)

$ grep -E '^[a-zA-Z._-]+@.[a-zA-Z.0-9]+\.[[:alpha:]]{2,3}$' lista (Sólo mostrará las que terrminen con 2 o 3 letras)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[eterm]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/eterm/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/eterm</id>
    <content type="html"><![CDATA[<p>Terminal.</p>

<blockquote><p>$ Eterm -D 1 -f green -O (En el segundo escritorio [-D 1] con las fuentes en verde  [-f]  y transparente [-O]</p></blockquote>

<p>Algunas opciones:</p>

<pre><code>--buttonbar false (Sin la barra del menú)

-T “titulo de la terminal” 

-b yellow (color de fondo)

-c red (Color del cursor)

-g 50x10 (Medidas. 50 de largo por 10 de ancho)

-S (Abrir en todos los escritorios)

-e comando (Cuando termine de ejecutar el comando se cierra)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[errno]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/errno/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/errno</id>
    <content type="html"><![CDATA[<p>[moreutils]. Muestra los errores de código y sus descripciones.</p>

<blockquote><p>$ errno -l (Todo el listado)</p>

<p>$ errno -s desconocido (Busca del listado el que contenga la descripción &#8220;desconocido&#8221;)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[egrep]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/egrep/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/egrep</id>
    <content type="html"><![CDATA[<p>[extended grep]. Busca expresiones regulares.</p>

<pre><code>$ egrep -v '^$|^#' archivo (suprimir lineas en blanco y comentadas)

$ egrep -c '^#' /etc/fstab (Muestra el número de lineas comentadas)
</code></pre>

<blockquote><p>$ egrep -in &#8220;palabra&#8221; *.txt (busca “palabra” en todos los .txt del directorio)</p>

<p>$ egrep &#8216;UUID|proc&#8217; /etc/fstab (Muestra las lineas con las coincidencias)</p>

<p>$ egrep &#8211;color &#8216;(vmx|svm)&#8217; /proc/cpuinfo (Averiguar si el equipo  admite la virtualización por hardware. Si el comando no devuelve nada es porque no lo soporta)</p></blockquote>

<p>Otras opciones:</p>

<pre><code>-h  Muestra las líneas coincidentes pero no los nombres de archivo. 

-i  Ignora los cambios mayúsculas y minúsculas. 

-n  Muestra la línea y el número de línea. 

-r  Lee en todos los archivos de los directorios y subdirectorios. 

-v  Muestra todas las lineas que no coinciden. 

-w      Sólo coincidencia en palabras completas. 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ecryptfs]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/ecryptfs/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/ecryptfs</id>
    <content type="html"><![CDATA[<p>[ecryptfs-utils cryptsetup]. Sistema de ficheros que permite encriptar la informacion. Puede ser montado en un sistema de ficheros convencional [ext4, ext3&#8230;] lo cual siginifica que no tenemos que preocuparnos por asignarle espacio: conforme añadimos o eliminamos archivos, el espacio crece o decrece. Se podría coger un solo fichero encriptado, enviarse a otro PC y acceder a la información de ese fichero usando la misma contraseña.</p>

<p>1.-</p>

<p>Encriptar un directorio:</p>

<blockquote><p>$ mkdir cripta (Crear directorio)</p>

<p># chmod 700 cripta (Otorgarle permisos)</p>

<p># mount -t ecryptfs cripta /media/tumba (Montar el directorio. Pregunta contraseña [la firma de la clave en el fichero /root/.ecryptfs/sig-cache.txt]. Las demás preguntas [método de cifrado, longitud de la contraseña&#8230;] pueden dejarse con las opciones por defecto)</p>

<p># umount /media/tumba (Desmontar directorio)</p></blockquote>

<p>Nota.- Es bastante usual, montar el directorio consigo mismo:</p>

<blockquote><p># mount -t ecryptfs cripta cripta</p></blockquote>

<p>2.-</p>

<p>Ejecutar el asistente de creación de directorio cifrado:</p>

<blockquote><p># ecryptfs-setup-private</p>

<p># ecryptfs-umount-private (Desmontar el directorio)</p>

<p># ecryptfs-mount-private (Montar el directorio)</p></blockquote>

<p>Nota.- Para impedir que el directorio creado se monte automáticamente al inicio de sesión, borrar el archivo ~/.ecryptfs/auto-mount. Para revertir el proceso crear en el mismo directorio un archivo vacio:</p>

<blockquote><p>$ touch ~/.ecryptfs/auto-mount</p></blockquote>

<p>3.-</p>

<p>Encriptar el directorio personal [$HOME]</p>

<p>Salir de la cuenta de usuario y entrar en la de root.</p>

<blockquote><p># modprobe ecryptfs (activar el módulo del kernel)</p>

<p># ecryptfs-migrate-home -u USUARIO (Encriptar la $HOME del USUARIO)</p></blockquote>

<p>Cerrar la cuenta de administrador y, sin reiniciar, entrar en la de USUARIO</p>

<blockquote><p>$ ecryptfs-unwrap-passphrase (Pedirá la contraseña. Como medida de precaución es preciso anotar la cadena de texto que muestre)</p>

<p># ecryptfs-setup-swap (Como media de seguridad es necesario encriptar la partición de intercambio [Swap])</p>

<p># ecryptfs-rewrap-passphrase .ecryptfs/sig-cache.txt (Modificar la contraseña)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[e4defrag]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/e4defrag/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/e4defrag</id>
    <content type="html"><![CDATA[<p>[e2fsprogs]. Desfragmentar particiones ext4.</p>

<blockquote><p># e4defrag /dev/sda2</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[e2label]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/e2label/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/e2label</id>
    <content type="html"><![CDATA[<p>[ntfsprogs]. Poner etiquetas a las particiones y dispositivos ext3</p>

<blockquote><p># e2label /dev/dispositivo_usb mi_usb  (cuando se conecte, en el escritorio aparecerá el icono con el nombre “mi_usb”)</p>

<p># e2label /dev/sda5  (dirá si la partición sdb5 tiene nombre de etiqueta)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dwb]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dwb/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dwb</id>
    <content type="html"><![CDATA[<p>Navegador minimalista con soporte para flash.</p>

<p>Atajos: dwb:keys</p>

<p>Configuración: dwb:settings</p>

<p>Las configuraciones en texto plano en .config/dwb/</p>

<p>Algunos atajos:</p>

<pre><code>o (Para entrar una url) 

O (abrirla en una nueva pestaña) 

J (Cambiar entre pestañas)

j (bajar por la página)

k (subir)

d (cerrar pestaña)

u (reabrir pestaña cerrada) 

go (Editar la url) 

r (Recargar la página) 

R (Recargar sin usar la caché) 

f (Marcar los enlaces para escoger el que proceda) 

F (Marcar los enlaces y abrir el escogido en nueva pestaña) 

i (Modo insert para insertar en algún cuadro de dialogo) 

Esc (Volver a modo normal) 

M (Entrar url en en laces de interés) 

ctrl q (Para salir del navegador) 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dvgrab]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dvgrab/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dvgrab</id>
    <content type="html"><![CDATA[<p>Catura de videos desde una cámara digital DV.</p>

<p>Previas:</p>

<blockquote><p># modprobe rw1394</p>

<p># chmod o+rw /dev/raw1394</p></blockquote>

<p>Uso:</p>

<blockquote><p>$ dvgrab &#8211;buffers 500 (Los videos se almacenarán de forma secuencial [001.avi, 002.avi&#8230;] y 500 frames. Por defecto 100)</p>

<p>$ dvgrab -f avi -s 0 videos/archivo.avi (Especificando formato, sin perdida de calidad y destino)</p></blockquote>

<p>Algunas opciones:</p>

<pre><code>-a 30 (crear nuevo archivo cada 30 segundos

-csize 5 (divide el archivo de captura cuando llega a 5MB)

-debug all (mostrar información de la captura.

-d 10,20 (tiempo total a capturar en formato SMIL. Por defecto ilimitado

-every 50 (grabar un cuadro cada 50)

-f dif (formato de captura. Por defecto raw. Algunos formatos: dif [raw con extensión .dif], qt [formato QuickTime], mpeg2 [compresión MPEG-2], jpeg [secuencia de imágenes]

-F 20 (cantidad máxima de fotogramas por archivo. Por defecto ilimitado)

-nostop (no detener la reproducción en el dispositivo al cerrar la captura)

-rewind (rebobina el MiniDV al finalizar)

-t (poner fecha y hora de registro como nombre del archivo)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dvdbackup]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dvdbackup/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dvdbackup</id>
    <content type="html"><![CDATA[<p>[dependencias: libdvdread, libdvdcss]. Ripeo de dvds.</p>

<blockquote><p>$ dvdbackup -i /dev/cdrom  (/información del dvd)</p>

<p>$ dvdbackup -M -i/dev/cdrom -o/home/usuario/carpeta_destino (lanzar la aplicación)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dpigs]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dpigs/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dpigs</id>
    <content type="html"><![CDATA[<p>[debian-goodies]. Muestra los paquetes que ocupan más espacio.</p>

<blockquote><p>$ dpigs (Los primeros diez 10. Opción por defecto)</p>

<p>$ dpigs -n 20 (Los primeros 20)</p>

<p>$ dpigs -S (Muestra los paquetes fuente más grandes instalados en el sistema)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[display]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/display/"/>
    <updated>2014-01-28T16:08:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/display</id>
    <content type="html"><![CDATA[<p>[imagemagick]. Visualizar imagenes en las X.</p>

<blockquote><p>$ display imagen.jpg</p>

<p>$ DISPLAY=:0.0 gedit  (lanzado desde una tty, abre gedit en las X. Si solo tenemos una sesión X corriendo, puede suprimirse el “.0”)</p>

<p>$ gmessage “Cierra el firefox” -display :0 (Lanzado desde una tty mostrará el mensaje en las X)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dig]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dig/"/>
    <updated>2014-01-27T20:47:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dig</id>
    <content type="html"><![CDATA[<p>[dnsutils]. Realizar consultas a los servidores DNS</p>

<blockquote><p>$ dig tuxapuntes.com</p>

<p>$ dig telefonica.net NS  (Mostrando los servidores DNS del dominio)</p>

<p>$ dig -x 74.220.215.64 (Resolución inversa)</p></blockquote>

<p>Nota.- Los datos importantes en la “ANSWER SECTION”</p>

<blockquote><p>$ dig +short myip.opendns.com @resolver1.opendns.com (muestra IP externa)</p>

<p>$ dig tuxapuntes.com somedomainname.net axfr   (mirar si un dominio es susceptible de ataques axfr)</p>

<p>$ dig +trace tuxapuntes.com (Ver saltos de la petición hasta el servidor)</p>

<p>$ dig ANY tuxapuntes.com (Consultar todos los registros de la zona DNS)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[denyhosts]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/denyhosts/"/>
    <updated>2014-01-27T20:47:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/denyhosts</id>
    <content type="html"><![CDATA[<p>Protege contra ataques.</p>

<p>Configuración:</p>

<blockquote><p># nano /etc/denyhosts.conf</p></blockquote>

<p>Algunas opciones:</p>

<pre><code>SECURE_LOG = /var/log/auth.log (Ruta a los logs) 

DENY_THRESHOLD_INVALID = 5 (Intentos fallidos permitidos con una cuenta que no existe) 

DENY_THRESHOLD_VALID = 5 (Intentos falllidos con usuarios validos) 

PURGE_DENY =5d (Tiempo de baneo de una IP. 5 dias en este caso) 

BLOCK_SERVICE = sshd (Servicios que queremos proteger [ sshd, ALL...) 
</code></pre>

<p>Nota.- Tambien es posible arrancar el servicio con la opción &#8220;purge&#8221;  [/etc/init.d/denyhosts start &#8211;purge] para eliminar las ips bloqueadas y que se muestran en /etc/hosts.deny</p>
]]></content>
  </entry>
  
</feed>
