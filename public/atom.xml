<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TRACTATUS ELEMENTALIS]]></title>
  <link href="https://tractatuslapipaplena.herokuapp.com/atom.xml" rel="self"/>
  <link href="https://tractatuslapipaplena.herokuapp.com/"/>
  <updated>2014-06-02T17:57:24+02:00</updated>
  <id>https://tractatuslapipaplena.herokuapp.com/</id>
  <author>
    <name><![CDATA[templix]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nmap]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/nmap/"/>
    <updated>2014-06-02T17:57:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/nmap</id>
    <content type="html"><![CDATA[<p>Rastrear puertos.</p>

<p>Estados de los puertos:</p>

<pre><code>abierto (Una aplicación acepta conexiones TCP o paquetes UDP en este puerto indicando qué servicio está corriendo)

cerrado (Recibe y responde a las sondas de Nmap, pero no tiene una aplicación escuchando en él)

filtrado (No puede determinar si el puerto está abierto porque un filtrado de paquetes previene que sus sondas lo alcancen)

no filtrado (Indica que el puerto es accesible pero que Nmap no puede determinar si se encuentra abierto o cerrado)

abierto|filtrado (Nmap marca a los puertos en este estado cuando no puede determinar si el puerto se encuentra abierto o filtrado)
</code></pre>

<p>Entrada de los objetivos cuando no se realiza por la linea de ordenes:</p>

<pre><code>-iL ips.txt (Desde una lista de ips colocadas una por linea en el archivo ips.txt)

-iR 100 (Scanear 100 ips aleatoria. Con -iR 0 el escaneo no termina nunca.)
</code></pre>

<p>Técnicas de sondeos de puertos que soporta Nmap:</p>

<pre><code>-sA [sondeo TCP ACK] (Este sondeo no puede determinar puertos abiertos o abiertos|filtrados. Se utiliza para mapear reglas de cortafuegos, y para determinar si son cortafuegos con inspección de estados y qué puertos están filtrados.

-sL [Sondeo de lista] (lista los objetivos a analizar sin enviar paquetes de ningún tipo a los objetivos)

-sM [sondeo TCP Maimon] (El sondeo Maimon debe su nombre a la persona que lo descubrió: Uriel Maimon. Describió la técnica en la revista Phrack número 49 (noviembre de 1996). Nmap, que incluye esta técnica, se publicó dos números más tarde. Esta técnica es exactamente la misma a los sondeos Null, FIN, y Xmas, pero en los que se envía una sonda FIN/ACK. Según el RFC 793 (TCP), se debería generar un paquete RST cuando se responde a dicha sonda independientemente de si el puerto está cerrado o abierto. Uriel se dio cuenta, sin embargo, de que muchos sistemas derivados de BSD simplemente descartan el paquete si el puerto está abierto.

-sN, -sF, -sX [sondeos TCP Null, FIN, y Xmas] (Estos sondeos aprovechan una indefinición en la RFC de TCP que diferencia los puertos abiertos y cerrados. La ventaja fundamental de este tipo de sondeos es que pueden atravesar algunos cortafuegos que no hagan inspección de estados o encaminadores que hagan filtrado de paquetes. Otra ventaja es que este tipo de sondeos son algo más sigilosos que, incluso, un sondeo SYN. Un problema de estos sondeos es que no se puede distinguir los puertos abiertos de algunos puertos filtrados, lo que resulta en la respuesta abierto|filtrado.

-sO [sondeo de protocolo IP] (Este sondeo permite determinar qué protocolos [TCP, ICMP, IGMP, etc.] soportan los sistemas objetivo. Esto no es, técnicamente, un sondeo de puertos, dado que cambia los números de protocolo IP en lugar de los números de puerto TCP ó UDP.

-sP [sondeo ping] (Sólo determina si el objetivo responde. Metodo intrusivo)

-sS [sondeo TCP SYN] (Es el utilizado por defecto. Puede sondear miles de puertos por segundo en una red rápida sin cortafuegos y es relativamente sigiloso y poco molesto, ya que no llega a completar las conexiones TCP)

-sT [sondeo TCP connect()] (Es el sondeo por omisión cuando no se puede utilizar el sondeo SYN. Al realizar conexiones completas para abrir los puertos objetivo en lugar de realizar el reseteo de la conexión medio abierta como hace el sondeo SYN implica que tarda más tiempo y son necesarios más paquetes para obtener la información y que muy probablemente el sistema objetivo va a registrar la conexión.)

-sU [sondeos UDP] (Los 3 servicios UDP más comunes son: DNS [53], SNMP [161/162], y DHCP [67/68].  Los sondeos UDP funcionan mediante el envío (sin datos) de una cabecera UDP para cada puerto objetivo. Si se obtiene un error ICMP indica que el puerto no es alcanzable y se marca como cerrado. Si se recibe cualquier error ICMP no alcanzable se marca el puerto como filtrado. Si se recibe una respuesta al paquete UDP el puerto está abierto. Si no se ha recibido ninguna respuesta después de algunas retransmisiones entonces se clasifica el puerto como abierto|filtrado. Esto significa que el puerto podría estar abierto o que hay un filtro de paquetes bloqueando la comunicación. Puede utilizarse el sondeo de versión (-sV) para diferenciar los puertos abiertos de los filtrados.

-sV [Sondear versiones] (Sondea puertos abiertos para obtener información de la versión del servicio.

-sW [sondeo de ventana TCP] (Aprovecha de un detalle de implementación de algunos sistemas que permite diferenciar puertos abiertos de los cerrados, en lugar de imprimir no filtrado cuando se devuelve un RST.)

--scanflags [Sondeo TCP a medida] (Esta opción permite diseñar su propio sondeo mediante la especificación de banderas TCP arbitrarias y puede ser un valor numérico como el 9 (PSH y FIN), aunque es más sencillo utilizar nombres simbólicos juntando la combinación de URG, ACK, PSH, RST, SYN, y FIN [--scanflags URGACKPSHRSTSYNFIN] donde se fijan todas las banderas, aunque no es muy útil para sondear. Este es un método de sondeo avanzado que permite hacer un sondeo de puertos TCP a ciegas de verdad lo que significa que no se envía ningún paquete al sistema objetivo desde su dirección IP real por lo que es extraordinariamente sigiloso)
</code></pre>

<p>Descubrimiento de sistemas:</p>

<pre><code>-P0 [No realizar ping] (Nmap no realiza la etapa de descubrimiento y actua como si cada Ip objetivo se encontrara activa)

-PA22,445 [Ping TCP ACK] (Envía un paquete TCP vacío con la bandera ACK a una lista de puertos separados por comas para determinar si responden.

-PS21,22,25,80 [Ping TCP SYN] (Envía un paquete TCP vacío con la bandera SYN a una lista de puertos separados por comas para saber si el sistema responde.

-PU445,5000 [Ping UDP] (Envía paquetes UDP vacios a los puertos indicados para indicar si el sistema responde. Atraviesan cortafuegos y filtros que sólo analizan TCP)

-PR [Ping ARP] (El sondeo ARP detecta máquinas en la red local)
</code></pre>

<p>Especificación de puertos:</p>

<pre><code>-p 21,22 (Separados por comas)

-p- (Todos los puertos de 0 al 65535)

-p 1-1023 (Del 1 al 1023)

-F (escanear los 100 puertos más usados)

-r (Analizar los puertos de forma secuencial. Por defecto se analizan de forma aleatoria)
</code></pre>

<p>Formatos de salida:</p>

<pre><code>-oN archivo (Redirigir la salida a un archivo especificado)

-oX archivo.xml (Redirigir a un archivo xml

-oS archivo (Redirigiendo a una salida humoristica sobre los script kiddies)
</code></pre>

<p>Otras opciones:</p>

<pre><code>-A (Opciones de sondeos agresivos. Activa detección de sistema operativo [-O] y el análisis de versiones [-sV]).

-n (No realizar resolución DNS de las direcciones IP activas que encuentre)

-R (Realizar resolución DNS de todos los objetivos)

-O (Averiguar el sistema operativo)

-O --osscan-guess (Averiguar el sistema operativo fonzandolo a identificarse)

-D 192.168.1.12,192.168.1.13,192.168.1.14 IP_OBJETIVO (Especificando ips falsas separadas por comas para emmascarar la nuestra)

-T4 (Tiempo de sondeo desde muy lento y fiable [0] a muy rápido e impreciso [5])

-S IP (Especificando una IP falsa)

-v (Incrementar el nivel de detalle. -vv mayor incremento de detalle)
</code></pre>

<p>nmap scripts</p>

<p>funcionalidad de nmap que permite la realización de diversas tareas de descubrimiento, detección, expotación de diversas vulnerabilidades, etc. Listado en http://nmap.org/nsedoc/index.html y en local: /usr/share/nmap/scripts/:</p>

<p>Categorias:</p>

<pre><code>auth (Identifican credenciales de autenticación en el sistema objetivo frecuentemente por fuerza bruta [ftp-anon, snmp-brute, http-auth...])

broadcast (Realizan un escaneo broadcast en toda la red objetivo sin necesidad de indicar los host de forma manual. utilizando el argumento “newtargets” se indica a Nmap incluir los host descubiertos en la pila de escaneo.)

default (Conjunto de scripts que tratan de capturar la mayor cantidad de información de un objetivo a costa de generar mucho ruido en el sistema remoto.)

discovery (Tratan de mapear los host de la red [registros públicos, dispositivos SNMP, servicios de directorio...])

dos (Intentan causar denegación de servicio sobre un servicio determinado.)

exploit (Tratan de detectar y explotar algún tipo de vulnerabilidad sobre el objetivo.)

external (Los que se comunican con otros hosts distintos del local. Pueden enviar a una fuente externa la IP del objetivo y del atacante.)

fuzzer (Envían datos aleatorios, inesperados o incompletos, con el fin de detectar posibles vulnerabilidades en servicios)

intrusive (Intentan utilizar grandes recursos del sistema objetivo que pueden incluso inutilizarlo)

malware (Intentan determinar si el objetivo se encuentra infectado con maleware o backdoors [smtp-strangeport y auth-spoof])

safe (Scripts poco intrusivos diseñados para no afectar ni dañar el objetivo [ssh-hostkey o html-title])

version (Diseñados para identificar versiones concretas de servicios. Se ejecutan solo si el escaneo tiene la opción Scan Version [-sV])

vuln (Dedicados a la detección de vulnerabilidades pero no su explotación [realvnc-auth-bypass y afp-path-vuln])
</code></pre>

<p>Opciones:</p>

<blockquote><p># nmap &#8211;script-args <argumentos> (Se trata de un conjunto de argumentos que se suministran a los Scripts que admiten parámetros para configurar su ejecución.)</p>

<p># nmap &#8211;script citrix-brute-xml &#8211;script-args=userdbd=usernames.lst,passdb=passwords.lst,ntdomain=domain -p 80,443,8080 IP</p>

<p># nmap &#8211;script auth &#8211;script-args userdb=usernames.lst,passdb=passwords.lst IP</p></blockquote>

<p>usernames.lst (base de datos de usuarios. Personalización en /usr/share/nmap/nselib/data/usernames.lst)</p>

<p>passdb (base de datos de contraseñas. Personalización en /usr/share/nmap/nselib/data/passwords.lst)</p>

<p>ntdomain (dominio nt del servidor- previamente ha de averiguarse)</p>

<p>Nota.- En algunos scripts las bases de datos usuarios/paswwords .lst se usan por defecto.</p>

<p>Mostrar información</p>

<pre><code>--script-help vuln (De una categoria)

--script-help openlookup-info.nse (De un script)

--script-help all (De todo)

--script-trace (toda la comunicación entrante y saliente ejecutada por los scripts es impresa en pantalla)
</code></pre>

<p>Actualizaciones:</p>

<pre><code>--script-db (Actualiza la base de datos localizada en scripts/script.db. Útil si se ha añadido o suprimido alguno

--script-updatedb (Actualiza los scripts de la base de datos)
</code></pre>

<p>Ejemplos:</p>

<blockquote><p># nmap -iR 10000 -p 80 (Selecciona objetivos al azar por el puerto 80)</p>

<p># nmap -sP IP  (Sondeo Ping. Para detectar equipos de una red)</p>

<p># nmap -P0 IP  (Asume que todos los objetivos están vivos)</p>

<p># nmap -PS -p 137-139 IP  (Análisis TCP de los puertos indicados)</p>

<p># nmap -PE IP  (Análisis ICMP del tipo echo)</p>

<p># nmap -PI IP     (Utiliza paquetes icmp para determinar que hosts están conectados y es especial si deseas hacer un scan a través de un firewall)</p>

<p># nmap -sF IP     (Analisis sigiloso)</p>

<p># nmap -sW IP    (especial para máquinas windous)</p>

<p># nmap -sX IP     (Análisis Xmas)</p>

<p># nmap -sS -A -p 1-65535 IP  (escanear todos los puertos [-p&#8230;] TCP [-sS] y detectar las versiones del software [-A] de forma silenciosa)</p>

<p># nmap &#8211;version-all IP  (Utilizar todas las sondas con intensidad 9 -máxima)</p>

<p># nmap -p 1-65535 &#8211;open localhost  (lista de puertos abiertos)</p>

<p># nmap -p 80 hostname  (determina si el puerto 80 está abierto)</p>

<p># nmap -sn 192.168.1.0/24 (descubrir máquinas conectadas de una red)</p>

<p># nmap -v -sP 192.168.1.0/24 | grep down | wc -l (Ips disponibles en una red)</p>

<p># nmap -p- localhost (rastrear todos los puertos)</p>

<p># nmap &#8211;iflist (Muestra la lista de interfaces de red y rutas)</p>

<p># nmap 192.168.0.* &#8211;exclude 192.168.0.100 (Excluir un host del escaneo de una red)</p>

<p># nmap &#8211;iflist (encontrar la interfaz y la información del propio host)</p></blockquote>

<p>Con scripts</p>

<blockquote><p># nmap &#8211;script=&#8221;http-* and not http-enum&#8221; IP (filtro AND y NOT. Para usar todos los scripts http pero no los de enumeración)</p>

<p># nmap &#8211;script malware IP (Usará todos los scripts de la categoria &#8220;malware&#8221;)</p>

<p># nmap -sC IP (Usar todos los de la categoria &#8220;default&#8221; [-sC])</p>

<p># nmap -PN -p81 &#8211;script http-iis-webdav-vuln IP (Buscando vulnerabilidades Webdav)</p>

<p># nmap &#8211;script-trace &#8211;script smb-check-vulns -p445 IP (Detectar Conficker, gusano informático que apareció en octubre de 2008, que ataca sistemas Windows)</p>

<p># nmap -sU -script=citrix-enum-servers -p1604 IP (explorar si hay algún servidor o granja citrix y realizar una enumeración de las aplicaciones publicadas)</p>

<p># nmap -P0 -n -sS -p445,139 &#8211;script=smb-security-mode IP</p>

<p># nmap &#8211;script vnc-brute 127.0.0.1</p>

<p># nmap -p 22 &#8211;script ssh-hostkey host  (especificando puerto)</p>

<p># nmap -p 5900 &#8211;script vnc-brute &#8211;script-args passdb=/home/USER/wordlist host (usando un dicccionario)</p>

<p># nmap &#8211;script mysql-brute 192.168.1.1-255 (escaneo de rangos)</p>

<p># nmap &#8211;script vnc-brute localhost (contra un host con vnc a la escucha)</p>

<p># nmap -sV &#8211;script=ftp-brute IP</p>

<p># nmap &#8211;script ftp-brute &#8211;script-args userdb=/tmp/users IP</p>

<p># nmap &#8211;script ftp-brute &#8211;script-args userdb=/tmp/users,passdb=/tmp/passwds IP</p>

<p># nmap &#8211;script ssh-hostkey &#8211;script-args ssh_hostkey=full host</p>

<p># nmap &#8211;script ssh-hostkey &#8211;script-args ssh_hostkey=all host</p>

<p># nmap -sV -sC &#8211;script-args ftp-anon.maxlist=-1 IP (Comprueba si un servidor ftp permite conexiones anónimas. El &#8220;-1&#8221; para desactivar el límite de 20 archivos)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nethogs]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/nethogs/"/>
    <updated>2014-05-31T07:59:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/nethogs</id>
    <content type="html"><![CDATA[<p>Visualiza procesos que están consumiendo más ancho de banda en el sistema</p>

<blockquote><p># nethogs   (uso básico. Por defecto el dispositivo es eth0)</p>

<p># nethogs eth0 eth1 (especificando dos dispositivos)</p>

<p># nethogs -t eth1  (rastreando conexiones y especificando dispositivo)</p>

<p># nethogs -d 5 eth1 (Actualizando datos cada 5 segundos)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lilo]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/lilo/"/>
    <updated>2014-05-25T19:02:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/lilo</id>
    <content type="html"><![CDATA[<p>Gestor de arranque. La configuración en:</p>

<blockquote><p># nano /etc/lilo.conf</p></blockquote>

<p>Algunos parametros a especificar:</p>

<blockquote><p># Indica que se instale en determinado disco:</p></blockquote>

<p>boot = /dev/sda</p>

<blockquote><p># El sistema que arrancará por defecto [el especificado en la etiqueta [label]]</p></blockquote>

<p>default = Linux</p>

<blockquote><p># Que muestre cualquier cosa que sea referenciado en la línea message:</p></blockquote>

<p>prompt</p>

<blockquote><p># Una imagen. Medidas 640x480:</p></blockquote>

<p>bitmap = /boot/slack.bmp</p>

<blockquote><p># un mensaje de inicio:</p></blockquote>

<p>message = /boot/boot_message.txt</p>

<blockquote><p># tiempo de espera para arrancar la partición por defecto [en segundos]:</p></blockquote>

<p>timeout = 50</p>

<blockquote><p># Una partición linux</p></blockquote>

<p>image = /boot/vmlinuz</p>

<pre><code>root = /dev/sda2

label = Linux

read only
</code></pre>

<blockquote><p># nota: read-only Indica que el sistema de ficheros raíz se montará en modo solo-lectura.</p>

<p># Por norma general, el proceso de arranque lo remonta luego en modo lectura-escritura.</p>

<p># Una partición windows:</p></blockquote>

<p>other = /dev/hda1</p>

<pre><code>label = Windows

table = /dev/sda1 
</code></pre>

<p>Si queremos una contraseña para entrar en alguno de los sistemas colocamos en su entrada:</p>

<pre><code>password = 12345
</code></pre>

<p>Cualquier modificación en este archivo para guardar los cambios, implica lanzar:</p>

<blockquote><p># lilo</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[anarchism]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/anarchism/"/>
    <updated>2014-05-24T07:36:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/anarchism</id>
    <content type="html"><![CDATA[<p>Historia del anarquismo en inglés. Acceder al contenido mediante el navegador.</p>

<p>/usr/share/doc/anarchism/html/index.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sftp]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/sftp/"/>
    <updated>2014-05-21T17:25:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/sftp</id>
    <content type="html"><![CDATA[<p>Transferencia encriptada de archivos entre computadoras por ssh.</p>

<p>Ajustes previos:</p>

<blockquote><p># nano /etc/ssh/sshd_config</p></blockquote>

<p>Y colocar las lineas:</p>

<pre><code>Subsystem sftp internal-sftp

Match group USER

 ChrootDirectory /home/USER

 ForceCommand internal-sftp

 AllowTCPForwarding no

 X11Forwarding no
</code></pre>

<blockquote><p>$ sftp USER@host</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[logrotate]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/logrotate/"/>
    <updated>2014-05-20T18:17:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/logrotate</id>
    <content type="html"><![CDATA[<p>Rotación, compresión y correos del sistema de logs.</p>

<blockquote><p># logrotate -d /etc/logrotate.conf (Verificación del correcto funcionamiento)</p>

<p># logrotate -f /etc/logrotate.conf  (forzar la verificación)</p></blockquote>

<p>1.-</p>

<p>Por defecto, se añade un numero al fichero rotado. Si queremos que se use la fecha:</p>

<blockquote><p># nano /etc/logrotate.conf</p></blockquote>

<p>Añadir la linea:</p>

<p>dateext</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/ssh/"/>
    <updated>2014-05-19T20:31:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/ssh</id>
    <content type="html"><![CDATA[<p>Comunicación cifrada entre dos máquinas.</p>

<blockquote><p>$ ssh usuario@host (básica)</p>

<p>$ ssh -v usuario@IP_o_host (comprobar errores en una conexión)</p>

<p>$ ssh -p 4000 usuario@host (especificando un puerto)</p>

<p>$ ssh -fND localhost:2080 usuario@host (Crear un servidor proxy en una máquina remota. La “N” es para que no se puedan ejecutar comandos)</p>

<p>$ ssh -X -Y usuario@host akregator (Lanzar una aplicación remota en local. Ver punto 11 de esta entrada)</p>

<p>$ ssh usuario@host ls (lanzar un comando remoto y visualizarlo en local)</p>

<p>$ ssh -t usuario@host newsbeuter  (lo mismo si precisa consola)</p>

<p>$ ssh -D 9999 usuario@host (abrir un puerto a partir del cual tunelar una conexión)</p>

<p>$ ssh user@host_ip &#8216;DISPLAY=&#8221;:0.0&#8221; import -window root screenshot.png&#8217; (realizar pantallazo de una sesión remota. Se archiva en el remoto no en local)</p>

<p>$ ssh usuario@host &#8220;tar -cf - /home/usuario/dir&#8221; | gzip dir.tar.gz (Comprimir un directorio remoto)</p>

<p>$ ssh usuario@host cat /home/usuario/archivo.txt | xclip -selection (Copiar el contenido de un archivo remoto en el clipboard local)</p>

<p># gedit /var/run/motd   (modificar el mensaje de bienvenida de ssh)</p></blockquote>

<p>1.-</p>

<p>conexión remota. El servidor ha de tener el archivo /etc/ssh/sshd_config con los siguientes parámetros:</p>

<p>AllowTcpForwarding yes</p>

<p>GatewayPorts yes</p>

<p>Luego configurar Firefox para usar un servidor proxy 127.0.0.1 puerto 9999.</p>

<p>2.-</p>

<blockquote><p># gedit /etc/issue.net   (modificar el mensaje antes del login. Para activarlo, descomentar del archivo “/etc/ssh/sshd_config” la línea: Banner /etc/issue.net)</p></blockquote>

<p>3.-</p>

<p>Tunel inverso:</p>

<blockquote><p>$ ssh -R 10000:localhost:22 usuario2@host2 (lanzado desde host1 hacia host2 crea un tunel por el puerto 10000)</p>

<p>$ ssh usuario2@host2 (Lanzado desde host3 hacia host2)</p></blockquote>

<p>Una vez entrado en host2, lanzar:</p>

<blockquote><p>$ ssh usuario1@localhost -p 10000 (Para conectar el host3 con el host1)</p></blockquote>

<p>4.-</p>

<p>Crear clave publica para acceder a un remoto sin que pida identificación:</p>

<blockquote><p>$ ssh-keygen -b 4096 -t rsa  (Crear la clave)</p>

<p>$ ssh-copy-id usuario@IP_o_HOST (enviar la clave al remoto)</p></blockquote>

<p>5.-</p>

<p>Para deshabilitar el acceso a todos los usuarios excepto a root:</p>

<blockquote><p># touch /etc/nologin</p>

<p># chmod 644 /etc/nologin</p></blockquote>

<p>6.-</p>

<p>Deshabilitar/personalizar los mensajes que aparecen cuando nos logueamos en algunas distros a un host remoto mediante SSH.</p>

<blockquote><p>$ touch /home/usuario/.hushlogin (Creando este fichero vacio se deshabilitan los mensajes. Borrandolo vuelven a aparecer)</p>

<p># nano /etc/motd (Archivo para personalizar los mensaje de bienvenida a quien se loguea en el sistema)</p></blockquote>

<p>7.-</p>

<p>Crear un atajo para la conexión a un servidor remoto:</p>

<blockquote><p>$ nano .ssh/config</p></blockquote>

<p>Y pegar el siguiente contenido debidamente modificado con nuestros datos:</p>

<pre><code>host servidor

 hostname 192.168.1.10

 user USUARIO_REMOTO
</code></pre>

<p>Nota.- Delante de la segunda y tercera linea existe un espacio.</p>

<p>Al crear este archivo, la conexión se realizará con:</p>

<blockquote><p>$ ssh servidor (Pedirá igualmente contraseña)</p></blockquote>

<p>8.-</p>

<p>Evitar desconexiones por inactividad:</p>

<blockquote><p>$ nano .ssh/config</p></blockquote>

<p>Y pegar el siguiente contenido:</p>

<pre><code>Host *

    ServerAliveInterval 120

    ServerAliveCountMax 3
</code></pre>

<p>9.-</p>

<p>Añadir un registro de las acciones realizadas dentro de cada sesión SFTP</p>

<blockquote><p># nano /etc/ssh/sshd_config</p></blockquote>

<p>Y dejar la linea como se indica:</p>

<p>Subsystem sftp /usr/lib/openssh/sftp-server -l INFO</p>

<p>Tras reiniciar ssh, el registro se plasmará en /var/log/auth.log</p>

<p>10.-</p>

<p>Aumentando la seguridad del servidor ssh:</p>

<blockquote><p># nano /etc/ssh/sshd_config</p></blockquote>

<p>Y añadir o modificar las siguientes lineas:</p>

<pre><code>AllowUsers juan pedro andrés (Limitando a uno o varios los usuarios autorizados)

AllowGroup oficina (Restringir acceso a solo un grupo)

Port 372 (Modificando puerto. Aconsejable uno inferior al 1024)

LoginGraceTime 40 (Mostrar la pantalla de login 40 segundos antes de cerrarse)

MaxStartups 4 (Cantidad máxima de conexiones simultaneas)

MaxAuthTries 3 (Limitar el número de intentos de logeo, tras los cuales se cierra la conexión)
</code></pre>

<p>11.-</p>

<p>Ajustes para tunelar aplicaciones gráficas:</p>

<p>En el servidor:</p>

<blockquote><p># nano /etc/ssh/sshd_config</p></blockquote>

<pre><code>AllowTcpForwarding yes

X11Forwarding yes

X11DisplayOffset 10

X11UseLocalhost yes
</code></pre>

<p>En la máquina cliente:</p>

<blockquote><p># nano /etc/ssh/ssh_config</p></blockquote>

<pre><code>ForwardX11 yes

ForwardX11Trusted yes
</code></pre>

<p>Después de reiniciar ssh, con el parámetro -X se visualizará la gui remota que tambien tiene que estar instalada en local.</p>

<blockquote><p>$ ssh -X usuario@host akregator</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lshell]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/lshell/"/>
    <updated>2014-05-17T04:43:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/lshell</id>
    <content type="html"><![CDATA[<p>shell restrictiva para permitir a usuarios acceder via ssh al sistema limitando sus privilegios. Algunas modificaciones en el archivo de configuración:</p>

<blockquote><p># nano /etc/lshell.conf</p></blockquote>

<pre><code>...

[global]

# archivo de logs

logpath         : /var/log/lshell/

...

[default]

...

# Comandos permitidos

allowed         : ['ls','echo','cd','ll','cat','more','nano']

# Mensaje al arrancar

intro           : "*** Entrando en la máquina con privilegios limitados *** Pulsar '?' o 'help' para listar comandos autoritzados"

# Si el usuario tiene una carpeta personal

home_path       : '/home/USUARIO/'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apt-mirror]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/apt-mirror/"/>
    <updated>2014-05-17T04:43:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/apt-mirror</id>
    <content type="html"><![CDATA[<p>[apache2]. Configurar un repositorio local. Seguidamente se muestra el proceso:</p>

<blockquote><p>$ mkdir repo (Crear el directorio)</p>

<p># nano /etc/apt/mirror.list</p></blockquote>

<p>Añadir al principio la linea del directorio:</p>

<pre><code>set base_path /home/USER/repo
</code></pre>

<blockquote><p># apt-mirror (Recargar/actualizar el repositorio)</p></blockquote>

<p>Crear el enlace para que esté disponible via web:</p>

<blockquote><p>$ cd /var/www/html</p>

<p>$ ln -s /home/USER/distro/mirror/us.archive.ubuntu.com/ubuntu ubuntu</p></blockquote>

<p>Modificar el sources.list:</p>

<blockquote><p># nano /etc/apt/sources.list</p></blockquote>

<p>Añadir la lineas:</p>

<pre><code>deb http://192.168.1.2/ubuntu trusty universe

deb http://192.168.1.2/ubuntu trusty main restricted

deb http://192.168.1.2/ubuntu trusty-updates main restricted
</code></pre>

<blockquote><p># apt-update (Actualizar el cliente)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[typeset]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/typeset/"/>
    <updated>2014-05-07T18:24:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/typeset</id>
    <content type="html"><![CDATA[<p>Define variables y les da atributos. Es necesario para operar con números y hacer cuentas con ellos. Ver &#8220;declare&#8221;</p>

<p>Un ejemplo de uso en un script:</p>

<pre><code>#! /bin/bash

typeset -i suma

suma=7+5

echo $suma
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[boinc]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/boinc/"/>
    <updated>2014-05-05T21:18:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/boinc</id>
    <content type="html"><![CDATA[<p>[boinc-client boinc-manager]Plataforma de software libre para la computación distribuida que comprende áreas tan diversas como matemáticas, medicina, biologia, astrofísica&#8230; Es una forma de aprovechar nuestros equipos durante los periodos de inactividad para que sean usados en el marco de investigaciones cientificas.</p>

<blockquote><p># /etc/init.d/boinc-client start (Arrancar el demonio)</p>

<p>$ boincmgr (Arrancar la gui para la configuración inicial)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bc]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/bc/"/>
    <updated>2014-05-05T16:12:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/bc</id>
    <content type="html"><![CDATA[<p>Calculadora</p>

<p>bc -l  (Entra en el promt de la calculadora. Para terminar teclear quit o exit)</p>

<blockquote><p>$ echo &#8220;36*2&#8221; | bc</p>

<p>$ echo &#8220;(1409302/28186042)*100&#8221; | bc -l</p>

<p>$ echo &#8220;scale = 6; 13.397/12&#8221; | bc (Resultado con 6 decimales)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stat]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/stat/"/>
    <updated>2014-05-03T08:09:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/stat</id>
    <content type="html"><![CDATA[<p>Estadísticas de archivo, directorios y sistemas</p>

<blockquote><p># stat /etc/passwd</p>

<p># stat /usr</p>

<p># stat -f /</p>

<p>$ stat -c &#8220;%s&#8221; archivo (medida del archivo)</p>

<p>$ stat -c &#8216;%n %U:%G-%a&#8217; * (Mostrar nombre archivo, propietario, grupo y permisos)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ftp]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/ftp/"/>
    <updated>2014-04-28T18:36:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/ftp</id>
    <content type="html"><![CDATA[<p>Conexión remota por linea de comandos</p>

<blockquote><p># ftp -help (Para obtener ayuda)</p>

<p># ftp -u usuario,clave ftp.dominio.com (Para conectarnos con un servidor)</p>

<p># ftp dominio.com 20201 (Entrar especificando un puerto)</p></blockquote>

<p>Al entrar en el directorio raiz del servidor ftp remoto con un prompt al estilo de:</p>

<p>ftp usuario@ftp.dominio.com:~></p>

<p>Algunas opciones:</p>

<pre><code>get archivo (Recibir un fichero de la máquina remota)

mget file file file (Recibir varios ficheros de la máquina remota.

put archivo (Enviar un fichero desde nuestra máquina a la máquina remota)

mput file file file (Enviar varios archivos de nuestra máquina a la máquina remota)

quit (Para desconectarnos del servidor)

!ls (Ejecuta una shell que permite la entrada de comandos [ls] en nuestro sistema. Con "exit" volveremos al programa de FTP)

!xterm &amp; (Lanzaría otra xterm)

bell (Indica al sistema que ejecute un pitido cuando finalice la ejecución de los comandos)

bye (Termina la ejecución de ftp)

quit (Termina la ejecución de ftp)

close (Termina la sesión ftp sin salir del programa)

delete file (Borra un archivo)

mdelete file file file (Borra varios archivos)

reget file(Continuar bajando un fichero cortado anteriormente)

open (conectar desde un ftp a otro)

? (Muestra todos los comandos disponibles)

cd, dir, ls, list, mkdir, rmdir, pwd, rename (Funionan igual que en la shell)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fatattr]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/fatattr/"/>
    <updated>2014-04-28T05:49:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/fatattr</id>
    <content type="html"><![CDATA[<p>Permite ver y/o modificar los atributos MSDOS en un sistema de archivos FAT empleando los signos + para otorgar y - para quitar. Dichos premisos son:</p>

<pre><code>r (Solo lectura)

a (Archivo)

s (Archivo del sistema)

h (Oculto)

d (Directorio)

v (Etiqueta de volumen)
</code></pre>

<blockquote><p>$ fatattr /media/usb1/* (Muestra los atributos)</p>

<p>$ fatattr -s /media/usb1/* (Quita el atributo oculto de todo el usb)</p>

<p>$ fatattr +s /media/usb1/* (Oculta todos los archivos del usb)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[update-manager]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/update-manager/"/>
    <updated>2014-04-26T12:48:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/update-manager</id>
    <content type="html"><![CDATA[<p>Actualizar, en Ubuntu, a una nueva versión. Ver también do-release-upgrade.</p>

<blockquote><p># update-manager -d   (antes de salir la version estable final)</p>

<p># update-manager -c   (despues de salir la version estable final)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[do-release-upgrade]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/do-release-upgrade/"/>
    <updated>2014-04-26T12:48:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/do-release-upgrade</id>
    <content type="html"><![CDATA[<p>Herramienta para actualizar por consola sistemas basados en Ubuntu a una nueva versión de la distribución. Para configurar si queremos actualizar entre versiones normales o versiones LTS, debemos modificar del fichero /etc/update-manager/release-upgrades la linea:</p>

<p>Para versiones LTS:</p>

<p>Prompt=lts</p>

<p>Para versiones normales:</p>

<p>Prompt=normal</p>

<p>Para no verificar nunca nuevas versiones:</p>

<p>Prompt=never</p>

<p>Estas modificaciones son válidas también para update-manager [ver]</p>

<blockquote><p># do-release-upgrade -d</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[slackpkg]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/slackpkg/"/>
    <updated>2014-04-26T07:29:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/slackpkg</id>
    <content type="html"><![CDATA[<p>Gestor de paquetes de Slackware sin resolución de dependencias. Como previa antes de su uso es preciso descomentar el repositorio de nuestra elección en /etc/slackpkg/mirrors</p>

<blockquote><p># slackpkg update gpg (Bajar llaves publicas)</p>

<p># slackpkg update (Recargar listado)</p>

<p># slackpkg upgrade-all (Actualizar toda la distro)</p>

<p># slackpkg search paquete (buscar paquete)</p>

<p># slackpkg install paquete (instalar paquete)</p>

<p># slackpkg upgrade paquete (actualiza el paquete elegido)</p>

<p># slackpkg reinstall paquete (reinstala paquete)</p>

<p># slackpkg remove paquete (desinstala paquete)</p>

<p># slackpkg blacklist paquete (pone el paquete en lista negra)</p>

<p># slackpkg download paquete (descarga paquete sin instalarlo)</p>

<p># slackpkg info paquete (muestra informacion de paquete)</p>

<p># slackpkg clean-system (Lista los paquetes obsoletos)</p>

<p># slackpkg install-new (Lista los paquetes introducidos recientemente)</p>

<p># slackpkg generate-template (Generar una plantilla de los paquetes instalados en un pc)</p>

<p># slackpkg install-template (Instalar un slackware en un pc a partir de una plantilla))</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lxde]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/lxde/"/>
    <updated>2014-04-26T06:37:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/lxde</id>
    <content type="html"><![CDATA[<p>Escritorio ligero. Sus componentes:</p>

<pre><code>pcmanfm (gestor de archivos)

lxlauncher (lanzador de aplicaciones)

lxpanel (panel de escritorio)

lxsession-edit (cambiar el gestor de ventanas y las aplicaciones ejecutadas al inicio)

lxsession  (gestor de sesiones con las opciones cerrar, reiniciar y suspender)

lxappearance  (gestor de temas. Permite cambiar el aspecto, iconos  y tipografías)

leafpad (editor de texto)

xarchiver  (gestor de archivos comprimidos)

gpicview (visor de imágenes)

lxterminal (Consola)

lxtask  (administrador de tareas y monitor de sistema)

openbox  (gestor de ventanas)

lxrandr (gestor de resolucaión de pantalla y monitores externos)

lxshortcut (editor de lanzadores)

lxmusic (reproductor de música basado en xmms2)
</code></pre>

<p>Archivos de configuración de los elementos del escritorio lxde:</p>

<pre><code>~/.config/gtkrc-2.0 (Temas de escritorio GTK+ e iconos)

~/.config/leafpad/leafpadrc (Editor de textos Leafpad)

~/.config/lxpanel/LXDE/panels/panel (Paneles)

~/.config/lxpanel/LXDE/config (Lanzadores de aplicaciones del panel)

~/.config/lxsession/LXDE/config (Administrador de ventanas)

~/.config/lxterminal/lxterminal.conf (Terminal)

~/.config/openbox/lxde-rc.xml (Openbox)

~/.config/openbox/menu.xml (Menu de Openbox)

~/.config/pcmanfm/main.lxde (Pcmanfm)
</code></pre>

<p>1.-</p>

<p>Arrancar aplicaciones al inicio:</p>

<blockquote><p># /etc/xdg/lxsession/LXDE/autostart</p></blockquote>

<p>Colocar las aplicaciones precedidas de una @:</p>

<pre><code>@liferea

@gdesklets
</code></pre>

<p>2.-</p>

<p>Crear iconos en el escritorio:</p>

<p>Colocar los archivos en la carpeta Desktop o Escritorio si se tiene en español:</p>

<blockquote><p>$ nano Desktop/home.lnk</p></blockquote>

<p>Y colocamos el siguiente contenido de ejemplo:</p>

<pre><code>[Desktop Entry]

Name=Personal

Type=Application

Comment=Carpeta personal

Terminal=false

Exec=pcmanfm ~

Icon=folder_home.png

Encoding=UTF-8
</code></pre>

<p>Para colocar la papelera:</p>

<pre><code>$ nano Desktop/papelera.lnk

Y pegar el contenido:

[Desktop Entry]

Name=Papelera

Type=Application

Comment=Papelera

Terminal=false

Exec=pcmanfm trash:///

Icon=emptytrash.png

Encoding=UTF-8
</code></pre>

<p>3.-</p>

<p>Modificar iconos:</p>

<blockquote><p>$ ls /usr/share/icons/ (Ver el listado de los disponibles)</p>

<p># nano  /usr/share/icons/default/index.theme</p></blockquote>

<p>Y en apartado Inherits colocar el deseado:</p>

<p>Inherits = ComixCursors-Red-Large</p>

<p>Reiniciar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[virtualbox]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/virtualbox/"/>
    <updated>2014-04-22T05:56:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/virtualbox</id>
    <content type="html"><![CDATA[<p>[vitualbox-guest-utils linux-headers-$(uname -r) build-essential dkms]. Herramienta que permite la virtualización de sistemas operativos.</p>

<p>En la página https://www.virtualbox.org/wiki/Downloads apartado &#8220;VirtualBox 4.2 Oracle VM VirtualBox Extension Pack&#8221; clicar en &#8220;All platforms&#8221; y Descargar el paquete de extensiones Oracle_VM_VirtualBox_Extension_Pack-4.2.0-80737.vbox-extpack. Para instalarlo, doble clic en el paquete y seguir instrucciones [aceptar condiciones y contraseña de root].</p>

<blockquote><p># usermod -aG vboxusers USUARIO (Agregar usuario al grupo vboxusers)</p>

<p># gpasswd -a $USER vboxsf (Agregar usuario al grupo vboxsf)</p>

<p># modprobe vboxdrv (Activar módulo)</p>

<p>$ VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-4.2.16-86992.vbox-extpack (instala un pack de extensiones)</p>

<p>$ VBoxManage list extpacks  (Ver paquetes de expansión instalados)</p></blockquote>

<p>1.-</p>

<p>Gestión de máquina virtuales desde consola:</p>

<p>Para la gestión de máquinas virtuales sin interfaz gráfica, se utiliza VboxHeadless para tal proposito que incluye diferentes comandos que veremos en las próximas líneas.</p>

<blockquote><p>$ VBoxManage createvm &#8211;name &#8220;maquina_virtual&#8221; &#8211;register (Creamos una máquina virtual con el nombre &#8220;maquina_virtual&#8221;)</p>

<p>$ VBoxManage modifyvm &#8220;maquina_virtual&#8221; &#8211;memory 780 &#8211;acpi on &#8211;boot1 dvd &#8211;nic1 bridged &#8211;bridgeadapter1 eth0 &#8211;ostype Ubuntu (Modificamos la máquina virtual que hemos creado, asignándole 780MB de RAM, activando ACPI, definiendo que arranque desde CD/DVD, indicando que la tarjeta de red sea en modo bridge y que el la tarjeta de red del sistema a usar es la eth0, y finalmente definiendo que la máquina será un Ubuntu.)</p>

<p>$ VBoxManage createvdi &#8211;filename ~/VirtualBox\VMs/maquina_virtual/maquina_virtual-disk01.vdi &#8211;size 30000 (Creamos un disco duro en formato VDI de 30 GB)</p>

<p>$ VBoxManage storagectl &#8220;maquina_virtual&#8221; &#8211;name &#8220;IDE Controller&#8221; &#8211;add ide (Añadimos un controlador IDE para posteriormente conectar el disco duro)</p>

<p>$ VBoxManage storageattach &#8220;maquina_virtual&#8221; &#8211;storagectl &#8220;IDE Controller&#8221; &#8211;port 0 &#8211;device 0 &#8211;type hdd &#8211;medium ~/VirtualBox\VMs/maquina_virtual/maquina_virtual-disk01.vdi (Asignamos el disco duro a la máquina virtual)</p>

<p>$ VBoxManage storageattach &#8220;maquina_virtual&#8221; &#8211;storagectl &#8220;IDE Controller&#8221; &#8211;port 1 &#8211;device 0 &#8211;type dvddrive &#8211;medium ~/IS</p></blockquote>

<p>O/ubuntu-12.04.2-server-i386.iso (Asignamos a la máquina Virtual una ISO de instalación, en este caso de Ubuntu Server)</p>

<blockquote><p>$ VBoxManage modifyvm &#8220;maquina_virtual&#8221; &#8211;pae on (activamos PAE en la máquina Virtual)</p>

<p>$ VBoxManage modifyvm &#8220;maquina_virtual&#8221; &#8211;memory 512 (Modificamos la RAM a 512MB)</p>

<p>$ VBoxHeadless &#8211;startvm &#8220;maquina_virtual&#8221; (arranca una máquina virtual)</p>

<p>$ VBoxHeadless &#8211;startvm &#8220;maquina_virtual&#8221; -e &#8220;TCP/Ports=7000&#8221; &amp; (Arrancamos la máquina virtual indicando que queremos un servidor RDP para conexión remota en el puerto 7000)</p>

<p>$ VBoxManage controlvm &#8220;maquina_virtual&#8221; poweroff (Para la máquina virtual. Recomendable parar primero la máquina virtual desde la maquina virtual y luego ejecutar esto)</p>

<p>$ VBoxManage clonehd Metasploitable.vmdk ../Metasploitable2-Linux.vdi -format VDI (Convertir una imagen vmdk en vdi)</p></blockquote>
]]></content>
  </entry>
  
</feed>
