<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TRACTATUS ELEMENTALIS]]></title>
  <link href="https://tractatuslapipaplena.herokuapp.com/atom.xml" rel="self"/>
  <link href="https://tractatuslapipaplena.herokuapp.com/"/>
  <updated>2013-12-18T18:47:38+01:00</updated>
  <id>https://tractatuslapipaplena.herokuapp.com/</id>
  <author>
    <name><![CDATA[templix]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[fc]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/fc/"/>
    <updated>2013-12-18T18:47:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/fc</id>
    <content type="html"><![CDATA[<p>Mostrar/abrir nuevamente el último comando/archivo abierto o ejecutado. La diferencia con history [ver] es que fc sólo muestra los ultimos comandos ejecutados y no todos.</p>

<blockquote><p>$ fc -l (Mostrar los últimos comandos usados por el usuario)</p>

<p>$ fc 534 (Edita el comando con el pid 534 y lo ejecuta nuevamente)</p>

<p>$ !! (Ejecuta el último comando)</p>

<p>$ !n (Ejecuta el comando número n)</p>

<p>$ !dialog (Ejecuta el último comando que empiece por dialog)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[help]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/help/"/>
    <updated>2013-12-18T18:36:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/help</id>
    <content type="html"><![CDATA[<p>Muestra los comandos disponibles en bash. Estos comandos no tienen página man, por lo que para acceder a una descripción se usa esta opción.</p>

<blockquote><p>$ help</p></blockquote>

<p>S help fc</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[shell]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/shell/"/>
    <updated>2013-12-18T18:30:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/shell</id>
    <content type="html"><![CDATA[<p>Termino usado para referirse al interprete de comandos. Los comandos, cuando se escriben en ficheros ejecutables se denominan shell-scripts o programación shell aunque, mirado estrictamente, no se sean un lenguje de programación. El termino shell hace referencia a un programa particular, el Bourne shell [sh] que es un standard unix y, aunque según las distros pueden incluir distintas shells con más características (bash, ash, csh, ksh, tcsh) todas son compatibles con el bourne shell.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mupdf]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/mupdf/"/>
    <updated>2013-12-18T16:38:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/mupdf</id>
    <content type="html"><![CDATA[<p>Visor de archivos pdf</p>

<blockquote><p>$ mupdf -b 8 -r 150 archivo.pdf (con la máxima calidad [de 0 a 8] y a 150 dpi de resolución [por defecto 72] si el pdf requiriese contraseña se añadiría con “-p contraseña”)</p></blockquote>

<p>Arrancada la aplicación, algunas teclas de control son:</p>

<pre><code>L M (Voltea el pdf)

h j k l (scroll arriba/abajo y derecha/izquierda)

+ - (Aumentar/diminuir medida del texto)

15g (Ir a la página 15)

/ (Abre diálogo “buscar texto”)

n N (Ir a la siguiente/anterior busqueda)

. , (Página siguiente, página anterior)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[continue]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/continue/"/>
    <updated>2013-12-16T21:23:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/continue</id>
    <content type="html"><![CDATA[<p>Salta a la siguiente interacion en un bucle for, select, while o until. En el siguiente ejemplo se imprime del 1 al 5 pero saltándose el 3:</p>

<pre><code>#!/bin/bash

for contador in 1 2 3 4 5

do

    if [ "$contador" -eq 3 ]

    then

        continue

    fi

    echo "$contador"

done
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[colores]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/colores/"/>
    <updated>2013-12-16T21:23:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/colores</id>
    <content type="html"><![CDATA[<p>Cuadro de colores. Las primeras dos cifras [0;30] afectan al color de las letras de la terminal, las segundas [0;40], una decena superior que las anteriores, corresponden al color de fondo.</p>

<pre><code>Negro          0;30 0;40  

Gris Obscuro   1;30 1;40

Rojo           0;31 0;41  

Rojo Claro     1;31 1;41

Verde          0;32 0;42  

Verde Claro    1;32 1;42

Café           0;33    0;43  

Amarillo       1;33 1;43

Azul           0;34 0;44   

Azul Claro     1;34 1;44

Purpura        0;35 0;45  

Fucsia         1;35 1;45

Cyan           0;36 0;46   

Cyan Claro     1;36 1;46

Gris Claro     0;37 0;47   

Blanco         1;37 1;47
</code></pre>

<p>Nota.- Si se omite el el 0 o el 1 por defecto es el 0</p>

<p>Algunso ejemplos:</p>

<blockquote><p>$ echo -e &#8220;\e[1;33;44mlinux es un sistema genial&#8221; (En azul toda la linea)</p>

<p>$ echo -e &#8220;\e[0;34mAtención:\e[1;32m linux es un\e[0;31m sistema genial&#8221; (En azul, verde y rojo sin fondo)</p>

<p>$ echo -e &#8220;\e[1;33;40mLinux es un sistema genial&#8221; (En amarillo y con fondo gris toda la linea)</p>

<p>$ echo -e &#8220;\e[1;37;1;41mLinux es un sistema genial\e[0m&#8221; (En blanco y fondo rojo hasta el final del texto  &#8230;\e[0m&#8221;)</p>

<p>$ echo -e &#8220;\e[33;40mAtención:\e[34;41m linux es un\e[37;42m sistema genial\e[0m&#8221; (café con fondo gris, azul y fondo rojo y blanco con fondo verde y terminando el colorido al final del texto)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awstats]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/awstats/"/>
    <updated>2013-12-16T20:26:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/awstats</id>
    <content type="html"><![CDATA[<p>[libnet-dns-perl libnet-ip-perl libnet-xwhois-perl]</p>

<p>Estadísticas de la red local</p>

<p>En el fichero de configuración (/etc/awstats/awstats.conf) comprobar:</p>

<p>LogFile=&#8221;/var/log/apache2/access.log&#8221;</p>

<p>SiteDomain=”tu_dominio.com” (entre comillas nombre del host)</p>

<p>LogFormat=1 (El usado por apache)</p>

<p>AllowToUpdateStatsFromBrowser=1 (Actualizar via navegador)</p>

<p>Lang=&#8221;es&#8221;</p>

<p>Asegurar permisos:</p>

<blockquote><p># chmod o+r /var/log/apache2/access.log</p></blockquote>

<p>Crear enlace de las imágenes:</p>

<pre><code># ln -s /usr/share/awstats/icon/ /var/www/awstats-icon 
</code></pre>

<p>Crear las estadísticas:</p>

<pre><code># /usr/lib/cgi-bin/awstats.pl -update -config=/etc/awstats/awstats.conf 
</code></pre>

<p>Para ver las estadísticas, en el navegador:</p>

<pre><code>http://localhost/cgi-bin/awstats.pl
</code></pre>

<p>Si no queremos que las estadísticas sean accesibles para cualquiera:</p>

<pre><code># gedit /etc/apache2/sites-available/default
</code></pre>

<p>Y en la linea “Allow from All” de la sección siguiente, quitamos el “All” y ponemos 127.0.0.1 [O la ip que proceda] y reiniciamos servicio:</p>

<p>ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/</p>

<pre><code>&lt;Directory "/usr/lib/cgi-bin"&gt; 

AllowOverride None 

Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch 

Order allow,deny 

Allow from 127.0.0.1 

&lt;/Directory&gt;
</code></pre>

<blockquote><p># /etc/init.d/apache2 force-reload</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awk]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/awk/"/>
    <updated>2013-12-16T20:26:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/awk</id>
    <content type="html"><![CDATA[<p>Busca patrones y los procesa. Es practicamente un lenguaje de programación.</p>

<p>Archivo base para ejemplo (Empleado &#8211; Precio/hora &#8211; Horas trabajadas – Cómo las cobra):</p>

<blockquote><p>$ cat lista</p></blockquote>

<pre><code>Juan Gomez 6 10 banco 

Clara Fuentes 7 12 banco 

Antonio Cano 6 13 metálico 

José Bueno 7 0 banco 

Matías Crespo 5 8 metálico 

Isabel Ruiz 7 0 metálico 

María Monzón 9 16 metálico
</code></pre>

<p>Imprimir la segunda columna (Apellidos):</p>

<pre><code>$ awk ' { print $2 } ' lista
</code></pre>

<p>Imprimir la última columna:</p>

<pre><code>$ awk ' { print $NF } ' lista
</code></pre>

<p>Imprimir la linea 3:</p>

<pre><code>$ awk ' NR == 3 ' lista
</code></pre>

<p>Imprimir todo menos la primera columna:</p>

<pre><code>$ awk ' { $1 = "" ; print } ' lista
</code></pre>

<p>Imprimir las columnas tabuladas:</p>

<pre><code>$ awk ' { print $1 “\t” $2 “\t” $3 “\t” $4 } ' lista
</code></pre>

<p>Imprimir las lineas que tengan menos de 22 caracteres:</p>

<pre><code>$ awk 'length($0) &lt; 22' lista
</code></pre>

<p>Calcular el sueldo de los empleados que han trabajado:</p>

<pre><code>$ awk ' $4 &gt; 0 { print $1,$2, $3*$4} ' lista  
</code></pre>

<p>Personas que no han trabajado:</p>

<pre><code>$ awk ' $3 == 0 { print $1}' lista 
</code></pre>

<p>Buscar una entrada concreta:</p>

<pre><code>$ awk '/Fuentes/ { print $0 }' lista
</code></pre>

<p>Buscar los que cobran en metálico e impimir la 2ª columna:</p>

<pre><code>$ awk ' /'metálico'/ {print$2}' lista 
</code></pre>

<p>Buscar dos entradas en una misma linea separándolas con punto y coma (;):</p>

<pre><code>$ awk '/Fuentes/ { print $0 }; /Cano/ { print$0 } ' lista
</code></pre>

<p>Imprimir lineas que tengan alguno de los campos o los dos:</p>

<pre><code>$ awk '/Bueno/ || /Cano/' lista
</code></pre>

<p>Imprimir lineas que tengan los dos campos:</p>

<pre><code>$ awk '/Bueno/ &amp;&amp; /7/' lista
</code></pre>

<p>Imprimir las lineas que no tengan el cammpo:</p>

<pre><code>$ awk '! /metálico/' lista
</code></pre>

<p>Buscar las entradas en las que el primer campo empiece por “J”, imprimir el 2º campo y, entre parentesis el último:</p>

<pre><code>$ awk '$1 ~ /^J/ {print$2, "("$NF")"}' lista
</code></pre>

<p>Lo mismo con if:</p>

<pre><code>$ awk ' { if ($1 ~ /^J/) print$2, “(“$NF”)” }' lista
</code></pre>

<p>Añadir 5 horas al 4º campo y comprobar como quedan con la modificación:</p>

<pre><code>$ awk '{ $4 = ($4+5); print $0 }' lista
</code></pre>

<p>Añadir un nuevo campo ($6) con el producto del 3 y el 4:</p>

<pre><code>$ awk '{ $6 = ($3*$4); print $0 }' lista
</code></pre>

<p>print permite colocar texto:</p>

<pre><code>$ awk ' { print "El sueldo de ",$2," es de ",$3*$4," euros."} ' lista 
</code></pre>

<p>Mostar las veces que aparece &#8220;banco&#8221;:</p>

<pre><code>awk 'BEGIN { print "Veces que aparece banco" }

&gt;        /banco/ { ++banco }

&gt;         END       { print "banco aparece " banco " veces." }' lista
</code></pre>

<p><strong>Variables internas:</strong></p>

<p>Mostrar el número de campos de cada linea (NF):</p>

<pre><code>$ awk ' { print NF } ' lista 
</code></pre>

<p>Mostrar el número de lineas (NR):</p>

<pre><code>$ awk ' { print NR } ' lista
</code></pre>

<p>Mostrar todas las lineas completas ($0):</p>

<pre><code>$ awk ' { print $0 } ' lista 
</code></pre>

<p>Mostrar las lineas que tengan al menos un campo</p>

<pre><code>$ awk 'NF &gt; 0' lista
</code></pre>

<p>Lo mismo con if:</p>

<pre><code>$ awk '{ if (NF &gt; 0) print }' lista
</code></pre>

<p>Dar formato a la salida de datos:</p>

<pre><code>$ awk ' $4 &gt; 0 { printf "%-8s .... %8.1f euros\n",$2,($3*$4) } ' lista 

$4 &gt; 0 (Que imprima los que la 4ª columna no sea cero.)

%-8s (Que imprima una cadena (s) justificada a la izquierda (-) en un campo de 8 caracteres de ancho.)

%8.1f (Que imprima un numero real (f), en un campo de ocho caracteres de ancho, con un decimal(.))
</code></pre>

<p>Imprimir cadena, justificada a la izquierda y en campos de 10 y 5 caracteres:</p>

<pre><code>$ awk '{ printf "%-10s %-10s %-5s %-5s %-5s\n", $1, $2, $3, $4, $5 }' lista
</code></pre>

<p>Parecido con más florituras (todo en una sola linea)</p>

<pre><code>$ awk 'BEGIN {print "nombre\tapellido\tprecio\thoras\tpago"; print  "------\t--------\t------\t-----\t----"}; {print $1"\t"$2"\t"$3"\t"$4"\t"$5 }' lista
</code></pre>

<p>Lo mismo más legible:</p>

<pre><code>$ awk 'BEGIN {print "nombre\tapellido\tprecio\thoras\tpago" 

&gt;             print "------\t--------\t------\t-----\t----"} 

&gt;            {print  $1"\t"$2"\t"$3"\t"$4"\t"$5 }' lista
</code></pre>

<p>BEGIN y END son patrones especiales usados para suministrar al script awk qué hacer antes de empezar a procesar y después de haber procesado los registros de la entrada.:</p>

<pre><code>$ awk 'BEGIN {print “Cuantas veces aparece la palabra banco” } 

&gt;       /banco/ { ++i } 

&gt;       END   {print “banco aparece “i” veces.”}' lista 
</code></pre>

<p>Los  patrones pueden combinarse mediante los operadores lógicos AND (&amp;&amp;), OR(||) y NOT(!).</p>

<p>Imprimir los nombres de los empleados que ganan mas de 6.50 euros a la hora y que han trabajado mas de 14:</p>

<pre><code>$ awk ' $3&gt;=6.50 &amp;&amp; $4&gt;=14 { print $1,$2 } ' lista 
</code></pre>

<p>Patrones</p>

<p>buscar las lineas que contienen la cadena &#8220;banco&#8221; en el 5º campo:</p>

<pre><code>$ awk ' $5 ~ /banco/ ' lista 
</code></pre>

<p>Buscar las lineas que no contengan la cadena &#8220;banco&#8221; en el 5º campo:</p>

<pre><code>$ awk '  $5 !~ /banco/ ' lista
</code></pre>

<p>Mostrar los que el 4º campo no empiece por 0 o 1:</p>

<pre><code>$ awk ' $4 ~ /^[^01]/' lista 
</code></pre>

<p>La salida también puede pasarse a un filtro para ordenarse:</p>

<pre><code>$ awk ' { print $2 | "sort" } ' lista
</code></pre>

<p>Mostrar la linea cuyo 2º campo termina en “iz”:</p>

<pre><code>$ awk '$2 ~ /iz$/' lista 
</code></pre>

<p>Mismo concepto sin especificar si la primera letra es mayúscula o minúscula y sin conocer la segunda:</p>

<pre><code>$ awk '$1 ~ /^[Cc]./' lista
</code></pre>

<p>Mismo concepto incluyendo las que empiezan por “R”:</p>

<pre><code>$ awk '$2 ~ /^[Cc].|^[R]/' lista 
</code></pre>

<p>“tolower” convierte el campo especificado a minúsculas:</p>

<pre><code>$ awk 'tolower($1) ~ /^m/' lista     
</code></pre>

<p>Para mandar cada linea a un archivo con el nombre del 2er campo:</p>

<pre><code>$ awk ' { print &gt; $2 } ' lista
</code></pre>

<p>Mandar el primer campo a un archivo y el segundo a otro:</p>

<pre><code>$ awk '{ print $1 &gt; "nombres"; print $2 &gt; "apellidos" }' lista
</code></pre>

<p>Lo mismo pero mandándolo ordenado:</p>

<pre><code>$ awk '{ print $1 | "sort &gt; nombres"; print $2 | "sort &gt; apellidos" }' lista 
</code></pre>

<p>Indicando caracter separador (un espacio y que imprima el 2º campo):</p>

<pre><code>$ awk  -F " " ' { print $2 } ' lista 
</code></pre>

<p>Lo mismo usando BEGIN:</p>

<pre><code>$ awk 'BEGIN { FS = " " } ; { print $2 }' lista
</code></pre>

<p>El siguiente  programa  muestra  como  puede usarse awk para validación de datos.</p>

<blockquote><p>$ cat validar</p></blockquote>

<pre><code>$3 &lt; 6.5   { print $1,$2 " ===&gt; precio por hora bajo", "("$3")" } 

$3 &gt; 8     { print $1,$2 " ===&gt; precio por hora alto", "("$3")" } 

$5 == "banco"    { print $1,$2 " ===&gt; Cobra por banco" } 

$5 == "metálico" { print $1,$2 " ===&gt; Cobra en metálico" } 
</code></pre>

<p>Se ejecuta con:</p>

<pre><code>$ awk -f validar lista 
</code></pre>

<p>Aunque también podríamos añadir que lo ordenara por orden alfabetico del segundo campo (-k2) separado del primero por un espacio(-t” “):</p>

<pre><code>$ awk -f validar lista | sort -t” “ -k2
</code></pre>

<p>Otros ejemplos:</p>

<pre><code>$ awk '/d.[0-9]/{print $4}' /proc/partitions  (listar todas las particiones)

$ cat 1.txt | awk '{print$1”\t”$2}'  (tabulando la salida)

$ cat 1.txt | awk '!/#/{print $0}' &gt; 2.txt  (Imprime todo menos las lineas comentadas y lo manda a un archivo)

$ cat 1.txt | awk 'BEGIN { FS="\n"; RS="" } { print $1 }' &gt; lista.txt (Manda a un archivo las primeras lineas precedidas de una en blanco)

$ who | awk '{print $1}'  (Mostrar todos los usuarios registrados)

$ awk '$1~/^DocumentRoot/{print $2}' /etc/apache2/sites-available/default (conocer la carpeta del servidor)

$ awk 'BEGIN { for (i = 1; i &lt;= 7; i++) print int(101 * rand()) }' (Escribir 7 números aleatorios del 0 al 100)

Creación de scripts con awk:
</code></pre>

<p>1.-</p>

<p>Imprimir el simple &#8220;Hola mundo cruel&#8221;</p>

<pre><code>#!/usr/bin/awk -f 

BEGIN { print "Hola mundo cruel" } 
</code></pre>

<p>Lo mismo pero incluido en un script de bash:</p>

<pre><code>#!/bin/bash

awk 'BEGIN { print "Hola mundo cruel" }'
</code></pre>

<p>2.-</p>

<p>Mandar el segundo campo de listado.txt a un archivo y el sexto a otro:</p>

<pre><code>#! /usr/bin/awk -f  

awk '{ print$2 &gt; "lista_nombres"

       print$6 &gt; "lista_telefonos" }' listado.txt 
</code></pre>

<p>3.-</p>

<p>Pasar el comando date&#8230; a variable [getline dia_actual], cerrar el comando [close] e imprimirlo en pantalla:</p>

<pre><code>#!/usr/bin/awk -f

BEGIN {

           "date +%d-%m-%Y" | getline dia_actual

           close("date +%d-%m-%Y")

           print "Hoy estamos a " dia_actual

}
</code></pre>

<p>En bash:</p>

<pre><code>awk 'BEGIN {

           "date +%d-%m-%Y" | getline dia_actual

           close("date +%d-%m-%Y")

           print "Hoy estamos a " dia_actual

}'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dropbox]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dropbox/"/>
    <updated>2013-12-16T18:03:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dropbox</id>
    <content type="html"><![CDATA[<p>Almacenamiento en la nube. Linea de comandos para el servicio Dropbox.</p>

<blockquote><p>$ dropbox status (Muestra el estado actual del demonio)</p>

<p>$ dropbox help update (Muestra información sobre el comando que se especifique)</p>

<p>$ dropbox puburl archivo (Muestra una URL de &#8220;archivo&#8221; para compartir)</p>

<p>$ dropbox stop (Para el servicio)</p>

<p>$ dropbox running (Comprobar si está activo el demonio)</p>

<p>$ dropbox update (Descargar la última versión de dropbox)</p>

<p>$ dropbox start (Arranca el servicio)</p>

<p>$ dropbox start -i (Arranca el servicio e instala el demonio dropboxd si no está disponible en el sistema)</p>

<p>$ dropbox filestatus -l -a directorio (Lista los archivos del directorio especificado incljuso los ocultos)</p>

<p>$ dropbox filestatus fichero (Muestra el estado del fichero)</p>

<p>$ dropbox autostart (Si respondemos &#8220;n&#8221; dropbox no se iniciará automáticamente al iniciar la sesión. Por defecto &#8220;y&#8221;: si)</p>

<p>$ dropbox exclude list (Muestra los directorios excluidos de la sincronización)</p>

<p>$ dropbox exclude add dir1 (Excluir un directorio de la sincronización)</p>

<p>$ dropbox exclude add dir1 dir2 (Excluir varios directorios)</p>

<p>$ dropbox exclude remove dir1 (Elimina un directorio de la lista de exclusión)</p>

<p>$ dropbox lansync (Por defecto usa sincronización LAN. Si respondemos &#8220;n&#8221; no la usará)</p></blockquote>

<p>1.-</p>

<p>Activar la carpeta &#8220;Public&#8221; en nuestra cuenta. Visitar la siguiente dirección web <a href="https://www.dropbox.com/enable_public_folder">https://www.dropbox.com/enable_public_folder</a></p>

<p>Tras la confirmacón aparecerá en nuestra cuenta de Dropbox.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[aewan]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/aewan/"/>
    <updated>2013-12-15T21:20:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/aewan</id>
    <content type="html"><![CDATA[<p>Editor de dibujos en ascii. Una vez lanzada la aplicacion con las teclas de funcion F1-F4, se accede a los menus. La aplicacion llama ^ a la tecla control y % a la tecla Alt.</p>

<p>Algunas teclas de control:</p>

<pre><code>Ctrl a (Abre un lienzo con las medidas por defecto)

Alt a (Pregunta por las medidas del lienzo)

Ctrl o (Abre un dibujo guardado previamente)

Ctrl s (Guarda el presente dibujo)

Ctrl w (Si tenemos mas de un dibujo, pasa al siguiente)

Ctrl q (Pasa al anterior)

Ctrl l (Muestra los lienzos abiertos y algunas opciones sobre ellos)

Ctrl d (Copiar el lienzo)

Ctrl r (Renombrar el lienzo)

Alt r (Modificar las medidas)

TAB (Abre el dialogo de colores)

Alt p (Seleciona el color de la celda donde esta el cursor)

Alt z (Llena la celda del color que se ha seleccionado con Alt p))

Ctrl e (Muestra los metadatos)

Ctrl c (Sale del programa)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zypper]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zypper/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zypper</id>
    <content type="html"><![CDATA[<p>Gestor de paquetes de opensuse (rpm)</p>

<blockquote><p># zypper (Generar una lista de paquetes instalados)</p>

<p># zypper repos (Listar repositorios)</p>

<p># zypper install paquete  (Instalar paquete)</p>

<p># zypper install rutadelpaquete (Instalar paquetes que no está en los repositorios)</p>

<p># zypper install &#8211;force paquete (Reinstalar)</p>

<p># zypper remove paquete (Desinstalar paquete)</p>

<p># zypper remove &#8211;clean-deps paquete (Desinstalar con dependencias)</p>

<p># zypper search paquete (Buscar paquete)</p>

<p># zypper help comando (ayuda para un comando)</p>

<p># zypper update (Actualizar base de datos y el sistema)</p>

<p># zypper info paquete (Buscar información de paquete)</p>

<p># zypper clean (Limpiar caché e información obsoleta)</p>

<p># zypper refresh (Actualizar información)</p>

<p># zypper dist-upgrade (Actualizar distro)</p>

<p># zypper al &#8216;paquete&#8217; (Descartar paquete para actualizaciones)</p>

<p># zypper rl &#8216;paquete&#8217; (Desbloquear paquete del bloqueo anterior)</p>

<p># zypper verify (Verificar dependencias)</p>

<p># zypper intall-new-recommends (Instalar paquetes recomendados)</p>

<p># zypper list-updates (Listar Actualizaciones disponibles)</p>

<p># zypper list-patches (Listar parches disponibles)</p>

<p># zypper patches (Instalar parches disponibles)</p>

<p># zypper addrepo rutadelrepositorio (Añadir repositorio)</p>

<p># zypper addrepo -f repositorio rutadelrepositorio (Añadir con actualización automática)</p>

<p># zypper modifyrepo &#8211;disable repositorio (Desactivar repositorio)</p>

<p># zypper removerepo nombredelrepositorio (Suprimir repositorio)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zmore]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zmore/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zmore</id>
    <content type="html"><![CDATA[<p>Pagina la visualización de un fichero comprimido (Ver more)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zmap]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zmap/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zmap</id>
    <content type="html"><![CDATA[<p>Herramienta que permite escanear las direcciones IP de todo Internet en menos de 1 hora. Para incrementar la velocidad, el escaneo no se realiza por orden de número de IPs sinó a saltos. Desgarga:</p>

<blockquote><p>$ git clone https://github.com/zmap/zmap.git</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zless]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zless/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zless</id>
    <content type="html"><![CDATA[<p>Pagina la visualización de un fichero comprimido (Ver less).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zip]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zip/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zip</id>
    <content type="html"><![CDATA[<p>comprime y empaqueta</p>

<blockquote><p>$ zip archivo.zip fichero1 fichero2 (Comprimir varios ficheros)</p>

<p>$ zip -r archivo.zip file1 file2 dir1 (comprimir varios files y directorios)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zgrep]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zgrep/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zgrep</id>
    <content type="html"><![CDATA[<p>imprime las líneas que cumplan la expresión regula sobre ficheros comprimidos (Ver grep)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zfgrep]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zfgrep/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zfgrep</id>
    <content type="html"><![CDATA[<p>Busca cadenas de texto fijas sobre archivos comprimidos (ver fgrep)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zenity]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zenity/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zenity</id>
    <content type="html"><![CDATA[<p>Creación de dialogos gráficos simples. Especialmente para scripts.</p>

<blockquote><p>$ zenity -?   (muestra las opciones de la aplicación y de ayuda)</p>

<p>$ zenity &#8211;title Archivo &#8211;width 800 &#8211;height 600 &#8211;text-info &#8211;filename /home/usuario/archivo.txt (mostrar un archivo)</p>

<p>$ zenity &#8211;info &#8211;text=&#8221;Este PC va a explotar en 10 segundos. Date por muerto.&#8221;</p>

<p>$ zenity &#8211;password &#8211;username (Muestra diálogo entrar usuario y contraseña)</p>

<p>$ zenity &#8211;calendar (Muestra el calendario)</p>

<p>$ zenity &#8211;scale (Muestra la escala)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zegrep]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zegrep/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zegrep</id>
    <content type="html"><![CDATA[<p>Busca expresiones regulares sobre archivos comprimidos (Ver egrep)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zdump]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zdump/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zdump</id>
    <content type="html"><![CDATA[<p>Visualiza la zona horaria especificada.</p>

<blockquote><p>$ zdump Madrid</p></blockquote>
]]></content>
  </entry>
  
</feed>
