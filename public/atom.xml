<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TRACTATUS ELEMENTALIS]]></title>
  <link href="https://tractatuslapipaplena.herokuapp.com/atom.xml" rel="self"/>
  <link href="https://tractatuslapipaplena.herokuapp.com/"/>
  <updated>2013-08-25T19:05:26+02:00</updated>
  <id>https://tractatuslapipaplena.herokuapp.com/</id>
  <author>
    <name><![CDATA[templix]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[owncloud]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/owncloud/"/>
    <updated>2013-08-25T14:52:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/owncloud</id>
    <content type="html"><![CDATA[<p>[apache2 php5 php-pear php-xml-parser php5-sqlite php5-json sqlite php5-mysql mp3info curl libcurl3 libcurl3-dev php5-curl zip php5-gd]</p>

<p>Nube de almacenamiento tipo dropbox, minux, google-drive &#8230; pero no comercial y libre, gestionado totalmente via web. Descargar de http://owncloud.org/ la última versión. Una vez bajado el paquete tar.bz2:</p>

<blockquote><p>$ tar -xvf owncloud*.tar.bz2 (Descomprimir)</p>

<p>$ mv owncloud /var/www/ (mover la carpeta al directorio web)</p>

<p># chown -R www-data:www-data /var/www/owncloud (Crear usuario y grupo)</p>

<p># /etc/init.d/apache2 restart (reiniciar apache2)</p></blockquote>

<p>Terminar la configuración [administrador, contraseña, base de datos..) abriendo en el navegador la dirección:</p>

<p>http://localhost/owncloud</p>

<p>Todo lo que se arrastra a la ventana del navegador se incluye en la nube.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golismero]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/golismero/"/>
    <updated>2013-08-25T10:53:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/golismero</id>
    <content type="html"><![CDATA[<p>Framework para auditorías de seguridad y pentesting.</p>

<blockquote><p>$ git clone https://github.com/golismero/golismero.git (Descargar la última versión)</p>

<p>$ cd golismero</p>

<p># python golismero.py localhost -o prueba.html -o prueba.txt &#8211;audit-name prueba_localhost (Iniciar la uditoria, que guarde el resultado en .html y .txt y dándole un nombre)</p>

<p># python golismero.py URL -i nikto_output.csv -o report.html -d all (Importar el resultado de un scaneo con nikto [-i] y desactivando todos los plugins [-d])</p>

<p># python golismero.py URL -nd (Sin guardar los resultados en la base de datos. Por defecto lo hace automáticamente)</p>

<p># python golismero.py URL -db database.db -no (Realizar el scaneo y guardarlo en la basa de datos)</p>

<p># python golismero.py -db database.db -d all -o report.html (Generar un informe a partir de un scaneo guardado en la base de datos)</p>

<p># python golismero.py &#8211;plugin-list (Ver listado de plugins disponibles)</p>

<p># python golismero.py &#8211;plugin-info dns_analyzer (Ver detalles de un plugin concreto)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[curl]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/curl/"/>
    <updated>2013-08-25T09:56:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/curl</id>
    <content type="html"><![CDATA[<p>Herramienta para la transferencia de datos desde o hacia un servidor. Permite los protocolos ftp, https, sftp, scp, tftp &#8230;</p>

<blockquote><p>$ curl ftp://host (Sin ninguna opción obtiene la páquina principal del host [http, ftp&#8230;)</p>

<p>$ curl ftp://host/ http://host/ (Descargar dos host simultaneos)</p>

<p>$ curl -o destino http://host (Guarda el host en destino)</p>

<p>$ curl -i URL (información sobre una URL)</p>

<p>$ curl -o portada.png http://www.lapipaplena.net/wp-content/uploads/2012/08/meditate1.png (descargar una imagen y guardarla)</p>

<p>$ curl -u usuario:contraseña http://localhost/restringido/ (Acceder a una zona que requiera autentificación)</p>

<p>$ curl ftp://usuario:contraseña@host:puerto/home/usuario/archivo (Otra forma de autentificación)</p>

<p>$ curl -T archivo_local ftp://host/carpeta (Subir un archivo local a un host remoto)</p>

<p>$ curl -T archivo_local -a ftp://host/ (Subir un archivo local a un host remoto con el parámetro -a)</p>

<p>$ curl -x proxy:8889 ftp://host (Obtener un host utilizando un proxy)</p>

<p>$ curl -u usuario:contraseña -x proxy:8888 http://host (Usando proxy y con autentificación)</p>

<p>$ curl -U usuario:contraseña -x proxy:8888 http://host (Cuando el proxy requiere autentificación especial)</p>

<p>$ curl -r 0-99 http://host (Obtener los primeros 100 bytes del documento)</p>

<p>$ curl -r -500 http://host (Obtener los últimos 500 bytes del documento)</p>

<p>$ curl &#8211;proxytunnel -x proxy:8888 -T archivo_local ftp ftp://host (Usando un tunel)</p>

<p>$ curl -v ftp://host (Ver información que se envia y recibe pero no los datos reales)</p>

<p>$ curl &#8211;trace trace.txt host (Obtener más información y guardar en trace.txt)</p>

<p>$ curl &#8211;dump-header headers.txt host (Guardar las cabeceras [cookies] en headers.txt)</p>

<p>$ curl -b headers.txt www.example.com (Pasar las cabeceras obtenidas a un host)</p>

<p>$ curl -e www.bueno.com http://host/ (Intentar engañar un site con una dirección falsa)</p>

<p>$ curl -A &#8216;Mozilla/3.0 (Win95; I)&#8217; http://host (Intentar engañar un site especificando otro navegador)</p>

<p>$ curl &#8211;limit-rate 10K host (Limitar la velocidad de transferencia a 10 kilobytes)</p>

<p>$ curl -P 192.168.0.10 ftp host (Acceder a un host a partir de una ip a la que si tenemos acceso)</p>

<p>$ curl -C - -o descarga hots (Proseguir una descarga interrumpida)</p>

<p>$ curl -z local.html hots/remote.html (Sólo se efectuará la descarga si remote.html es más reciente que local.html)</p></blockquote>

<p>Otras opciones:</p>

<pre><code>$ curl -Is google.com | grep Date (Conocer la fecha via web)

$ curl ip.appspot.com (Conocer la IP externa) 

$ curl icanhazip.com (lo mismo)

$ curl ifconfig.me (lo mismo)

$ curl whatismyip.org (Otra) 

$ curl -u usuario:clave --silent "https://mail.google.com/mail/feed/atom" | perl -ne 'print "\t" if /&lt;name&gt;/; print "$2\n" if /&lt;(title|name)&gt;(.*)&lt;\/\1&gt;/;' (visualizar todos los mensajes no leidos de gmail)

$ curl -s 'http://geoiplookup.wikimedia.org/' | sed 's/^.*=\s*//' | python3 -mjson.tool (muestra la situación geográfica)

$ curl -s http://geoiplookup.wikimedia.org/ | python3 -c 'import sys, json, string, webbrowser; webbrowser.open(string.Template("http://maps.google.com/maps?q=$lat,$lon").substitute(json.loads(sys.stdin.read().split("=")[-1])))' (Lo mismo pero abriendo una pestaña en el navegador)

$ curl -s http://www.census.gov/popclock/data/population/world | awk -F'[:,]' '{print $7}' (Muestra el número de habitantes de la tierra)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lorem]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/lorem/"/>
    <updated>2013-08-25T08:19:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/lorem</id>
    <content type="html"><![CDATA[<p>[libtext-lorem-perl]</p>

<p>Crear textos aleatorios a partir del famoso lorem ipsum.</p>

<blockquote><p>$ lorem -p 4 (Generar 4 párrafos)</p>

<p>$ lorem -w 10 (Generar 10 palabras)</p>

<p>$ lorem -s 2 (Generar 2 sentencias)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kernel]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/kernel/"/>
    <updated>2013-08-24T12:19:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/kernel</id>
    <content type="html"><![CDATA[<p>1.-</p>

<p>Suprimir kernels antiguos</p>

<blockquote><p># uname -r   (para conocer el último)</p>

<p># dpkg &#8211;get-selections | egrep linux-image</p></blockquote>

<p>linux-image-2.6.17-11-generic install</p>

<p>linux-image-2.6.20-15-generic install</p>

<p>linux-image-2.6.20-16-generic install</p>

<p>Dejar el actual y suprimir los otros:</p>

<blockquote><p># apt-get remove &#8211;purge linux-image-2.6.17-11-generic</p></blockquote>

<p>2.-</p>

<p>Instalar nuevo kernel:</p>

<p>Para el ejemplo descargaremos el kernel 3.3.6 para la versión de ubuntu 12.04 [http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.3.6-precise/] para la arquitectura amd64. De los varios archivos que encontramos en la página, para lo que nos ocupa, solo interesan los linux-headers y linux-image.</p>

<blockquote><p>$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.3.6-precise/linux-headers-3.3.6-030306_3.3.6-030306.201205121335_all.deb</p>

<p>$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.3.6-precise/linux-headers-3.3.6-030306-generic_3.3.6-030306.201205121335_amd64.deb</p>

<p>$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.3.6-precise/linux-image-3.3.6-030306-generic_3.3.6-030306.201205121335_amd64.deb</p></blockquote>

<p>La instalación se realiza en el mismo orden de descarga:</p>

<blockquote><p># gdebi linux-headers-3.3.6-030306_3.3.6-030306.201205121335_all.deb</p>

<p># gedbi linux-headers-3.3.6-030306-generic_3.3.6-030306.201205121335_amd64.deb</p>

<p># gedbi linux-image-3.3.6-030306-generic_3.3.6-030306.201205121335_amd64.deb</p></blockquote>

<p>Después de la instalación del kernel, instalar los drivers privativos tipo nvidia o ati. Y actualizar grub:</p>

<blockquote><p># update-grub</p></blockquote>

<p>3.-</p>

<p>[libncurses5 libncurses5-dev]</p>

<p>Compilar el kernel desde el codigo fuente. Puede ser util para habilitar soporte para algun nuevo periferico no soportado por el kernel por defecto. Escoger la ultima version del nucleo estable de kernel.org. Para el ejemplo usaremos la 3.9.11.</p>

<blockquote><p># cd /usr/src</p>

<p># wget https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.9.11.tar.gz</p>

<p># tar -zxvf linux-3.9.11.tar.gz</p>

<p># cd linux-3.9.11</p>

<p># make menuconfig/</p></blockquote>

<p>Mostrara las opciones de configuracion por defecto que podran ser modificadas para nuestra maquina especifica. Una vez terminado, &#8220;guardar&#8221; como .config</p>

<blockquote><p># make (Compilar)</p>

<p># make modules_install (Instalar los modulos)</p>

<p># make install (Instalar el nuevo kernel en el sistema)</p></blockquote>

<p>La instalacion ya modifica el grub.cfg para que el sistema arranque con el nuevo kernel. Si este da problemas puede escogerse para el arranque el antiguo que constara en el menu de Grub. Puede verificarse el nuevo kernel con:</p>

<blockquote><p>$ uname -r</p></blockquote>

<p>4.-</p>

<p>Borrar kernels antiguos de forma automática:</p>

<pre><code># apt-get purge $(dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | head -n -1) --assume-yes 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[yacy]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/yacy/"/>
    <updated>2013-08-24T07:12:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/yacy</id>
    <content type="html"><![CDATA[<p>[openjdk-6-jre-headless]</p>

<p>Buscador libre y descentralizado. La red no almacenada las busquedas y no es posible censurar el contenido del indice compartido. Descarga de http://debian.yacy.net o añadiendo al sources.list la linea:</p>

<pre><code>deb http://debian.yacy.net ./
</code></pre>

<p>Arrancar el demonio de forma clásica:</p>

<blockquote><p># /etc/init.d/yacy start (restart para reiniciar y stop para parar)</p></blockquote>

<p>El acceso se realiza colocando en la barra de direcciones del navegador:</p>

<pre><code>http://localhost:8090
</code></pre>

<p>Para el acceso externo es preciso redireccionar en el router el puerto al pc correspondiente.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[virtualbox]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/virtualbox/"/>
    <updated>2013-08-24T06:50:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/virtualbox</id>
    <content type="html"><![CDATA[<p>Herramienta que permite la virtualización de sistemas operativos.</p>

<p>En la página https://www.virtualbox.org/wiki/Downloads apartado &#8220;VirtualBox 4.2 Oracle VM VirtualBox Extension Pack&#8221; clicar en &#8220;All platforms&#8221; y Descargar el paquete de extensiones Oracle_VM_VirtualBox_Extension_Pack-4.2.0-80737.vbox-extpack. Para instalarlo, doble clic en el paquete y seguir instrucciones [aceptar condiciones y contraseña de root].</p>

<blockquote><p># usermod -aG vboxusers USUARIO (Agregar usuario al grupo vboxusers)</p>

<p># gpasswd -a $USER vboxsf (Agregar usuario al grupo vboxsf)</p>

<p># modprobe vboxdrv (Activar módulo)</p>

<p># VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-4.2.16-86992.vbox-extpack (instala un pack de extensiones)</p>

<p># VBoxManage list extpacks  (Ver paquetes de expansión instalados)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[miniflux]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/miniflux/"/>
    <updated>2013-08-24T06:50:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/miniflux</id>
    <content type="html"><![CDATA[<p>Lector RSS instalado en local o en un servidor. Descarga: http://miniflux.net/</p>

<p>Se accede colocando en la barra de direcciones: http://localhost/miniflux (Pedirá datos de conexión)</p>

<p>Atajos de teclado (Primero clicar en unread)</p>

<p>p (Noticia anterior)</p>

<p>n (Noticia siguiente)</p>

<p>m (Marcar como leido)</p>

<p>v (Abrir la noticia original)</p>

<p>o (Desplegar la noticia)</p>

<p>f (Añadir a favoritos)</p>

<p>h (Ir a página precedente)</p>

<p>l (Ir a página anterior)</p>

<p>? (Abrir la ayuda de los atajos de teclado)</p>

<p>q (Cerrar la ayuda)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[expresiones-regulares]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/expresiones-regulares/"/>
    <updated>2013-08-18T18:30:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/expresiones-regulares</id>
    <content type="html"><![CDATA[<p>[regex o patrones]</p>

<p>Buscar cadenas de texto que coinciden con un patrón. Los comandos más usuales que las emplean son grep, find, sed y awk y cada uno con sus pecualiaridades. Para ilustrar dichas expresiones se usa un archivo de texto al que llamo file.</p>

<blockquote><p>$ cat file</p></blockquote>

<pre><code># /etc/fstab: static file system information.

UUID=de1d7793-c3d2-4e03-b79d-1a76905619e6 /               ext4    errors=remount-ro 0       1

UUID=ccc71238-d89d-435b-a4e2-c2d836f800bb none            swap    sw              0       0

/dev/sr0        /media/cdrom0   udf,iso9660 user,noauto     0       0

/dev/sda5       /media/datos    ext4    defaults        0       0

/dev/sda7       /media/fotos    ext3    defaults        0       0

servidor:/home/templix /media/servidor  nfs4 defaults   0       0

### Otras cosas

7592 esto es un número....

la letra z es la última

aminora

mediaplayer es un reproductor

tres cincos hace 555

salta la rana

aRmARIO
</code></pre>

<p>Nota.- Los siguientes ejemplos se basarán en el comando grep. En algunos casos, al corresponder a expresiones regulares extendidas, se usará con el argumento -E. Las expresiones regulares han de ir siempre encerradas con comillas simples.</p>

<pre><code>Literales (Sólo encajan con ellos mismos)

    $ grep 'media' file (mostrara las lineas que contengan "media" incluso "mediaplayer")

    $ grep '\&lt;media\&gt;' file (Sólo mostrará las que contengan exactamente "media")

. [punto] (Cualquier caracter)

    $ grep 'me.ia' file (Misma salida que el anterior)

    $ grep '\&lt;m...a\&gt;' file (Mostrar las de cinco letras que empiecen por "m" y terminen en "a")

    $ grep 'm...a\&gt;' file (Mostrar las lineas que contengan una palabra de cinco letras que empiece por "m" y termine con "a" sin nada a continuación)

[] [Corchetes] (Cualquier caracter de los encerrados entre corchetes)

    $ grep '[wz]' file (Mostras las que contengan "w" o "z")

    $ grep 'sda[0-9]' file (Mostrar las lineas con palabras que empiecen por sda seguidas de un número del 0 al 9)

    $ grep '[0-9]-' file (Buscar lineas que tengan un número seguido de un -)

| [Tuberia] (Especificar varias opciones)

    $ grep -E 'e(xt|rvi)(3|dor)' file (Mostrar las que contengan ext3 y ervidor [servidor])

    $ grep -E 'datos|servidor' file (Mostrar las que tengan las palabras "datos" y "servidor")

- [Guión] (Siempre que no siga a un corchete, especifica un rango)

    $ grep '[0-2]$' file (Lineas que contengan los números 0,1 y 2)

^ [Circunflejo] (Si va precedido de un corchete significa "todo lo que no sea lo que sigue". En los demás casos significa "que la linea empiece por lo que sigue)

    $ grep '^UUID' file (Mostrar las que empiecen por UUID)

    $ grep ':[^/]' file (Las que tengan ":" y no vayan seguidos de una "/")

    $ grep -e '^UUID' -e '^\/' file (Mostrar las que empiecen por UUID y por / . La barra de escape [\] convierte al siguiente caracter en literal)

$ [Dolar] (Indica que el carácter precedente aparece al final de la linea)

    $ grep '0$' file (Muestra las que terminen en 0)

    grep '\.$' file (Muestra las lineas que terminan con un punto)

+ [Signo más] (Una o más veces).

    $ grep -E '\-[0-9]+' file (Buscar las lineas con varios números precedidos por un guión [que ha de escaparse con una barra])

* (Asterisco) (Ninguna o más veces)

    $ grep -E '(fot).*' file (Mostrar las que tengan "fot" y puedan estar o no seguidas de otros caracteres)

? (Interrogante) (Un caracter impreciso)

    $ grep -E 'ext4?' file (indica que el caracter anterior [el 4] puede ser distinto de 4 o puede no existir, o sea que mostrará lineas que contengan ext4, ext3, ext...)

{n,m} [Llaves] (Que el caracter anterior a la llave se muestre las veces que indica entre el número n y el m. Si omitimos m significa como mínimo n veces.

    $ grep '5\{2,5\}.*' file (Que se muestre las lineas que tengan un 5 entre dos y cinco veces. Las llaves se escapan)

    $ grep '5\{3\}.*' file (Muestra las lineas en las que el 5 sale tres veces)

    $ grep '5\{3,\}.*' file (Muestra las lineas en las que el 5 sale como mínimo tres veces)

b (Que lo precedente sea el final de una palabra. Siempre ha de escaparse.)

    $ grep 's\b' file (Muestra las lineas que contienen alguna palabra acabada en "s")
</code></pre>

<p>Otros ejemplos:</p>

<p>Buscar las lineas que no empiecen por #:</p>

<pre><code>$ grep -v '^#' file
</code></pre>

<p>Mostrar lineas que empiecen por # y las que terminen en 0:</p>

<pre><code>$ grep -E '^#|0$' file
</code></pre>

<p>Buscar lineas que tengan : seguidos de una barra que ha de escaparse:</p>

<pre><code>$ grep ':\/' file
</code></pre>

<p>Buscar las lineas que tengan una &#8220;o&#8221; seguida de al menos 3 dígitos:</p>

<pre><code>$ grep 'o[0-9]\{3\}' file
</code></pre>

<p>Buscar lineas que tengan algún dígito:</p>

<pre><code>$ grep '[[:digit:]]' file
</code></pre>

<p>Buscar lineas que empiecen por un caracter alfabético:</p>

<pre><code>$ grep '^[[:alpha:]]' file
</code></pre>

<p>Buscar lineas que tengan &#8220;ext&#8221; usando parentesis:</p>

<pre><code>$ grep '\(ext\)' file
</code></pre>

<p>Buscar lineas que que tengan un número entre 2 y 9 al menos una vez y esten precedidos de espacio, tabulación o salto de linea:</p>

<pre><code>$grep -E '\s[2-9]+' file
</code></pre>

<p>Mostrar lineas con entre 3 y 6 letras mayúsculas:</p>

<pre><code>$ grep '[A-Z]\{3,6\}' file
</code></pre>

<p>Algunos casos comentados:</p>

<p>1.-</p>

<blockquote><p>$ touch nada.8.sh.5</p></blockquote>

<pre><code>$ ls | grep '.*.[6-8].*.[1-6]'
</code></pre>

<p>Nota.- Cuando se usen con el comando grep han de ir siempre encerradas con comillas simples.</p>

<pre><code>.* (Cero o más caracteres. El punto inicial es imprescindible)

.[6-8] (Seguidos de un punto y un número que contenga entre el 6 y el 8)

.* (seguido un punto y cero o más caracteres)

.[1-6] (y terminado con un punto seguido de un número que contenga del 1 al 6)
</code></pre>

<p>Nota.- Los corchetes NO indican UN número de un dígito sinó un número que contenga el margen especificado [6,7,8 para el primer corchete y 1,2,3,4,5,6 para el segundo, por tanto también listaría el archivo nada.0357.sh.389 pero no nada.0352.sh.389 porque el número 0352 no contiene ninguno del margen especificado.</p>

<p>Nótese la diferencia en la expresión regular usando el comando mv [sin comillas simples y sin el punto delante del primer asterisco]:</p>

<pre><code>$ mv *.[6-8].*.[1-6] prueba
</code></pre>

<p>2.-</p>

<p>Buscar en el directorio scripts, todos los que sean de bash:</p>

<pre><code>$ grep -i '^#.*bash' scripts/*

    ^#.*bash (Que el primer caracter de la primera linea sea # y que despues de cero o más caracteres aparezca la palabra bash)

    $ grep -i '$.*bash' scripts

    '$.*bash' (En todos los ficheros del directorio, que al final de la primera linea y despues de cero o más caracteres apararezca la palabra bash)
</code></pre>

<p>3.-</p>

<p>Ver los correos electrónicos completos de una lista en la que los hay incompletos:</p>

<blockquote><p>$ cat lista</p></blockquote>

<pre><code>juangomez@gmail.com

clarafuentes@

@yahoo.es

ant.rodri-perez@hotmail.nadadenada

pedro@blog.empresa.travel
</code></pre>

<hr />

<pre><code>$ grep -E '^[a-zA-Z._-]+@[a-zA-Z0-9.]+\.[a-z]+$' lista

    ^[a-zA-Z._-]+ (Que empiece con una palabra que pueda contener mayúsculas, minúsculas, puntos, guiones o guiones bajos)

    @ (Seguida de una @ literal)

    [a-zA-Z0-9.]+ (A continuación varios caracteres que pueden ser mayúsculas, minúsculas, puntos o números)

    \. (Después un punto literal)

    [a-z]+$ (Para terminar, uno o varios caracteres en minúscula)

$ grep -E '^[a-zA-Z._-]+@.[a-zA-Z.0-9]+\.[[:alpha:]]{2,3}$' lista (Sólo mostrará las que terrminen con 2 o 3 letras)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sed]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/sed/"/>
    <updated>2013-08-18T17:10:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/sed</id>
    <content type="html"><![CDATA[<p>Permite borrar líneas, registros o sustituir cadenas de caracteres dentro de las líneas.</p>

<p>Archivo base para ejemplo (Empleado &#8211; Precio/hora &#8211; Horas trabajadas – Cómo las cobra):</p>

<pre><code>$ cat lista 

Juan Gomez 6 10 banco 

Clara Fuentes 7 12 banco 

Antonio Cano 6 13 metálico 

José Bueno 7 0 banco 

Matías Crespo 5 8 metálico 

Isabel Ruiz 7 0 metálico 

María Monzón 9 16 metálico
</code></pre>

<p>Mostrar la linea 4 del fichero:</p>

<pre><code>$ sed -n 4p lista
</code></pre>

<p>Mostrar la 4ª y la 5ª:</p>

<pre><code>$ sed -n 4,5p lista
</code></pre>

<p>Mostrar de la 3ª al final del fichero:</p>

<pre><code>$ sed -n '4,$p' lista
</code></pre>

<p>Mostrar desde la primera linea que empiece por “Ant” hasta el final:</p>

<pre><code>$ sed -n '/^\Ant/,$p' lista
</code></pre>

<p>Mostrar sólo los parrafos desde “Clara” hasta “Bueno”:</p>

<pre><code>$ sed -n '/Clara/,/Bueno/p' lista
</code></pre>

<p>Mostrar cada linea a doble espacio:</p>

<pre><code>$ sed G lista
</code></pre>

<p>Mostrar las lineas que cumplen el patrón “Ju” en alguno de sus campos:</p>

<pre><code>$  sed -n '/Ju/p' lista
</code></pre>

<p>Borrar la 4ª linea del fichero:</p>

<pre><code>$  sed '4d' lista
</code></pre>

<p>Borrar la última linea del fichero:</p>

<pre><code>$  sed -e \$d lista
</code></pre>

<p>Lo mismo:</p>

<pre><code>$ sed '$d' lista
</code></pre>

<p>Borrar las lineas que empiecen por &#8220;J&#8221;:</p>

<pre><code>$ sed -e '/J/d' lista
</code></pre>

<p>Borrar la segunda linea</p>

<pre><code>$ sed '2d' lista
</code></pre>

<p>Borrar la 1ª y la 2ª:</p>

<pre><code>$  sed '1,2d' lista
</code></pre>

<p>Borrar desde la primera linea que empiece por &#8220;Ant&#8221; hasta el final:</p>

<pre><code>$ sed -e '/^\Ant/,$d' lista
</code></pre>

<p>Borrar desde la 2 linea hasta la que tenga &#8220;Ruiz&#8221;:</p>

<pre><code>$ sed '2,/Ruiz/d' lista
</code></pre>

<p>Borrar las lineas en blanco de un archivo (en &#8220;lista&#8221; no procede):</p>

<pre><code>$  sed '/^$/d lista
</code></pre>

<p>Cambiar &#8220;metálico&#8221; por &#8220;gratis&#8221; excepto en la 3 linea:</p>

<pre><code>$ sed '3!s/metálico/gratis/' lista
</code></pre>

<p>Cambiar &#8220;met&#8221; por &#8220;tem&#8221; en las lineas que no tengan &#8220;Cano&#8221;:</p>

<pre><code>$ sed '/Cano/!s/met/tem/' lista
</code></pre>

<p>Cambiar campos (banco por cheque):</p>

<pre><code>$ sed 's/banco/cheque/' lista
</code></pre>

<p>Cambiar las &#8220;J&#8221; y la &#8220;C&#8221; mayúsculas por minúsculas:</p>

<pre><code>$ sed 'y/J-C/j-c/' lista
</code></pre>

<p>Substituye las vocales por &#8220;u&#8221;:</p>

<pre><code>$ sed -e "s/[aeio]/u/g" lista
</code></pre>

<p>Substituir los espacios por tabulaciones:</p>

<pre><code>$ sed -e 's/ /\t/g' lista
</code></pre>

<p>Alinear al centro:</p>

<pre><code>$ sed -e :a -e 's/^.\{1,77\}$/ &amp;/;ta' -e 's/\( *\)\1/\1/' lista
</code></pre>

<p>Todas las opciones pueden usarse como tubería substituyendo &#8220;lista&#8221; por “cat lista |”:</p>

<pre><code>$ cat lista | sed -n '4,$p'
</code></pre>

<p>Otros ejemplos:</p>

<p>Mostrar lineas no comentadas de un archivo:</p>

<pre><code>$ sed -e '/^#/d' /etc/fstab
</code></pre>

<p>Substituir &#8220;foto&#8221; por &#8220;FOTO&#8221; en todo los archivos del directorio:</p>

<pre><code>$ ls * | sed -e 'p;s/foto/FOTO/' | xargs -n2 mv
</code></pre>

<p>Cambiar “Juan” por “Pedro” en todos los archivos .txt del presente directorio:</p>

<pre><code>$ sed -i 's/Juan/Pedro/g' *.txt
</code></pre>

<p>Mostrar sólo las lineas con 4 dígitos seguidos:</p>

<pre><code>$ sed '/[0-9]\{4\}/p' archivo
</code></pre>

<p>Borrar todos los espacios delante de cada linea:</p>

<pre><code>$sed 's/^[ ^t]*//' archivo
</code></pre>

<p>Borrar todos los espacios detras de cada linea:</p>

<pre><code>$ sed 's/[ ^t]*$//' archivo
</code></pre>

<p>Borrar todos los espacios delante y detras de cada linea:</p>

<pre><code>$ sed 's/^[ ^t]*//;s/[ ^]*$//' archivo
</code></pre>

<p>Cambiar los números 3333 por 3.333. El parámetro -r sirva para activar las expresiones regulares extendidas de sed:</p>

<pre><code>$ sed -r "s/\&lt;(reg|exp)[a-z]+/\U&amp;/g"
</code></pre>

<p>Contar lineas de un archivo [emulador de wc -l]:</p>

<pre><code>sed -n '$=' lista
</code></pre>

<p>Insertar 5 espacios en blanco delante de cada linea:</p>

<pre><code>$ sed 's/^/     /' lista
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cat]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/cat/"/>
    <updated>2013-08-17T08:06:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/cat</id>
    <content type="html"><![CDATA[<p>Muestra el archivo especificado</p>

<blockquote><p>$ cat -n .bashrc (Numera las lineas de salida)</p>

<p>$ cat -b .bashrc (Sólo numera las lineas no vacias)</p>

<p>$ cat -s .bashrc (Suprime varias lineas vacias por una sola)</p>

<p>$ cat file{0..4} > archivo (Junta file1, file2, file3 y file4 en un sólo archivo)</p>

<p>$ cat file1 file2 file3 file4 archivo (Lo mismo)</p></blockquote>

<p>Algunos archivos importantes usando cat:</p>

<blockquote><p>$ cat /proc/cpuinfo       (informacion del procesador)</p>

<p>$ cat /var/log/debug | less     (inf del sistema)</p>

<p>$ cat /var/log/user.log | less      (inf del usuario)</p>

<p>$ cat /var/log/messages | less  (mensajes del sistema)</p>

<p>$ cat /var/log/syslog | less        (registro de actividad)</p>

<p>$ cat /var/log/auth.log | less       (accesos al sistema)</p>

<p>$ cat /proc/meminfo    (inf sobre la memoria)</p>

<p>$ cat /proc/devices     (inf sobre los dispositivos en uso)</p>

<p>$ cat /proc/mounts    (inf de las particiones y recursos montados)</p>

<p>$ cat /proc/filesystems     (los filesystems habilitados en el kernel)</p>

<p>$ cat /proc/version        (version del nucleo y compilador empleado)</p>

<p>$ cat &lt; /sys/class/net/eth1/address (Muestra la dirección MAC)</p>

<p>$ cat /etc/services | grep http (Visualizar puertos por los que corre http)</p>

<p>$ cat /dev/urandom | tr -dc &#8216;a-zA-Z0-9&#8217; | fold -w 10 | sed 1q (generar una contraseña de 10 caracteres)</p>

<p>$ cat listado.txt / | sed -e :a -e &#8216;s/<sup>.{1,20}$/&amp;_/;ta&#8217;</sup>  (coloca los nombres del listado uno detrás de otro y completa hasta 20 caracteres [1,10] con un guión bajo [&amp;_])</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[grep]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/grep/"/>
    <updated>2013-08-11T11:01:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/grep</id>
    <content type="html"><![CDATA[<p>Lee la entrada estándar o un archivo e imprime las líneas que cumplan el patrón. Ver expresiones regulares</p>

<blockquote><p>$ grep -c &#8216;UUID&#8217; /etc/fstab (Muestra sólo el número de líneas que coinciden con el patron)</p>

<p>$ grep -n &#8216;UUID&#8217; /etc/fstab (Muestra el número de lineas y su contenido)</p>

<p>$ grep -i &#8216;uuid&#8217; /etc/fstab (No distingue entre mayusculas ni minúsculas)</p>

<p>$ grep -w &#8216;fstab&#8217; /etc/fstab (Ha de coincidir el patron completo, no una parte)</p>

<p>$ grep -v &#8216;fstab&#8217; /etc/fstab (Muestra las que no tienen el patrón)</p>

<p>$ grep -E &#8216;fstab|dev&#8217; /etc/fstab (Mostras las lineas que contengan dos palabras. Requiere habilitar las expresiones regulares extendidas [ver])</p>

<p>$ grep -e &#8216;fstab&#8217; -e &#8216;dev&#8217; /etc/fstab (Forma de mostrar las lineas que contengan dos palabras sin habilitar las expresiones regualres extendidas)</p>

<p>$ grep -r &#8216;fstab&#8217; /etc (Buscar una palabra de un directorio y los subdirectorios)</p>

<p>$ grep -l -r &#8216;fstab&#8217; /etc (Sólo mostrar los archivos que contienen la palabra en el directorio y los subdirectorios)</p>

<p>$ grep -n &#8216;fstab&#8217; /etc/fstab (Mostrar la linea y el número de linea)</p>

<p>$ grep -A 2 &#8216;swap&#8217; /etc/fstab (Mostrar la línea y las 2 siguientes)</p></blockquote>

<p>Otras opciones:</p>

<blockquote><p>$ grep –Fx –f archivo1 archivo2 (Mostrar líneas que aparezcan en dos archivos)</p>

<p># grep -i -a -B35 -A90 &#8216;palabreja&#8217; /dev/sda1 > recup.txt (recuperar un archivo borrado con rm que incluye la palabra “palabreja” y su tamaño estimado: [-B50] 35 lineas anteriores a “palabreja” y [-A90] 90 lineas posteriores. Especificar partición y archivo de recuperación)</p>

<p>$ grep cups /etc/services (Conocer el puerto por el que corre un servicio)</p>

<p>$ grep 631 /etc/services (Conocer el servicio por el que corre un puerto)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/vim/"/>
    <updated>2013-08-11T08:24:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/vim</id>
    <content type="html"><![CDATA[<p>Editor</p>

<blockquote><p>$ vim fichero (Abrir un fichero)</p>

<p>$ vim -x fichero (Poner contraseña a un fichero)</p>

<p>$ vimtutor (Lanzar un tutorial elemental de vim)</p></blockquote>

<p>Algunas teclas para no morir en el intento:</p>

<p>Teclas de modo:</p>

<pre><code>i (Entrar en modo edición)

esc (Salir modo edición y entrar en modo comando)
</code></pre>

<p>Movimientos básicos con el cursor:</p>

<pre><code>k (Arriba)

j (Abajo)

h (Derecha)

l (Izquierda)

b (Ir al principio de la palabra anterior)

w (Ir al principio de la palabra posterior)

e (Ir a la última letra de la palabra anterior)

$ (Ir al final de la linea)

0 (Ir al principio de la linea)

ge (Ir a la última letra de la palabra posterior)

20G (Ir a la linea 20)

gg (Ir al principio del ficherol)

G (Ir al final del fichero)

{ (Pasar al siguiente párrafo)

} (Pasar al anterior párrafo)
</code></pre>

<p>Entrar y salir del vim:</p>

<pre><code>:q! (Salir sin guardar)

:w (Guardar cambios sin salir)

:x (Guardar cambios y salir)

:w fichero (Guardar en un fichero distinto y seguir)

:e fichero2 (Cierra el fichero actual y abre fichero2)

:e . (Abre un navegador de ficheros en el directorio actual)
</code></pre>

<p>Cortar, Copiar y Pegar.</p>

<p>Con los cursores nos desplazamos por el fichero hasta llegar al inicio</p>

<p>de la zona que queremos copiar. Salimos del modo edición (si estamos en él)</p>

<p>pulsando esc y</p>

<pre><code>v (Entra en modo visual y con los cursores seleccionar lo que queremos copiar)

c (Para cortar)

y (Para copiar)
</code></pre>

<p>Aparecerá debajo un mensaje informando de las lineas copiadas. Nos desplazamos</p>

<p>donde queramos pegar el fragmento y en modo normal:</p>

<pre><code>p (Para pegar)
</code></pre>

<p>Para buscar una palabra, escribimos en modo normal:</p>

<pre><code>/palabra
</code></pre>

<p>Resalta la palabra encontrada o avisa de que no existe</p>

<pre><code>n (Buscarla hacia delante)

N (Buscarla hacia atrás))

Para sustituir un texto debemos escribir la secuencia:

:%s/texto1/texto2/g
</code></pre>

<p>donde texto1 es el texto a buscar y texto2 el</p>

<p>texto que será reemplazado. la g final sustituirá todas las coincidencias</p>

<p>que encuentre en todo el fichero</p>

<p>Más operaciones de texto:</p>

<pre><code>dd (Suprimir línea actual gaurdarla en el buffer. "p" para pegar)

u (Deshacer el último cambio en el fichero)

Ctrl + r (Rehacer el último cambio en el fichero)

:25 (Ir a la linea 25)

o (Añadir linea en blanco despues de la linea y entrar en edición)

O (Añadir linea en blanco antes de la linea y entrar en edición)
</code></pre>

<p>Ejecución de comandos durante la edición:</p>

<pre><code>:!ls (Muestra listado del directorio y con intro regresa al editor)

:shell (Pausa la edición y entra en modo shell)

:exit (Termina el modo shell y regresa a la edición)

Ctrl z (Suspende vim y entra en la shell. Con fg vuelve a vim)
</code></pre>

<p>Dividir la pantalla:</p>

<pre><code>:split fichero (Abrir un archivo en una division horizontal de la ventana)

:vsplit fichero (Abrir un archivo en una division vertical de la ventana)

Ctrl + w + flecha cursor (Moverse entre las distintas divisiones de una ventana)

:new (Crea una nueva ventana vacia)

:r archivo (Insertar "archivo" donde esté el cursor)
</code></pre>

<p>Opciones con las ventanas:</p>

<p>Pulsar Ctrl + w y a continuacion alguna de las siguientes opciones:</p>

<pre><code>n (crear nueva ventana)

H (mover ventana hacia la izquierda)

J (mover ventana hacia abajo)

K (mover ventana hacia arriba)

L (mover ventana hacia la derecha)

h (ir a la ventana de la izquierda)

j (ir a la ventana de abajo)

k (ir a la ventana de arriba)

l (ir a la ventana de la derecha)

t (ir a la ventana de más arriba)

b (ir a la ventana de más abajo)

w (pasar a la siguiente ventana)

+ (aumentar el tamaño de la ventana en 1 linea)

- (disminuir el tamaño de la ventana en 1 linea)
</code></pre>

<p>Para crear ventanas de anchura especifica:</p>

<pre><code>10 Ctrl w _ (Crear nueva  de 10 lineas de ancho))

5 Ctrl w + (Aumenta 5 lineas la ventana actual)
</code></pre>

<p>Crear pestañas:</p>

<pre><code>:tabnew fichero      (Abrir un archivo en una nueva pestaña)

gt           (Moverse entre pestañas)

:close  (Cierra la ventana o la subdivision de la ventana)

:only   (Cierra todas las ventanas menos la actual)
</code></pre>

<p>Imprimir:</p>

<pre><code>:ha (Imprimir todo el documento)

:ha &gt; archivo.pdf (Imprimir a pdf)
</code></pre>

<p>Guardar sesiones:</p>

<pre><code>:mksession! archivo (Guarda la sesión actual en "archivo")

:source archivo (Restablece una sesión anterior)
</code></pre>

<p>Crear atajos de teclado [mapping]. Colocar en ~/.vimrc:</p>

<pre><code>map ,p :tabprevious (Ir a la pestaña anterior pulsando ,p
</code></pre>

<p>algunos ajustes que pueden implementarse, bien durante la edición [en modo normal] o</p>

<p>permanentemente en ~/.vimrc [en este caso quitar los dos puntos iniciales]:</p>

<pre><code>:set ts=4 (Fija los tabulados a 4 espacios)

:set sw=4 (Fija los indentados a 4 espacios)

:set number/nonumber (Activa/desactiva el numerado de lineas)

:set backup/nobackup (Activa/desactiva la copia de seguridad automática)

:set directory=dir (fija la carpeta donde se harán las copias)  

:syntax on/off (Activa/desactiva el resaltado de sintaxis)

:color darkblue (Cambia el color del vim [evening, desert, elflord, koehler, morning..])

:set cindent (Activa indentado automático)

:set mouse=a/mouse= (Activa/desactiva el uso del ratón)

:set paste/nopaste (Activa/desactiva el modo pegar texto literalmente)

:spell (Activa el corrector ortográfico)

:setlocal spell spelllang=es (Activa el idioma español del corrector ortográfico)

:set spellfile=~/.vimdic  (Fija diccionario de palabras desconocidas)
</code></pre>

<p>1.-</p>

<p>Poner un esquema de colores:</p>

<blockquote><p>$ mkdir -p ~/.vim/colors (Crear el directorio caso de no existir)</p></blockquote>

<p>Entrar en <a href="http://www.vim.org/scripts/script_search_results.php">http://www.vim.org/scripts/script_search_results.php</a> y escoger los deseados y copiarlos en el directorio creado. Despues crear [si no existe] el fichero:</p>

<blockquote><p>$ vim .vimrc</p></blockquote>

<p>Y pegar el texto:</p>

<pre><code>syntax on

colorscheme oceandeep
</code></pre>

<p>En colorscheme poner el escogido, en este caso oceandeep. Guardar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[interfaces]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/interfaces/"/>
    <updated>2013-08-04T18:34:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/interfaces</id>
    <content type="html"><![CDATA[<p>Archivo de configuración de la red en distros debian.</p>

<p>1.-</p>

<p>Con IP dinámica:</p>

<p>Colocar en el archivo las lineas:</p>

<pre><code>auto eth0

iface eth0 inet dhcp
</code></pre>

<p>2.-</p>

<p>Con IP fija</p>

<p>Colocar en el archivo las lineas:</p>

<pre><code>auto eth0

iface eth0 inet static

address 192.168.1.10

gateway 192.168.1.1

netmask 255.255.255.0

broadcast 192.168.1.255
</code></pre>

<p>Reiniciar el servicio:</p>

<blockquote><p># ifdown eth0</p>

<p># ifup eth0</p></blockquote>

<p>Nota.- Solo modificandolo en network-manager no funciona.</p>

<p>3.-</p>

<p>Creación de una segunda dirección IP virtual.</p>

<p>Añadir las siguientes lineas a las de la IP fija:</p>

<pre><code>auto eth0:1

iface eth0:1 inet static

address 192.168.0.15

netmask 255.255.255.0

broadcast 192.168.0.255

gateway 192.168.0.1
</code></pre>

<p>Nota.- La instalación de nerwork-manager o wicd para la gestión de redes implica comentar las modificaciones de este archivo o en, en el caso de network-manager, editar:</p>

<blockquote><p># nano  /etc/NetworkManager/NetworkManager.conf</p></blockquote>

<p>Y modificar la linea:</p>

<p>[ifupdown]</p>

<p>managed=true</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rkhunter]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/rkhunter/"/>
    <updated>2013-08-04T17:37:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/rkhunter</id>
    <content type="html"><![CDATA[<p>Buscador de rootkits instalados en el sistema</p>

<blockquote><p># rkhunter &#8211;update  (Recargar la base de datos)</p>

<p># rkhunter -c  (iniciar la aplicación)</p>

<p># rkhunter -c -sk (iniciar la aplicación sin pedir confirmación para proseguir)</p>

<p># rkhunter &#8211;list (Ver las opciones)</p>

<p># rkhunter &#8211;enable group_accounts,system_commands  (Solo chequear estas dos opciones)</p>

<p># rkhunter &#8211;disable shared_libs  (Descartar esta opción del chequeo)</p>

<p># cat /var/log/rkhunter.log | grep Warning (Visualizar los &#8220;Warnings&#8221;)</p></blockquote>

<p>1.-</p>

<p>Para solucionar el error: Warning: Hidden directory found: /etc/.java</p>

<blockquote><p># nano /etc/rkhunter.conf</p></blockquote>

<p>Y descomentar la linea:</p>

<p>ALLOWHIDDENDIR=&#8221;/etc/.java&#8221;</p>

<p>Nota.- para errores similares con archivos ocultos [/dev/.udev, /dev/.initramfs&#8230; ], descomentar la linea correspondiente.</p>

<p>2.-</p>

<p>Para errores de versión de ciertas aplicaciones [Warning: Application &#8216;gpg&#8217;, version &#8230;.]</p>

<blockquote><p># nano /etc/rkhunter.conf</p></blockquote>

<p>Añadir apps a la linea:</p>

<p>DISABLE_TESTS=&#8221;suspscan hidden_procs deleted_files packet_cap_apps apps&#8221;</p>

<p>3.-</p>

<p>Para suprimir falsa advertencias sobre posibles interfaces promiscuos [P.ejemplo de un servidor virtual], añadir &#8220;promisc&#8221; a la opción DISABLE_TESTS:</p>

<p>DISABLE_TESTS=&#8221;suspscan hidden_procs deleted_files packet_cap_apps apps promisc&#8221;</p>

<p>4.-</p>

<p>Para que los valores se obtengan del gestor de paquetes correspondiente:ç</p>

<blockquote><p># nano /etc/rkhunter.conf</p></blockquote>

<p>Y descomentar y modificar la linea PKGMGR:</p>

<p>PKGMGR=DPKG</p>

<p>Nota.- Otras opciones para distros no debian o para desactivar la opción: RPM, BSD,SOLARIS y NONE</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/octopress/"/>
    <updated>2013-08-04T17:04:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/octopress</id>
    <content type="html"><![CDATA[<p>[git-core curl zlib1g-dev libssl-dev build-essential libreadline-dev libaml]</p>

<p>CMS para gestión de contenido web que genera automaticamente los archivos html, css y javascript a partir de archivos de texto plano formateado en markdown (Ver) y sin utilizar base de datos.</p>

<p>Pasos previos para su instalación en Debian y derivados:</p>

<blockquote><p>$ curl -L https://get.rvm.io | bash -s stable –ruby</p>

<p>$ source ~/.rvm/scripts/rvm</p>

<p>$ rvm install 1.9.3</p>

<p>$ rvm use 1.9.3</p>

<p>$ rvm rubygems latest</p></blockquote>

<p>En Arch (requiere el paquete curl):</p>

<blockquote><p>$ curl -L get.rvm.io | bash -s stable</p>

<p>$ source ~/.rvm/scripts/rvm</p>

<p>$ rvm requirements</p>

<p>$ rvm install 1.9.3</p>

<p>$ rvm use 1.9.3 –default</p>

<p>$ rvm rubygems current</p></blockquote>

<p>Instalación de octopress:</p>

<blockquote><p>$ git clone git://github.com/imathis/octopress.git octopress</p>

<p>$ cd octopress</p>

<p>$ gem install bundler</p>

<p>$ bundle install</p>

<p>$ rake install</p></blockquote>

<p>Generar contenido (Ver markdown):</p>

<blockquote><p>$ cd octopress</p>

<p>$ rake new_post[“nombre_del_nuevo_post”]</p></blockquote>

<p>Crea un archivo en la carpeta /home/usuario/octopress/source/_posts/ con el siguiente encabezado:</p>

<pre><code>-- 

layout: post 

title: “Nombre_del_post” 

date: 2012-10-17 19:27 

comments: true 

categories: 

-- 
</code></pre>

<p>Título del post [title], fecha [date], si permitimos o no comentarios [true/false] y catagorias [categories] entre corchetes y separadas por comas [comandos, redes]</p>

<p>A continuación de este encabezado introducimos la entrada del post. Al finalizar la entrada para generar el archivo en la carpeta “public”:</p>

<blockquote><p>$ rake generate</p></blockquote>

<p>Para visualizarlo en local [http://localhost:4000] lanzar:</p>

<blockquote><p>$ rake preview</p></blockquote>

<p>Y no cerrar la terminal. Para matar la previsualización pulsar Ctrl +c</p>

<p>La configuración del titulo del blog, subtítulo, autor, etc. Algunos parámetros a especificar:</p>

<blockquote><p>$ nano _config.yml</p></blockquote>

<pre><code>url: http://crontux.homelinux.com

title: TRACTATUS ELEMENTALIS

subtitle: Apuntes sobre Bash. GNU/Linux a tope.

author: lapipaplena

simple_search: http://google.com/search

description: Orgasmos con Gnu/linux

date_format: "%d-%m-%Y"

search_text: "Buscar"

paginate: 10 

pagination_dir: blog 

recent_posts: 10

excerpt_link: "Leer m&amp;aacute;s &amp;rarr;"

code_dir: downloads/scripts

# Twitter

twitter_user: templix

twitter_tweet_count: 6

twitter_show_replies: false

twitter_follow_button: true

twitter_show_follower_count: false

twitter_tweet_button: true

# Google Plus Profile

# Hidden: No visible button, just add author information to search results

googleplus_user: 107431970267257491799

googleplus_hidden: false
</code></pre>

<p>Para la creación de nuevas páginas:</p>

<blockquote><p>$ rake new_page[previa]</p></blockquote>

<p>Si queremos que la nueva página salga en una pestaña &#8220;previa&#8221; en la cabecera:</p>

<blockquote><p>$ nano source/_includes/custom/navigation.html</p></blockquote>

<pre><code>&lt;li&gt;&lt;a href="https://tractatuslapipaplena.herokuapp.com/previa"&gt;Previa&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>En este archivo tambien se pueden personalizar los nombres de las pestañas. Si queremos una pestaña con un enlace a una web:</p>

<blockquote><p>$ nano source/_includes/custom/navigation.html</p></blockquote>

<pre><code>&lt;li&gt;&lt;a href="http://www.lapipaplena.net"&gt;Web&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>1.-</p>

<p>Crear un apartado &#8220;Sobre mi&#8221; en el sidebar con una imagen web en el centro de la linea:</p>

<blockquote><p>$ nano source/_includes/custom/asides/about.html</p></blockquote>

<p>Con el siguiente contenido:</p>

<pre><code>&lt;section&gt;

  &lt;h1&gt;Sobre mi&lt;/h1&gt;

  &lt;center&gt;

  &lt;img src="https://lh5.googleusercontent.com/-WyGxndIWvo4/AAAAAAAAAAI/AAAAAAAACRI/L_iOIAgh69A/s250-c/photo.jpg" width="125" height="125"&gt;

  &lt;/center&gt;

  &lt;p&gt;Cualquier texto explicativo&lt;/p&gt;

&lt;/section&gt;
</code></pre>

<p>Luego añadir el achivo en:</p>

<blockquote><p>$ nano _config.yml</p></blockquote>

<p>en la linea:</p>

<pre><code>default_asides: [asides/num_entradas.html, asides/recent_posts.html, custom/asides/about.html]
</code></pre>

<p>2.-</p>

<p>Para mostrar archivo con código [script.sh, por ejemplo] se ha de colocar en texto plano en la ruta especificada en _config.yml, linea code_dir [downloads/scripts/ en este caso] y si lo queremos en la barra de navegación:</p>

<blockquote><p>$ nano source/_includes/custom/navigation.html</p></blockquote>

<p>Y añadir la linea:</p>

<pre><code>&lt;li&gt;&lt;a href="https://tractatuslapipaplena.herokuapp.com/scripts"&gt;Scripts&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>Si lo colocamos en un post, llamarlo con:</p>

<pre><code>% include_code script.sh lang:bash script.sh %
</code></pre>

<p>Al principio de la linea antes del % colocar una llave abierta y al final despues del % la cerrada. Se han omitido porque Octopress lo interpreta.</p>

<p>Nota.- Despues de cualquier modificación en las entradas o en los archivos de configuración lanzar:</p>

<blockquote><p>$ rake generate</p></blockquote>

<p>3.-</p>

<p>Instalar un nuevo tema:</p>

<blockquote><p>$ git clone git://github.com/tommy351/Octopress-Theme-Slash.git .themes/slash</p>

<p>$ rake install[&#8216;slash&#8217;]</p>

<p>$ rake generate</p></blockquote>

<p>4.-</p>

<p>Para que las busquedas se realicen en el mismo site y no en la web:</p>

<blockquote><p>$ nano _config.yml</p></blockquote>

<p>Modificar la linea:</p>

<pre><code>simple_search: http://www.google.com/search?q=site%3Awww.lapipaplena.net&amp;q=
</code></pre>

<p>5.-</p>

<p>Quitar la fecha del post en la url:</p>

<blockquote><p>$ nano _config.yml</p></blockquote>

<p>Y dejar la linea:</p>

<p>permalink: /blog/:title/</p>

<p>Con lo que si se borran entradas antiguas para substituirlas por otras nueva con el mismo nombre, la indexación de google no se pierde.</p>

<p>6.-</p>

<p>Colocar en el sidebar un blogroll</p>

<p>Crear el fichero:</p>

<blockquote><p>$ nano source/_includes/asides/blog_roll.html</p></blockquote>

<p>Con el siguiente contenido, adaptado según gustos:</p>

<pre><code>&lt;section&gt;

  &lt;h1&gt;Blogs útiles&lt;/h1&gt;

  &lt;ul&gt;

      &lt;li&gt;&lt;a href="http://distrowatch.com"&gt;distrowatch&lt;/a&gt;&lt;/li&gt;

      &lt;li&gt;&lt;a href="http://es.wikipedia.org/wiki/Lista_de_n%C3%BAmeros_de_puerto"&gt;Listado de puertos&lt;/a&gt;&lt;/li&gt;

      &lt;li&gt;&lt;a href="http://livecdlist.com/"&gt;LiveCDs&lt;/a&gt;&lt;/li&gt;

   &lt;/ul&gt;

&lt;/section&gt;
</code></pre>

<p>Editar:</p>

<blockquote><p>$nano _config.yml</p></blockquote>

<p>Y añadir asides/blog_roll.html a la linea:</p>

<pre><code>default_asides: [asides/recent_posts.html, asides/twitter.html, asides/blog_roll.html]
</code></pre>

<p>7.-</p>

<p>Modificar el &#8220;Posted by&#8221; por &#8220;Escrito por&#8221;</p>

<blockquote><p>$ nano source/_includes/post/author.html</p></blockquote>

<p>Modificar la linea que empieza por &#8220;if author&#8221;:</p>

<pre><code>&lt;span class="byline author vcard"&gt;Escrito por &lt;span class="fn"&gt;&lt;/span&gt;&lt;/span&gt;
</code></pre>

<p>8.-</p>

<p>Mostrar datos del visitante de la web:</p>

<p>Crear:</p>

<blockquote><p>$ nano octopress/source/_includes/asides/ip_visitante.html</p></blockquote>

<p>Con el siguiente contenido:</p>

<pre><code>&lt;section&gt;

        &lt;h1&gt;Datos visitante&lt;/h1&gt;

        &lt;script type="text/javascript" src="http://boastology.com/tools/ip2c/?im=1&amp;cn=1&amp;ip=1"&gt;&lt;/script&gt;

&lt;/section&gt;
</code></pre>

<p>Las opciones de la url, aunque no siempre funcionan correctamente, son:</p>

<pre><code>im=1 (1 mostrar bandera, 0 no mostrar)

cn=1 (1 mostrar nombre país, 0 no mostrar)

ip=1 (1 IP, 0 no mostrar)
</code></pre>

<blockquote><p>$ nano _config.yml</p></blockquote>

<p>Y añadir a la linea default_asides el archivo según el lugar que queremos que ocupe en el sidebar [en tercer lugar en este ejemplo]:</p>

<pre><code>default_asides: [asides/num_entradas.html, asides/recent_posts.html, asides/ip_visitante.html]
</code></pre>

<p>9.-</p>

<p>Para especificar una imagen en octopress, la sintaxis es:</p>

<pre><code>&lt;img class="center" src="http://www.lapipaplena.net/wp-content/uploads/2011/06/lapipaplena.png" title="La_Pipa_Plena" &gt;
</code></pre>

<p>Con medidas determinadas y en la derecha:</p>

<pre><code>&lt;img class="right" src="http://www.lapipaplena.net/wp-content/uploads/2011/06/lapipaplena.png" width="150" height="250" title="La_Pipa_Plena" &gt;
</code></pre>

<p>10.-</p>

<p>Modificación de colores. Por ejemplo la barra de navegación:</p>

<blockquote><p>$ nano sass/custom/_colors.scss</p></blockquote>

<p>Buscar la variable $nav-bg, descomentarla (quitarle las dos //) y colocar el código de color escogido:</p>

<pre><code>//$subtitle-color: lighten($header-bg, 58);

$nav-bg: desaturate(lighten(#C68800, 18), 5);

//$nav-bg-front: image-url('noise.png');
</code></pre>

<p>11.-</p>

<p>Colocar una imagen en el header que previamente habremos copiado en el directorio public/images:</p>

<blockquote><p>$ nano source/stylesheets/screen.css</p></blockquote>

<p>Y pegamos al final:</p>

<pre><code>body &gt; header {

    background-image: url("/images/tux_gnu.png");

    background-color: #333;

    background-position: right center;

    background-repeat: no-repeat;

}
</code></pre>

<p>12.-</p>

<p>Quitar la opción RSS de la barra de navegación:</p>

<blockquote><p>$ nano source/_includes/navigation.html</p></blockquote>

<p>Y borrarlo en la linea &#8220;site.subscribe_rss&#8221;</p>

<p>13.-</p>

<p>Centrar el título del blog:</p>

<blockquote><p>$ nano source/_includes/custom/header.html</p></blockquote>

<p>Y dejarlo:</p>

<pre><code>&lt;hgroup&gt;

  &lt;div align=center&gt;

  &lt;h1&gt;&lt;a href="https://tractatuslapipaplena.herokuapp.com/"&gt;TRACTATUS ELEMENTALIS&lt;/a&gt;&lt;/h1&gt;



    &lt;h2&gt;Apuntes sobre bash. Orgasmos con la terminal.&lt;/h2&gt;

  &lt;/div&gt;



&lt;/hgroup&gt;
</code></pre>

<p>13.-</p>

<p>Resolver el error en el rake preview &#8220;WARN  TCPServer Error: Address already in use - bind(2)&#8221;</p>

<blockquote><p>$ lsof -i4000 (Para conocer el pid del proceso)</p>

<p>$ kill -9 PID</p></blockquote>

<p>14.-</p>

<p>Llevar un archivo de las visita al site:</p>

<p>Crear en la carpeta web el archivo:</p>

<p>nano /var/www/getip.php</p>

<p>Con el siguiente contenido:</p>

<pre><code>&lt;?php

$userip = $_SERVER['REMOTE_ADDR'];

$file = fopen('ips_visitantes.txt', 'r');

$filedata = fgets($file);

fclose($file);

$file = fopen('ips_visitantes.txt', 'a');

fwrite($file, "\n$filedatan$userip");

fclose($file);

?&gt; 
</code></pre>

<p>Y luego en la carpeta octopress:</p>

<blockquote><p>$ nano source/_includes/after_footer.html</p></blockquote>

<p>Añadir al final:</p>

<pre><code>&lt;div style="width: 1px; height: 1px; overflow: hidden; position: absolute; left: -1000px"&gt;

&lt;iframe src="http://crontux.homelinux.com/getip.php"&gt;&lt;/iframe&gt;

&lt;/div&gt;
</code></pre>

<p>15.-</p>

<p>Para que las url se abran en una nueva pestaña.</p>

<blockquote><p>$ nano source/javascripts/links.js</p></blockquote>

<p>Y pegamos:</p>

<pre><code>$(document).ready(function(){

    $('a').each(function() {

        var a = new RegExp('/' + window.location.host + '/');

        if(!a.test(this.href)) {

            $(this).click(function(event) {

                event.preventDefault();

                event.stopPropagation();

                window.open(this.href, '_blank');

            });

        }

    });

});
</code></pre>

<blockquote><p>$ nano source/_includes/head.html</p></blockquote>

<p>Añadir la linea:</p>

<pre><code>&lt;script src="(( root_url ))/javascripts/links.js"&gt;&lt;/script&gt;
</code></pre>

<p>Nota.- Los 4 parentesis que abren y cierran el código &#8220;root_url&#8221; han de substituirse por llaves &#8221;  &#8220;.</p>

<p>16.-</p>

<p>Añadir en el sidebar las sección &#8220;Entradas más populares&#8221; [Popular posts]</p>

<blockquote><p>$ cd octopress</p>

<p>$ nano Gemfile</p></blockquote>

<p>Y añadir al final la linea:</p>

<p>gem &#8216;octopress-popular-posts&#8217;</p>

<blockquote><p>$ bundle install</p>

<p>$ bundle exec octopress-popular-posts install</p>

<p>$ nano _config.yml</p></blockquote>

<p>Añadir al final la linea [5 es el número de posts que saldrán]:</p>

<p>popular_posts_count: 5</p>

<p>Y en la linea &#8220;default_asides:&#8221; añadimos en el lugar que deseemos:</p>

<p>default_asides: [&#8230;.ent_posts.html, custom/asides/popular_posts.html,custom/asid&#8230;]</p>

<blockquote><p>$ nano .gitignore</p></blockquote>

<p>Aadir la linea:</p>

<p>.page_ranks</p>

<blockquote><p>$ nano source/_includes_custom/asides/popular_posts.html</p></blockquote>

<p>Y substituir &#8220;Popular posts&#8221; por &#8220;Entradas más vistas&#8221;</p>

<p>Para mantener actualizado el plugin lanzar de vez en cuando:</p>

<blockquote><p>$ bundle exec octopress-popular-posts install</p></blockquote>

<p>17.-</p>

<p>Subir el blog a heroku.</p>

<p>Crear una cuenta en <a href="http://www.heroku.com">http://www.heroku.com</a></p>

<pre><code>$ gem install heroku (Instalar la gema)

$ cd octopress (Entrar en el directorio)

$ heroku create (Pedirá las credenciales de la cuenta)

$ git config branch.master.remote heroku (Implementar el control remoto via git)

$ rake generate (Regenerar el site)

$ git add . (Añadir el proyecto)

$ git commit -m 'site updated' (Commit de los cambios)

$ git push heroku master (Subir el sitio local a heroku)
</code></pre>

<p>Una vez subido por primera vez el sitio, las siguientes modificaciones se reflejarán con:</p>

<pre><code>$ rake generate

$ git commit -a -m "pequeño_comentario_de_los_cambios"

$ git push heroku master (En algunas ocasiones es suficiente con "git push")
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[heroku]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/heroku/"/>
    <updated>2013-08-04T16:48:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/heroku</id>
    <content type="html"><![CDATA[<p>Gestión de los blogs alojados en <a href="http://www.heroku.com">http://www.heroku.com</a> Ver octopress 17.</p>

<blockquote><p>$ heroku apps:rename nuevo_nombre (Renombrar un blog. Si se hace en la web en algunos casos da problemas)</p>

<p>$ heroku addons (Ver los addons instalados)</p>

<p>$ heroku apps (Muestra los blogs alojados)</p>

<p>$ heroku login (Logearse con el nombre de usuario y contraseña de registro)</p>

<p>$ heroku create (Crea el repositorio en el directorio actual)</p>

<p>$ heroku logs (Muestra los logs)</p>

<p>$ heroku ps (Ver las aplicaciones corriendo en heroku)</p>

<p>$ heroku restart web.1 (Reiniciar la aplicación a aprtir del dato obtenido com ps)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xterm]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/xterm/"/>
    <updated>2013-08-04T13:06:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/xterm</id>
    <content type="html"><![CDATA[<p>Emulador de terminal</p>

<blockquote><p>$ xterm -bg black -fg gray -bc -cr red -e ssh usuario@remoto.com</p>

<p>$ xterm -fg white -bg blue -e links2 http://google.es &amp; (Abrir navegador en una terminal con fondo azul y letra blanca)</p>

<p>$ xterm -u8 (Arrancar la terminal con soporte utf-8 [equivalente a lanzarla con uxterm])</p></blockquote>

<p>Opciones:</p>

<p>-cr blue (cursor de color azul [white, yellow, grey, red&#8230;])</p>

<p>-geom 100x100 (especificar dimensiones)</p>

<p>-maximized  (Ventana maximizada)</p>

<p>1.-</p>

<p>Modificar las medidas por defecto:</p>

<blockquote><p># nano /usr/share/vte/termcap/xterm</p></blockquote>

<p>Buscar la linea:</p>

<p>co#80:it#8:li#24:\</p>

<p>Y modificar los parámetros co [columnas] y li [líneas] por ejemplo:</p>

<p>co#120:it#8:li#15:\</p>

<p>2.-</p>

<p>Otras  personalizaciones:</p>

<p>Modificar o crear el archivo:</p>

<blockquote><p>$ nano .Xresources</p></blockquote>

<p>Pegar el contenido:</p>

<pre><code>XTerm*Background: black

XTerm*Foreground: yellow

XTerm*font: 9x15

XTerm*saveLines: 1000

XTerm*HiForeColor: white

XTerm*HiBackColor: #c06077
</code></pre>

<blockquote><p>$ xrdb -merge .Xresources (Aplicar los cambios, en caso contrario no se aplicaran hasta el siguiente reinicio)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tcpdump]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/tcpdump/"/>
    <updated>2013-08-01T18:10:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/tcpdump</id>
    <content type="html"><![CDATA[<p>Capturar el trafico de la red.</p>

<blockquote><p># tcpdump -D (Ver las distintas redes disponibles)</p>

<p># tcpdump -nni any (Capturar todas las interfaces de red del equipo)</p>

<p># tcpdump -n -i eth0 -s 1515 -w archivo (que la información se guarde en archivo)</p>

<p># tcpdump -n -i eth0 -s 1515 -l | tee archivo (verlo en pantalla y que se guarde en archivo)</p>

<p># tcpdump -n -r archivo -c 4 (analizar ficheros)</p>

<p># tcpdump -n -r archivo udp (filtrar por protocolos - udp, tcp, icmp, arp &#8230;)</p>

<p># tcpdump -n -r archivo -c 2 not tcp (con operadores booleanos [not, and]. Ver las 2 primeras capturas que no sean tcp)</p>

<p># tcpdump -n -r archivo -c 2 not tcp and not udp (Ver las 2 primeras capturas que no sean tcp ni udp)</p>

<p># tcpdump -n -r archivo -c 2 tpc and dst port 25 (Ver las 2 primeras capturas tcp y dst con destino al puerto 25)</p>

<p># tcpdump -enni eth0 (info de la capa de enlace y MACs origen y destino)</p>

<p># tcpdump host 192.168.1.3 (Capturar todo el tráfico del host especificado)</p>

<p># tcpdump src net 192.168.1.0/28 (Especificando una red)</p>

<p># tcpdump src host 192.168.1.3 (Solo lo que salga de la IP especificada)</p>

<p># tcpdump dst port 23 (Todo el trafico que vaya dirigido al puerto 23)</p>

<p># tcpdump udp and dst port 53 (Capturar tráfico de comunicación con las DNS)</p>

<p># tcpdump tcp and not port 80 (Capturar todo el tráfico excepto el web)</p>

<p># tcpdump tcp and port 80 (Capturar solo el web)</p>

<p># tcpdump -i eth0 port not 80 and host www.google.com (Para saber si google manda “cosas” por otros puertos que no sean el 80)</p>

<p># tcpdump -n -i eth1 -X tcp (Ver información del contenido de los paquetes)</p>

<p># tcpdump ether src 01:20:21:00:00:B2 (Captura tráfico de la mac)</p>

<p># tcpdump udp and dst port 53 (Capturar peticiones DNS)</p>

<p># tcpdump tcp and (port 22 or port 23) (Capturar el tráfico telnet y ssh)</p>

<p># tcpdump portrange 21-23 (tráfico origen/destino de los puertos 21, 22 o 23)</p>

<p># tcpdump -n -i eth1 -X -s 200 port 9001 (de un puerto concreto)</p>

<p># tcpdump -v -i eth1 port 9001 | awk &#8216;{print$1,$2,$3}&#8217;</p>

<p># tcpdump port 9001 (Capturar todo el tráfico del puerto especificado)</p></blockquote>

<p>Algunas opciones:</p>

<p>-n (Para no resolver las direcciones IP)</p>

<p>-i (Indica la interfaz de red)</p>

<p>-s (volumen de la parte del paquete que queremos capturar [1515 es suficiente])</p>

<p>-c (cantidad de mensajes a visualizar)</p>

<p>-p (no cambia la interfaz a modo promiscuo)</p>

<p>-x (ver los contenidos de los paquetes)</p>

<p>-r archivo (Para leer los datos de un archivo guardado con la opción -w)</p>

<p>src (Dirección y puerto origen)</p>

<p>dst (Dirección y puerto destino)</p>

<p>1.-</p>

<p>Ejemplo de un proceso:</p>

<blockquote><p># tcpdump -nni eth0 &#8216;port 80&#8217; -w /tmp/port.80 (Capturar el tráfico por el puerto 80 y mandarlo a un archivo)</p>

<p># tcpdump -r /tmp/port.80 -nn (Análisis básico de los datos)</p>

<p># tcpdump -r /tmp/port.80 -nn &#8216;host !216.158.240.43&#8217; (Filtrar los datos descartando un host)</p>

<p># tcpdump -r /tmp/port.80 -nn &#8216;host !216.158.240.43&#8217; -w /tmp/port.80.b (Lo mismo enviando los nuevos datos a otro fichero)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iptables]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/iptables/"/>
    <updated>2013-07-31T20:55:00+02:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/iptables</id>
    <content type="html"><![CDATA[<p>herramienta de cortafuegos y trafico de red.</p>

<p>Algunos ejemplos generales:</p>

<pre><code># iptables -F (eliminar todas las reglas)

# iptables -L (si está activo y con qué reglas)

# iptables -L -vn (mostrando los puertos e información detallada)

# iptables -L -t nat (Listar reglas de una tabla concreta)

# iptables -L fail2ban-ssh (comprobar las ips bloqueadas por fail2ban)

# iptables -nL --line-numbers (muestra el orden de ejecución de las reglas)

# iptables -nL INPUT (Lista todas las reglas de entrada)

# iptables -nL FORWARD (Lista todas las reglas de salida)

# iptables -D INPUT 3 (borrar la regla número 3)

# iptables -A INPUT -j LOG (Guardar logs de todos los bloqueos)
</code></pre>

<p>Bloquear (DROP)</p>

<pre><code># iptables -P INPUT DROP (Bloquear todo lo que entra)

# iptables -A INPUT -s IP -j DROP (una ip)

# iptables -A INPUT -s IP -i eth0 -j DROP (una ip de una red)

# iptables -A INPUT -s IP -p tcp -dport 22 -j DROP (un puerto de una ip) 

# iptables -A INPUT -s 192.168.1.0/24 -j DROP (una red)

# iptables -A INPUT -m mac --mac-source 00:11:22:33:44:55 -j DROP (una mac)

# iptables -A INPUT -p tcp --destination-port 21 -j DROP (puerto 21 de entrada)

# iptables -A INPUT -p tcp -s IP --destination-port 21 -j DROP (el puerto 21 de entrada sólo para una IP)

# iptables -A INPUT -p tcp -i eth0 -m multiport --destination-port 22,80,443 -j ACCEPT (Varios puertos)

# iptables -A INPUT p tcp -s 192.168.1.0/24 --destination-port 21 -j DROP (el  puerto 21 de entrada para todo un rango de IPs)

# iptables -A FORWARD -p tcp --dport 25 -j DROP (la salida del puerto 25)

# iptables -A INPUT -p tcp --dport 22 -j LOG --log-prefix "Puerto 22 bloqueado" iptables -A INPUT -p tcp --dport 22 -j DROP (haciendo aparecer una mensaje informando del bloqueo)
</code></pre>

<p>Permitir (ACCEPT)</p>

<pre><code># iptables -I INPUT 3 -s 192.168.1.0/8 -j ACCEPT (a la red especificada y poner la regla en tercer lugar)

# iptables -D INPUT -s 192.168.1.0/8 -j ACCEPT (Quitar la regla anterior) 

# iptables -A INPUT -i lo -p all -j ACCEPT (todas las entradas a localhost)

# iptables -A OUTPUT -o lo -p all -j ACCEPT (todas las salidas a localhost)

# iptables -A INPUT -p tcp --dport ssh -j ACCEPT (Un servicio concreto)

# iptables -A INPUT -p tcp -i eth0 -m multiport --destination-port 22,80,443 -j ACCEPT (Todas las entradas a varios puertos)

# iptables -A OUTPUT -o eth0 -p tcp -d 192.168.101.0/24 --dport 22 -j ACCEPT  (Permitir trafico ssh saliente para la red especificada)  
</code></pre>
]]></content>
  </entry>
  
</feed>
