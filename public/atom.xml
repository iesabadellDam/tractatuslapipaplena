<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[TRACTATUS ELEMENTALIS]]></title>
  <link href="https://tractatuslapipaplena.herokuapp.com/atom.xml" rel="self"/>
  <link href="https://tractatuslapipaplena.herokuapp.com/"/>
  <updated>2013-12-26T12:55:32+01:00</updated>
  <id>https://tractatuslapipaplena.herokuapp.com/</id>
  <author>
    <name><![CDATA[templix]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[dhcping:]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dhcping/"/>
    <updated>2013-12-26T12:55:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dhcping</id>
    <content type="html"><![CDATA[<p>Enviar una solicitud DHCP a un servidor DHCP para ver si está activo.</p>

<blockquote><p># dhcping -v -h 00:23:54:57:FC:78 -s 192.168.1.10 -c 192.168.1.15 (Mostrando la máxima información [v], la MAC del servidor DHCP [h] y su ip [s] y nuestra máquina [c])</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh-keygen]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/ssh-keygen/"/>
    <updated>2013-12-26T08:20:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/ssh-keygen</id>
    <content type="html"><![CDATA[<p>Creación, gestión y conversión de claves utilizadas para la autenticación de cliente y servidor. Cuando no se especifica ninguna opción, ssh-keygen genera un par de claves RSA de 2048 bits y solicita un nombre de clave y una frase de paso para proteger la clave privada. Las claves públicas se crean usando el mismo nombre base que la clave privada con una extensión .pub añadida. La ubicación de la clave se muestra cuando se completa la generación de claves. Ver ssh</p>

<blockquote><p>$ ssh-keygen -lvf ~/.ssh/known_hosts (Ver todas las huellas digitales y las imágenes randomart)</p>

<p>$ ssh-keygen -t rsa -C newserver -f .ssh/newkey (Generar el par de llaves publica y privada. Caso de exitir preguntará si se sobreescribe)</p>

<p>$ ssh-keygen -B -f .ssh/id_rsa.pub (Muestra la huella digital de la llave especificada en formato SHA-1)</p>

<p>$ ssh-keygen -f &#8220;$HOME/USER/.ssh/known_hosts&#8221; -R [La_URL.com_entre_corchetes]:22 (Suprimir un clave de un host por sufrir alguna modificación)</p></blockquote>

<p>1.-</p>

<p>Para ver la huella digital cada vez que se ingresa en un host remoto:</p>

<blockquote><p># nano /etc/ssh/ssh_config</p></blockquote>

<p>Descomentar la linea y dejarla:</p>

<p>VisualHostKey yes</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gem]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/gem/"/>
    <updated>2013-12-25T20:48:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/gem</id>
    <content type="html"><![CDATA[<p>[rubygems]</p>

<p>Nombre que reciben los módulos en ruby.</p>

<blockquote><p>$ gem install rake (Instalar. &#8220;Rake&#8221; en este caso)</p>

<p>$ gem install rake &#8211;remote (Instalar desde un servidor remoto)</p>

<p>$ gem list &#8211;local (Muestra las gemas instaladas)</p>

<p>$ gem list R (Lista las gemas cuyo nombre empieza por &#8220;R&#8221;)</p>

<p>$ gem search rake (Buscar una gema)</p>

<p>$ gem search &#8211;both mysql (Busca entre las gemas locales o remotas las que contengan &#8220;mysql&#8221;)</p>

<p>$ gem search &#8211;remote mysql (Busca entre las gemas remotas las que contengan &#8220;mysql&#8221;)</p>

<p>$ gem help (Información de todas las gemas)</p>

<p>$ gem help push (Muestra información sobre un comando. &#8220;push&#8221; en este caso)</p>

<p>$ gem content rake (lo que instalo una gema en el sistema)</p>

<p>$ gem uninstall rake (Desinstalar &#8220;rake&#8221;)</p>

<p>$ gem environment (Información sobre rubygems)</p>

<p>$ gem update (Actualizar todas las gemas del sistema)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sha1sum]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/sha1sum/"/>
    <updated>2013-12-25T11:40:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/sha1sum</id>
    <content type="html"><![CDATA[<p>Calcular el hash sha1 de palabras, archivos o directorios.</p>

<blockquote><p>$ sha1sum archivo</p>

<p>$ sha1sum (Entra en el prompt y espera una palabra. Una vez terminada de escribir, sin pulsar intro, pulsar dos veces Ctrl+d y nos dará el hash)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[shasum]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/shasum/"/>
    <updated>2013-12-25T11:09:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/shasum</id>
    <content type="html"><![CDATA[<p>Muestra el hash sha de un fichero con el objetivo de verificar si se producen cambios.</p>

<blockquote><p>$ shasum -a 512 -t fichero (Usando el algoritmo de 512 bits. Otras opciones: 32 [por defecto] 224, 256, 384, 512224, 512256)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pyroom]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/pyroom/"/>
    <updated>2013-12-25T08:52:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/pyroom</id>
    <content type="html"><![CDATA[<p>Editor minimalista.</p>

<p>Atajos:</p>

<pre><code>Ctrl + h (Muestra la ayuda)

Ctrl + i (Información del búfer)

Ctrl + p (Abre preferencias)

Ctrl + n (Crear nuevo buffer)

Ctrl + o (Abrir archivo)

Ctrl + q (salir)

Ctrl + s (Guardar)

Ctrl + shift + s (Guardar búfer como...)

Ctrl + w (Cerrar búfer y salir si era el último búfer)

Ctrl + y (Rehacer la última modificación)

Ctrl + z (Deshacer la última modificación)

Ctrl + RePág (Cambia al buffer anterior)

Ctrl + AvPág (Cambia al siguiente búfer)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/mysql/"/>
    <updated>2013-12-22T21:33:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/mysql</id>
    <content type="html"><![CDATA[<p>Gestor de bases de datos [BDs]. Las BDs se guardan en el directorio /var/lib/mysql/</p>

<blockquote><p>$ mysqldump -u root -p proveedores > fichero.sql (Crear un backup de la BD &#8220;proveedores&#8221;.)</p>

<p>$ mysql proveedores &lt; fichero.sql (Restaurar la BD &#8220;proveedores&#8221; de un archivo)</p>

<p>$ mysqlimport -u root -p clientes fichero.sql (Otra forma de restaurar una BD si esta ya existe)</p>

<p>$ mysqldump -u root -p &#8211;all-databases > fichero.sql (Backup de todas las BDs)</p>

<p>$ mysqldump -u root -p clientes proveedores > fichero.sql (Backup de dos BDs)</p>

<p>$ mysqldump -u root -p proveedores &#8211;ignore-table=antiguos > fichero.sql (Backup ignorando una tabla)</p>

<p>$ mysqldump -u root -p base_de_datos tabla1 tabla2 > tabla1_y_tabla2.sql (Exportar solo unas tablas de una BDs)</p>

<p>$ mysql -u root -p1234 (Acceder a la BD con el usuario &#8220;root&#8221; y contraseña &#8220;1234&#8221;[nótese que la contraseña está junto a la &#8220;p&#8221;)</p>

<p>$ mysql -u root -p (Pedirá contraseña para acceder a la BD con el usuario &#8220;root&#8221;)</p>

<p>$ mysql -u root -p datos (Entrar en mysql y directamente en la BD &#8220;datos&#8221; [notese que la BDs está separada de la &#8220;p&#8221; por un espacio, sinó se tomaría como la contraseña])</p></blockquote>

<p>Una vez en el prompt de mysql [Todas las sentencias han de terminar con un punto y coma [;] menos la sentencia &#8220;USE&#8221;]:</p>

<p>mysql> SHOW VARIABLES LIKE &#8216;datadir&#8217;; (muestra el directorio donde se almacenan las BDs)</p>

<p>mysql> show databases; (Mostrar las BDs existentes)</p>

<p>mysql> create database datos; (Crear la BD &#8220;datos&#8221;)</p>

<p>mysql> DROP DATABASE datos; (Borrar toda una base de datos. El directorio /var/lib/mysql/datos/ tiene que estar vacio)</p>

<p>mysql> USE datos (Entrar en la BD &#8220;datos&#8221;. Sin punto y coma final)</p>

<p>mysql> show tables; (Mostrar las tablas de la BD en la que se ha entrado)</p>

<p>mysql> DESCRIBE una_tabla (Mostrar los campos de una tabla concreta)</p>

<p>mysql> exit (Salir de mysql. Tambien con &#8220;quid&#8221; o Ctrl+d)</p>

<p>mysql> select version(), current_date; (Mostrar versión de mysql y fecha)</p>

<p>Modelo de creación de una tabla dentro de una BD mysql:</p>

<pre><code>mysql&gt; CREATE TABLE usuarios( 

-&gt; nombre VARCHAR(20), apellido VARCHAR(20), 

-&gt; profesión VARCHAR(20), sexo CHAR(1), nacimiento DATE, 

-&gt; antiguedad DATE); 
</code></pre>

<p>VARCHAR(20) (Que los valores que se almacenarán son de longitud variable de hasta 20 caracteres)</p>

<p>CHAR(1) (Que el valor será fijo y solo tendrá un caracter)</p>

<p>DATE (En formato YYYY-MM-DD)</p>

<p>Para entrar datos en la tabla anterior, podemos crear un archivo de texto &#8220;usuarios.txt&#8221; que contenga un registro por línea con valores separados por tabuladores, cuidando que el orden de las columnas sea el mismo que utilizamos en la sentencia CREATE TABLE. Para valores que no conozcamos podemos usar valores nulos usando \N. Ejemplo:</p>

<blockquote><p>$ nano usuarios.txt</p></blockquote>

<pre><code>Juan    Borras  contable    m   1964-05-12  1988-03-27 

Maria   Gil administrativo  f   1983-10-03  2004-08-05 

Antonio Gomez   portero     m   \N      2006-11-01 
</code></pre>

<p>Nota.- El final del archivo no ha de contener ninguna linea en blanco. El archivo tiene que estar en /var/lib/mysql/datos (En el directorio de la misma base de datos donde se carga)</p>

<p>Para cargarlo en la BD:</p>

<p>mysql> LOAD DATA INFILE &#8220;usuarios.txt&#8221; INTO TABLE datos;</p>

<pre><code>Nota.- En caso de que salga el error: The used command is not allowed with this MySQL version:

# nano /etc/mysql/my.cnf

Y en la sección [mysql] añadir la linea "local-infile": 

    [mysql]

    local-infile

Reinciar mysql. 
</code></pre>

<p>LOAD DATA (Permite especificar cuál es el separador de columnas y el separador de registros. Por defecto el tabulador es el separador de columnas (campos) y el salto de línea es el separador de registros)</p>

<p>Para añadir un nuevo registro a la BD anterior:</p>

<pre><code>mysql&gt; INSERT INTO usuarios 

    -&gt; VALUES('Jose','Robles','administrativo','m',NULL,'2012-12-01'); 
</code></pre>

<p>Valores y fechas entre comillas simples y valores desconocidos NULL y no \N como entrando un archivo.</p>

<p>mysql> SELECT * FROM usuarios; (Ver toda la tabla para comprobar si se ha añadido el último registro)</p>

<p>Para modificar un registro puede realizarse borrando toda la tabla de datos y entrando nuevamente el archivo usuarios.txt si este está actualizado:</p>

<p>mysql> DELETE FROM usuarios;</p>

<p>mysql> LOAD DATA INFILE &#8220;usuarios.txt&#8221; INTO TABLE usuarios;</p>

<p>O modificando solo el registro que corresponda:</p>

<p>mysql> UPDATE usuarios SET nacimiento=&#8221;1959-04-12&#8221; WHERE apellido=&#8221;Gomez&#8221;; (Modificar campo &#8220;nacimiento&#8221; del apellido &#8220;Gomez&#8221;</p>

<p>mysql> SELECT * FROM usuarios WHERE apellido=&#8221;Gomez&#8221;; (Verificar si se ha realizado la modificación)</p>

<p>mysql> SELECT * FROM usuarios WHERE nacimiento >= &#8220;1990-1-1&#8221;; (filtrar los que han nacido antes de la fecha indicada)</p>

<p>mysql> SELECT * FROM usuarios WHERE profesion=&#8221;administrativo&#8221; AND sexo=&#8221;f&#8221;; (filtrar los administrativos de sexo femenino)</p>

<p>mysql> SELECT * FROM usuarios WHERE profesion=&#8221;portero&#8221; OR profesion=&#8221;contable&#8221;; (filtrar porteros y contables)</p>

<pre><code>mysql&gt; SELECT * FROM usuarios WHERE (profesion="portero" AND sexo="f") 

    -&gt; OR (nombre = "juan" AND sexo = "m"); (Filtrar distintas opciones encerradas entre parentesis) 
</code></pre>

<p>mysql> SELECT apellido, nacimiento FROM usuarios;</p>

<p>mysql> SELECT antiguedad FROM usuarios; (Filtrar la columna &#8220;antiguedad&#8221;)</p>

<p>mysql> SELECT nombre, nacimiento FROM usuarios ORDER BY nacimiento; (Ordenar por fecha nacimiento)</p>

<p>mysql> SELECT * FROM la_tabla ORDER BY la_columna; (Ordenar por el número de una columna)</p>

<p>mysql> DELETE FROM usuarios WHERE nombre=&#8217;Maria&#8217;; (Eliminar toda la entrada que contenga &#8220;Maria&#8221;)</p>

<p>mysql> DROP TABLE usuarios; (Eliminar una tabla)</p>

<p>mysql> DROP TABLE IS EXIST usuarios; (Eliminar tabla si existe)</p>

<p>mysql> CHECK TABLE la_tabla EXTENDED; (Chequear la integridad de una tabla)</p>

<p>mysql> REPAIR TABLE la_tabla; (Reparar una tabla)</p>

<p>1.-</p>

<p>En ciertos casos, para resolver el error: mysqldump: Got error: xxxx: Table &#8216;xxxxxxxxx&#8217; doesn&#8217;t exist when using LOCK TABLES:</p>

<blockquote><p>$ mysqldump -u root -p BDs &#8211;single-transaction > dump.sql</p></blockquote>

<p>2.-</p>

<p>Otro sistema para importar una base de datos. Primero crearla, entrar en ella y ejecutar el source sobre el fichero sql:</p>

<pre><code>mysql&gt; CREATE DATABASE datos;

mysql&gt; USE datos;

mysql&gt; SOURCE datos.sql;
</code></pre>

<p>3.-</p>

<p>Exportar una tabla a txt con determinado formato:</p>

<pre><code>mysql&gt; SELECT * FROM tabla INTO OUTFILE "tabla.txt"

   --&gt; FIELDS TERMINATED BY '   '

   --&gt; LINES TERMINATED BY '\n\n\r';
</code></pre>

<p>FIELDS TERMINATED BY &#8217;  &#8217; (indica que los campos de cada línea terminarán con dos espacios.</p>

<p>LINES TERMINATED BY &#8216;\n\n\r &#8216;(indica el carácter como acaba cada linea, en este caso dos saltos de línea y retorno de carro</p>

<p>otras instrucciones de formato:</p>

<p>ENCLOSED BY &#8216;&#8221;&#8217; (Que los campos de tipo char, text, binary y enum de cada línea se entrecomillan)</p>

<p>IGNORE 1 LINES (No cargar la primera línea del fichero de texto)</p>

<p>LINES STARTING BY &#8216;&#8212;&#8217; (Que todas las líneas empiezen con &#8220;&#8212;&#8221;.</p>

<p>4.-</p>

<p>Ejemplo parecido al anterior pero ordenando el fichero por el segundo campo:</p>

<pre><code>mysql&gt; SELECTC campo1,campo2,campo3 FROM tabla ORDER BY campo2 INTO OUTFILE "campos.txt"

--&gt; FIELDS TERMINATED BY ' '

--&gt; LINES TERMINATED BY '\n\r';
</code></pre>

<p>5.-</p>

<p>Gestion de usuarios.</p>

<p>Cuando creamos un nuevo usuario en MySQL, éste queda identificado por su nombre de usuario más el nombre o IP del ordenador desde el cual hemos dicho que accederá (el carácter comodín &#8216;%&#8217; representa varios ordenadores).</p>

<p>Ejemplos:</p>

<pre><code> juan

 juan@'%'

 juan@localhost

 juan@'192.168.1.%'

 juan@'%.dominio.org'
</code></pre>

<p>mysql> SELECT User,Host,Password FROM mysql.user; (Ver los usuarios)</p>

<p>mysql> CREATE USER juan@&#8217;%&#8217; IDENTIFIED BY &#8216;1234&#8217;; (Crear un usuario con la contraseña 1234)</p>

<p>mysql> CREATE USER john IDENTIFIED BY &#8216;1234&#8217;, peter IDENTIFIED BY &#8216;4321&#8217;; (Crear dos usuarios)</p>

<p>mysql> RENAME USER john TO juan, peter TO pedro;</p>

<p>mysql> DROP USER juan, pedro; (Borrar dos usuarios)</p>

<p>mysql> SET PASSWORD FOR juan = PASSWORD(&#8216;abcde&#8217;) (Cambiar la contraseña de un usuario)</p>

<p>mysql> SHOW GRANTS FOR pedro; (Ver los privilegios de un usuario)</p>

<p>mysql> GRANT ALL ON <em>.</em> TO juan@localhost (Otorgar todos los privilegios a un usuario)</p>

<p>mysql> REVOKE ALL ON <em>.</em> FROM juan@localhost; (Anular todos los privilegios de un usuario)</p>

<p>6.-</p>

<p>Acceso remoto a mysql con el usuario root:</p>

<blockquote><p># nano /etc/mysql/my.cnf</p></blockquote>

<p>Comentar la linea:</p>

<pre><code>#bind-address           = 127.0.0.1
</code></pre>

<p>Reiniciar el servicio:</p>

<blockquote><p># /etc/init.d/mysql restart</p></blockquote>

<p>Entrar en el prompt de mysql y otorgar privilegios:</p>

<blockquote><p># mysql -u root -p</p></blockquote>

<p>Entrar la contraseña y:</p>

<pre><code>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'la_contraseña' WITH GRANT OPTION;

mysql&gt; FLUSH PRIVILEGES;

mysql&gt; exit
</code></pre>

<p>7.-</p>

<p>Solucionar:ERROR 1045 (28000): Access denied for user &#8216;root&#8217;@&#8217;localhost&#8217; (using password: NO)</p>

<blockquote><p># /etc/init.d/mysql stop (Detener el servicio)</p>

<p># mysqld_safe &#8211;user=mysql &#8211;skip-grant-tables (Saltar privilegios de MySQL)</p>

<p>$ mysql (En otra terminal entrar en MySQL)</p></blockquote>

<p>mysql> use mysql (Enrar en la BDs mysql)</p>

<p>mysql> UPDATE user SET Password=PASSWORD(&#8216;12345&#8217;) WHERE user=&#8217;root&#8217;;(Actualizar el campo Password del usuario root)</p>

<p>mysql> exit (Salir)</p>

<blockquote><p>$ mysql -u root -p (Entrar en MySQL)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[help]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/help/"/>
    <updated>2013-12-18T18:56:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/help</id>
    <content type="html"><![CDATA[<p>Muestra los comandos disponibles en bash. Estos comandos no tienen página man, por lo que para acceder a una descripción se usa esta opción.</p>

<blockquote><p>$ help</p>

<p>$ help fc</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fc]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/fc/"/>
    <updated>2013-12-18T18:47:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/fc</id>
    <content type="html"><![CDATA[<p>Mostrar/abrir nuevamente el último comando/archivo abierto o ejecutado. La diferencia con history [ver] es que fc sólo muestra los ultimos comandos ejecutados y no todos.</p>

<blockquote><p>$ fc -l (Mostrar los últimos comandos usados por el usuario)</p>

<p>$ fc 534 (Edita el comando con el pid 534 y lo ejecuta nuevamente)</p>

<p>$ !! (Ejecuta el último comando)</p>

<p>$ !n (Ejecuta el comando número n)</p>

<p>$ !dialog (Ejecuta el último comando que empiece por dialog)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[shell]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/shell/"/>
    <updated>2013-12-18T18:30:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/shell</id>
    <content type="html"><![CDATA[<p>Termino usado para referirse al interprete de comandos. Los comandos, cuando se escriben en ficheros ejecutables se denominan shell-scripts o programación shell aunque, mirado estrictamente, no se sean un lenguje de programación. El termino shell hace referencia a un programa particular, el Bourne shell [sh] que es un standard unix y, aunque según las distros pueden incluir distintas shells con más características (bash, ash, csh, ksh, tcsh) todas son compatibles con el bourne shell.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mupdf]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/mupdf/"/>
    <updated>2013-12-18T16:38:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/mupdf</id>
    <content type="html"><![CDATA[<p>Visor de archivos pdf</p>

<blockquote><p>$ mupdf -b 8 -r 150 archivo.pdf (con la máxima calidad [de 0 a 8] y a 150 dpi de resolución [por defecto 72] si el pdf requiriese contraseña se añadiría con “-p contraseña”)</p></blockquote>

<p>Arrancada la aplicación, algunas teclas de control son:</p>

<pre><code>L M (Voltea el pdf)

h j k l (scroll arriba/abajo y derecha/izquierda)

+ - (Aumentar/diminuir medida del texto)

15g (Ir a la página 15)

/ (Abre diálogo “buscar texto”)

n N (Ir a la siguiente/anterior busqueda)

. , (Página siguiente, página anterior)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[continue]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/continue/"/>
    <updated>2013-12-16T21:23:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/continue</id>
    <content type="html"><![CDATA[<p>Salta a la siguiente interacion en un bucle for, select, while o until. En el siguiente ejemplo se imprime del 1 al 5 pero saltándose el 3:</p>

<pre><code>#!/bin/bash

for contador in 1 2 3 4 5

do

    if [ "$contador" -eq 3 ]

    then

        continue

    fi

    echo "$contador"

done
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[colores]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/colores/"/>
    <updated>2013-12-16T21:23:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/colores</id>
    <content type="html"><![CDATA[<p>Cuadro de colores. Las primeras dos cifras [0;30] afectan al color de las letras de la terminal, las segundas [0;40], una decena superior que las anteriores, corresponden al color de fondo.</p>

<pre><code>Negro          0;30 0;40  

Gris Obscuro   1;30 1;40

Rojo           0;31 0;41  

Rojo Claro     1;31 1;41

Verde          0;32 0;42  

Verde Claro    1;32 1;42

Café           0;33    0;43  

Amarillo       1;33 1;43

Azul           0;34 0;44   

Azul Claro     1;34 1;44

Purpura        0;35 0;45  

Fucsia         1;35 1;45

Cyan           0;36 0;46   

Cyan Claro     1;36 1;46

Gris Claro     0;37 0;47   

Blanco         1;37 1;47
</code></pre>

<p>Nota.- Si se omite el el 0 o el 1 por defecto es el 0</p>

<p>Algunso ejemplos:</p>

<blockquote><p>$ echo -e &#8220;\e[1;33;44mlinux es un sistema genial&#8221; (En azul toda la linea)</p>

<p>$ echo -e &#8220;\e[0;34mAtención:\e[1;32m linux es un\e[0;31m sistema genial&#8221; (En azul, verde y rojo sin fondo)</p>

<p>$ echo -e &#8220;\e[1;33;40mLinux es un sistema genial&#8221; (En amarillo y con fondo gris toda la linea)</p>

<p>$ echo -e &#8220;\e[1;37;1;41mLinux es un sistema genial\e[0m&#8221; (En blanco y fondo rojo hasta el final del texto  &#8230;\e[0m&#8221;)</p>

<p>$ echo -e &#8220;\e[33;40mAtención:\e[34;41m linux es un\e[37;42m sistema genial\e[0m&#8221; (café con fondo gris, azul y fondo rojo y blanco con fondo verde y terminando el colorido al final del texto)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awstats]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/awstats/"/>
    <updated>2013-12-16T20:26:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/awstats</id>
    <content type="html"><![CDATA[<p>[libnet-dns-perl libnet-ip-perl libnet-xwhois-perl]</p>

<p>Estadísticas de la red local</p>

<p>En el fichero de configuración (/etc/awstats/awstats.conf) comprobar:</p>

<p>LogFile=&#8221;/var/log/apache2/access.log&#8221;</p>

<p>SiteDomain=”tu_dominio.com” (entre comillas nombre del host)</p>

<p>LogFormat=1 (El usado por apache)</p>

<p>AllowToUpdateStatsFromBrowser=1 (Actualizar via navegador)</p>

<p>Lang=&#8221;es&#8221;</p>

<p>Asegurar permisos:</p>

<blockquote><p># chmod o+r /var/log/apache2/access.log</p></blockquote>

<p>Crear enlace de las imágenes:</p>

<pre><code># ln -s /usr/share/awstats/icon/ /var/www/awstats-icon 
</code></pre>

<p>Crear las estadísticas:</p>

<pre><code># /usr/lib/cgi-bin/awstats.pl -update -config=/etc/awstats/awstats.conf 
</code></pre>

<p>Para ver las estadísticas, en el navegador:</p>

<pre><code>http://localhost/cgi-bin/awstats.pl
</code></pre>

<p>Si no queremos que las estadísticas sean accesibles para cualquiera:</p>

<pre><code># gedit /etc/apache2/sites-available/default
</code></pre>

<p>Y en la linea “Allow from All” de la sección siguiente, quitamos el “All” y ponemos 127.0.0.1 [O la ip que proceda] y reiniciamos servicio:</p>

<p>ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/</p>

<pre><code>&lt;Directory "/usr/lib/cgi-bin"&gt; 

AllowOverride None 

Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch 

Order allow,deny 

Allow from 127.0.0.1 

&lt;/Directory&gt;
</code></pre>

<blockquote><p># /etc/init.d/apache2 force-reload</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[awk]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/awk/"/>
    <updated>2013-12-16T20:26:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/awk</id>
    <content type="html"><![CDATA[<p>Busca patrones y los procesa. Es practicamente un lenguaje de programación.</p>

<p>Archivo base para ejemplo (Empleado &#8211; Precio/hora &#8211; Horas trabajadas – Cómo las cobra):</p>

<blockquote><p>$ cat lista</p></blockquote>

<pre><code>Juan Gomez 6 10 banco 

Clara Fuentes 7 12 banco 

Antonio Cano 6 13 metálico 

José Bueno 7 0 banco 

Matías Crespo 5 8 metálico 

Isabel Ruiz 7 0 metálico 

María Monzón 9 16 metálico
</code></pre>

<p>Imprimir la segunda columna (Apellidos):</p>

<pre><code>$ awk ' { print $2 } ' lista
</code></pre>

<p>Imprimir la última columna:</p>

<pre><code>$ awk ' { print $NF } ' lista
</code></pre>

<p>Imprimir la linea 3:</p>

<pre><code>$ awk ' NR == 3 ' lista
</code></pre>

<p>Imprimir todo menos la primera columna:</p>

<pre><code>$ awk ' { $1 = "" ; print } ' lista
</code></pre>

<p>Imprimir las columnas tabuladas:</p>

<pre><code>$ awk ' { print $1 “\t” $2 “\t” $3 “\t” $4 } ' lista
</code></pre>

<p>Imprimir las lineas que tengan menos de 22 caracteres:</p>

<pre><code>$ awk 'length($0) &lt; 22' lista
</code></pre>

<p>Calcular el sueldo de los empleados que han trabajado:</p>

<pre><code>$ awk ' $4 &gt; 0 { print $1,$2, $3*$4} ' lista  
</code></pre>

<p>Personas que no han trabajado:</p>

<pre><code>$ awk ' $3 == 0 { print $1}' lista 
</code></pre>

<p>Buscar una entrada concreta:</p>

<pre><code>$ awk '/Fuentes/ { print $0 }' lista
</code></pre>

<p>Buscar los que cobran en metálico e impimir la 2ª columna:</p>

<pre><code>$ awk ' /'metálico'/ {print$2}' lista 
</code></pre>

<p>Buscar dos entradas en una misma linea separándolas con punto y coma (;):</p>

<pre><code>$ awk '/Fuentes/ { print $0 }; /Cano/ { print$0 } ' lista
</code></pre>

<p>Imprimir lineas que tengan alguno de los campos o los dos:</p>

<pre><code>$ awk '/Bueno/ || /Cano/' lista
</code></pre>

<p>Imprimir lineas que tengan los dos campos:</p>

<pre><code>$ awk '/Bueno/ &amp;&amp; /7/' lista
</code></pre>

<p>Imprimir las lineas que no tengan el cammpo:</p>

<pre><code>$ awk '! /metálico/' lista
</code></pre>

<p>Buscar las entradas en las que el primer campo empiece por “J”, imprimir el 2º campo y, entre parentesis el último:</p>

<pre><code>$ awk '$1 ~ /^J/ {print$2, "("$NF")"}' lista
</code></pre>

<p>Lo mismo con if:</p>

<pre><code>$ awk ' { if ($1 ~ /^J/) print$2, “(“$NF”)” }' lista
</code></pre>

<p>Añadir 5 horas al 4º campo y comprobar como quedan con la modificación:</p>

<pre><code>$ awk '{ $4 = ($4+5); print $0 }' lista
</code></pre>

<p>Añadir un nuevo campo ($6) con el producto del 3 y el 4:</p>

<pre><code>$ awk '{ $6 = ($3*$4); print $0 }' lista
</code></pre>

<p>print permite colocar texto:</p>

<pre><code>$ awk ' { print "El sueldo de ",$2," es de ",$3*$4," euros."} ' lista 
</code></pre>

<p>Mostar las veces que aparece &#8220;banco&#8221;:</p>

<pre><code>awk 'BEGIN { print "Veces que aparece banco" }

&gt;        /banco/ { ++banco }

&gt;         END       { print "banco aparece " banco " veces." }' lista
</code></pre>

<p><strong>Variables internas:</strong></p>

<p>Mostrar el número de campos de cada linea (NF):</p>

<pre><code>$ awk ' { print NF } ' lista 
</code></pre>

<p>Mostrar el número de lineas (NR):</p>

<pre><code>$ awk ' { print NR } ' lista
</code></pre>

<p>Mostrar todas las lineas completas ($0):</p>

<pre><code>$ awk ' { print $0 } ' lista 
</code></pre>

<p>Mostrar las lineas que tengan al menos un campo</p>

<pre><code>$ awk 'NF &gt; 0' lista
</code></pre>

<p>Lo mismo con if:</p>

<pre><code>$ awk '{ if (NF &gt; 0) print }' lista
</code></pre>

<p>Dar formato a la salida de datos:</p>

<pre><code>$ awk ' $4 &gt; 0 { printf "%-8s .... %8.1f euros\n",$2,($3*$4) } ' lista 

$4 &gt; 0 (Que imprima los que la 4ª columna no sea cero.)

%-8s (Que imprima una cadena (s) justificada a la izquierda (-) en un campo de 8 caracteres de ancho.)

%8.1f (Que imprima un numero real (f), en un campo de ocho caracteres de ancho, con un decimal(.))
</code></pre>

<p>Imprimir cadena, justificada a la izquierda y en campos de 10 y 5 caracteres:</p>

<pre><code>$ awk '{ printf "%-10s %-10s %-5s %-5s %-5s\n", $1, $2, $3, $4, $5 }' lista
</code></pre>

<p>Parecido con más florituras (todo en una sola linea)</p>

<pre><code>$ awk 'BEGIN {print "nombre\tapellido\tprecio\thoras\tpago"; print  "------\t--------\t------\t-----\t----"}; {print $1"\t"$2"\t"$3"\t"$4"\t"$5 }' lista
</code></pre>

<p>Lo mismo más legible:</p>

<pre><code>$ awk 'BEGIN {print "nombre\tapellido\tprecio\thoras\tpago" 

&gt;             print "------\t--------\t------\t-----\t----"} 

&gt;            {print  $1"\t"$2"\t"$3"\t"$4"\t"$5 }' lista
</code></pre>

<p>BEGIN y END son patrones especiales usados para suministrar al script awk qué hacer antes de empezar a procesar y después de haber procesado los registros de la entrada.:</p>

<pre><code>$ awk 'BEGIN {print “Cuantas veces aparece la palabra banco” } 

&gt;       /banco/ { ++i } 

&gt;       END   {print “banco aparece “i” veces.”}' lista 
</code></pre>

<p>Los  patrones pueden combinarse mediante los operadores lógicos AND (&amp;&amp;), OR(||) y NOT(!).</p>

<p>Imprimir los nombres de los empleados que ganan mas de 6.50 euros a la hora y que han trabajado mas de 14:</p>

<pre><code>$ awk ' $3&gt;=6.50 &amp;&amp; $4&gt;=14 { print $1,$2 } ' lista 
</code></pre>

<p>Patrones</p>

<p>buscar las lineas que contienen la cadena &#8220;banco&#8221; en el 5º campo:</p>

<pre><code>$ awk ' $5 ~ /banco/ ' lista 
</code></pre>

<p>Buscar las lineas que no contengan la cadena &#8220;banco&#8221; en el 5º campo:</p>

<pre><code>$ awk '  $5 !~ /banco/ ' lista
</code></pre>

<p>Mostrar los que el 4º campo no empiece por 0 o 1:</p>

<pre><code>$ awk ' $4 ~ /^[^01]/' lista 
</code></pre>

<p>La salida también puede pasarse a un filtro para ordenarse:</p>

<pre><code>$ awk ' { print $2 | "sort" } ' lista
</code></pre>

<p>Mostrar la linea cuyo 2º campo termina en “iz”:</p>

<pre><code>$ awk '$2 ~ /iz$/' lista 
</code></pre>

<p>Mismo concepto sin especificar si la primera letra es mayúscula o minúscula y sin conocer la segunda:</p>

<pre><code>$ awk '$1 ~ /^[Cc]./' lista
</code></pre>

<p>Mismo concepto incluyendo las que empiezan por “R”:</p>

<pre><code>$ awk '$2 ~ /^[Cc].|^[R]/' lista 
</code></pre>

<p>“tolower” convierte el campo especificado a minúsculas:</p>

<pre><code>$ awk 'tolower($1) ~ /^m/' lista     
</code></pre>

<p>Para mandar cada linea a un archivo con el nombre del 2er campo:</p>

<pre><code>$ awk ' { print &gt; $2 } ' lista
</code></pre>

<p>Mandar el primer campo a un archivo y el segundo a otro:</p>

<pre><code>$ awk '{ print $1 &gt; "nombres"; print $2 &gt; "apellidos" }' lista
</code></pre>

<p>Lo mismo pero mandándolo ordenado:</p>

<pre><code>$ awk '{ print $1 | "sort &gt; nombres"; print $2 | "sort &gt; apellidos" }' lista 
</code></pre>

<p>Indicando caracter separador (un espacio y que imprima el 2º campo):</p>

<pre><code>$ awk  -F " " ' { print $2 } ' lista 
</code></pre>

<p>Lo mismo usando BEGIN:</p>

<pre><code>$ awk 'BEGIN { FS = " " } ; { print $2 }' lista
</code></pre>

<p>El siguiente  programa  muestra  como  puede usarse awk para validación de datos.</p>

<blockquote><p>$ cat validar</p></blockquote>

<pre><code>$3 &lt; 6.5   { print $1,$2 " ===&gt; precio por hora bajo", "("$3")" } 

$3 &gt; 8     { print $1,$2 " ===&gt; precio por hora alto", "("$3")" } 

$5 == "banco"    { print $1,$2 " ===&gt; Cobra por banco" } 

$5 == "metálico" { print $1,$2 " ===&gt; Cobra en metálico" } 
</code></pre>

<p>Se ejecuta con:</p>

<pre><code>$ awk -f validar lista 
</code></pre>

<p>Aunque también podríamos añadir que lo ordenara por orden alfabetico del segundo campo (-k2) separado del primero por un espacio(-t” “):</p>

<pre><code>$ awk -f validar lista | sort -t” “ -k2
</code></pre>

<p>Otros ejemplos:</p>

<pre><code>$ awk '/d.[0-9]/{print $4}' /proc/partitions  (listar todas las particiones)

$ cat 1.txt | awk '{print$1”\t”$2}'  (tabulando la salida)

$ cat 1.txt | awk '!/#/{print $0}' &gt; 2.txt  (Imprime todo menos las lineas comentadas y lo manda a un archivo)

$ cat 1.txt | awk 'BEGIN { FS="\n"; RS="" } { print $1 }' &gt; lista.txt (Manda a un archivo las primeras lineas precedidas de una en blanco)

$ who | awk '{print $1}'  (Mostrar todos los usuarios registrados)

$ awk '$1~/^DocumentRoot/{print $2}' /etc/apache2/sites-available/default (conocer la carpeta del servidor)

$ awk 'BEGIN { for (i = 1; i &lt;= 7; i++) print int(101 * rand()) }' (Escribir 7 números aleatorios del 0 al 100)

Creación de scripts con awk:
</code></pre>

<p>1.-</p>

<p>Imprimir el simple &#8220;Hola mundo cruel&#8221;</p>

<pre><code>#!/usr/bin/awk -f 

BEGIN { print "Hola mundo cruel" } 
</code></pre>

<p>Lo mismo pero incluido en un script de bash:</p>

<pre><code>#!/bin/bash

awk 'BEGIN { print "Hola mundo cruel" }'
</code></pre>

<p>2.-</p>

<p>Mandar el segundo campo de listado.txt a un archivo y el sexto a otro:</p>

<pre><code>#! /usr/bin/awk -f  

awk '{ print$2 &gt; "lista_nombres"

       print$6 &gt; "lista_telefonos" }' listado.txt 
</code></pre>

<p>3.-</p>

<p>Pasar el comando date&#8230; a variable [getline dia_actual], cerrar el comando [close] e imprimirlo en pantalla:</p>

<pre><code>#!/usr/bin/awk -f

BEGIN {

           "date +%d-%m-%Y" | getline dia_actual

           close("date +%d-%m-%Y")

           print "Hoy estamos a " dia_actual

}
</code></pre>

<p>En bash:</p>

<pre><code>awk 'BEGIN {

           "date +%d-%m-%Y" | getline dia_actual

           close("date +%d-%m-%Y")

           print "Hoy estamos a " dia_actual

}'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dropbox]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/dropbox/"/>
    <updated>2013-12-16T18:03:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/dropbox</id>
    <content type="html"><![CDATA[<p>Almacenamiento en la nube. Linea de comandos para el servicio Dropbox.</p>

<blockquote><p>$ dropbox status (Muestra el estado actual del demonio)</p>

<p>$ dropbox help update (Muestra información sobre el comando que se especifique)</p>

<p>$ dropbox puburl archivo (Muestra una URL de &#8220;archivo&#8221; para compartir)</p>

<p>$ dropbox stop (Para el servicio)</p>

<p>$ dropbox running (Comprobar si está activo el demonio)</p>

<p>$ dropbox update (Descargar la última versión de dropbox)</p>

<p>$ dropbox start (Arranca el servicio)</p>

<p>$ dropbox start -i (Arranca el servicio e instala el demonio dropboxd si no está disponible en el sistema)</p>

<p>$ dropbox filestatus -l -a directorio (Lista los archivos del directorio especificado incljuso los ocultos)</p>

<p>$ dropbox filestatus fichero (Muestra el estado del fichero)</p>

<p>$ dropbox autostart (Si respondemos &#8220;n&#8221; dropbox no se iniciará automáticamente al iniciar la sesión. Por defecto &#8220;y&#8221;: si)</p>

<p>$ dropbox exclude list (Muestra los directorios excluidos de la sincronización)</p>

<p>$ dropbox exclude add dir1 (Excluir un directorio de la sincronización)</p>

<p>$ dropbox exclude add dir1 dir2 (Excluir varios directorios)</p>

<p>$ dropbox exclude remove dir1 (Elimina un directorio de la lista de exclusión)</p>

<p>$ dropbox lansync (Por defecto usa sincronización LAN. Si respondemos &#8220;n&#8221; no la usará)</p></blockquote>

<p>1.-</p>

<p>Activar la carpeta &#8220;Public&#8221; en nuestra cuenta. Visitar la siguiente dirección web <a href="https://www.dropbox.com/enable_public_folder">https://www.dropbox.com/enable_public_folder</a></p>

<p>Tras la confirmacón aparecerá en nuestra cuenta de Dropbox.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[aewan]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/aewan/"/>
    <updated>2013-12-15T21:20:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/aewan</id>
    <content type="html"><![CDATA[<p>Editor de dibujos en ascii. Una vez lanzada la aplicacion con las teclas de funcion F1-F4, se accede a los menus. La aplicacion llama ^ a la tecla control y % a la tecla Alt.</p>

<p>Algunas teclas de control:</p>

<pre><code>Ctrl a (Abre un lienzo con las medidas por defecto)

Alt a (Pregunta por las medidas del lienzo)

Ctrl o (Abre un dibujo guardado previamente)

Ctrl s (Guarda el presente dibujo)

Ctrl w (Si tenemos mas de un dibujo, pasa al siguiente)

Ctrl q (Pasa al anterior)

Ctrl l (Muestra los lienzos abiertos y algunas opciones sobre ellos)

Ctrl d (Copiar el lienzo)

Ctrl r (Renombrar el lienzo)

Alt r (Modificar las medidas)

TAB (Abre el dialogo de colores)

Alt p (Seleciona el color de la celda donde esta el cursor)

Alt z (Llena la celda del color que se ha seleccionado con Alt p))

Ctrl e (Muestra los metadatos)

Ctrl c (Sale del programa)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zypper]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zypper/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zypper</id>
    <content type="html"><![CDATA[<p>Gestor de paquetes de opensuse (rpm)</p>

<blockquote><p># zypper (Generar una lista de paquetes instalados)</p>

<p># zypper repos (Listar repositorios)</p>

<p># zypper install paquete  (Instalar paquete)</p>

<p># zypper install rutadelpaquete (Instalar paquetes que no está en los repositorios)</p>

<p># zypper install &#8211;force paquete (Reinstalar)</p>

<p># zypper remove paquete (Desinstalar paquete)</p>

<p># zypper remove &#8211;clean-deps paquete (Desinstalar con dependencias)</p>

<p># zypper search paquete (Buscar paquete)</p>

<p># zypper help comando (ayuda para un comando)</p>

<p># zypper update (Actualizar base de datos y el sistema)</p>

<p># zypper info paquete (Buscar información de paquete)</p>

<p># zypper clean (Limpiar caché e información obsoleta)</p>

<p># zypper refresh (Actualizar información)</p>

<p># zypper dist-upgrade (Actualizar distro)</p>

<p># zypper al &#8216;paquete&#8217; (Descartar paquete para actualizaciones)</p>

<p># zypper rl &#8216;paquete&#8217; (Desbloquear paquete del bloqueo anterior)</p>

<p># zypper verify (Verificar dependencias)</p>

<p># zypper intall-new-recommends (Instalar paquetes recomendados)</p>

<p># zypper list-updates (Listar Actualizaciones disponibles)</p>

<p># zypper list-patches (Listar parches disponibles)</p>

<p># zypper patches (Instalar parches disponibles)</p>

<p># zypper addrepo rutadelrepositorio (Añadir repositorio)</p>

<p># zypper addrepo -f repositorio rutadelrepositorio (Añadir con actualización automática)</p>

<p># zypper modifyrepo &#8211;disable repositorio (Desactivar repositorio)</p>

<p># zypper removerepo nombredelrepositorio (Suprimir repositorio)</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zmore]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zmore/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zmore</id>
    <content type="html"><![CDATA[<p>Pagina la visualización de un fichero comprimido (Ver more)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zmap]]></title>
    <link href="https://tractatuslapipaplena.herokuapp.com/blog/zmap/"/>
    <updated>2013-12-15T18:59:00+01:00</updated>
    <id>https://tractatuslapipaplena.herokuapp.com/blog/zmap</id>
    <content type="html"><![CDATA[<p>Herramienta que permite escanear las direcciones IP de todo Internet en menos de 1 hora. Para incrementar la velocidad, el escaneo no se realiza por orden de número de IPs sinó a saltos. Desgarga:</p>

<blockquote><p>$ git clone https://github.com/zmap/zmap.git</p></blockquote>
]]></content>
  </entry>
  
</feed>
